{"version":3,"file":"js/exposed-./Creator.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/components/creator/meta.ts","webpack:///./src/components/creator/schema.tsx","webpack:///./src/components/creator/CreatorWizard.tsx","webpack:///./src/components/creator/CreatorPreview.tsx","webpack:///./src/Creator.tsx","webpack:///./src/components/WrappedQuickStartTile.tsx"],"sourcesContent":["import { QuickStartType } from '@patternfly/quickstarts';\n\nconst rawItemKindMeta = Object.freeze({\n  documentation: {\n    displayName: 'Documentation',\n    tagColor: 'orange',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      externalDocumentation: true,\n    },\n  },\n  quickstart: {\n    displayName: 'Quickstart',\n    tagColor: 'green',\n    hasDuration: true,\n    fields: {\n      duration: true,\n    },\n    hasTasks: true,\n    extraMetadata: {},\n  },\n  learningPath: {\n    displayName: 'Learning path',\n    tagColor: 'cyan',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      learningPath: true,\n    },\n  },\n  other: {\n    displayName: 'Other',\n    tagColor: 'purple',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      otherResource: true,\n    },\n  },\n} as const);\n\nexport type ItemMeta = {\n  displayName: string;\n  tagColor: QuickStartType['color'];\n  fields: {\n    url?: boolean;\n    duration?: boolean;\n  };\n  hasTasks?: boolean;\n  extraMetadata: object;\n};\n\nconst itemKindMeta: {\n  [k in keyof typeof rawItemKindMeta]: ItemMeta;\n} = rawItemKindMeta;\n\nexport type ItemKind = keyof typeof itemKindMeta;\n\nexport function isItemKind(kind: string): kind is ItemKind {\n  return Object.hasOwn(itemKindMeta, kind);\n}\n\nexport function metaForKind(kind: ItemKind): ItemMeta {\n  return itemKindMeta[kind];\n}\n\nexport const ALL_ITEM_KINDS = Object.freeze(\n  Object.keys(itemKindMeta)\n) as readonly ItemKind[];\n\nexport const ALL_KIND_ENTRIES: readonly [ItemKind, ItemMeta][] = Object.entries(\n  itemKindMeta\n).map(([k, v]) => {\n  if (!isItemKind(k)) throw new Error('unexpected item kind');\n  return [k, v];\n});\n","import {\n  ConditionProp,\n  Field,\n  FormSpy,\n  Schema,\n  componentTypes,\n  dataTypes,\n  validatorTypes,\n} from '@data-driven-forms/react-form-renderer';\nimport {\n  ALL_ITEM_KINDS,\n  ALL_KIND_ENTRIES,\n  ItemKind,\n  ItemMeta,\n  isItemKind,\n  metaForKind,\n} from './meta';\nimport { ChromeAPI } from '@redhat-cloud-services/types';\nimport {\n  WizardButtonsProps,\n  WizardProps,\n} from '@data-driven-forms/pf4-component-mapper';\nimport { WizardNextStepFunctionArgument } from '@data-driven-forms/pf4-component-mapper/wizard/wizard';\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\n\nconst CustomButtons = (props: WizardButtonsProps) => {\n  return (\n    <FormSpy\n      subscription={{\n        pristine: true,\n        valid: true,\n        validating: true,\n        values: true, // The next step can depend on values.\n      }}\n    >\n      {(state) => {\n        // Ensure that the form never says \"Submit\", and hide the button on the\n        // last step.\n\n        const computedNext = props.nextStep\n          ? props.selectNext(props.nextStep, () => state)\n          : undefined;\n\n        return (\n          <>\n            {computedNext !== undefined\n              ? props.renderNextButton({ submitLabel: 'Next' })\n              : null}\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              isDisabled={props.disableBack}\n              onClick={() => props.handlePrev()}\n            >\n              Back\n            </Button>\n          </>\n        );\n      }}\n    </FormSpy>\n  );\n};\n\nconst REQUIRED = {\n  type: validatorTypes.REQUIRED,\n} as const;\n\nfunction kindMetaCondition(test: (meta: ItemMeta) => boolean): ConditionProp {\n  return {\n    when: NAME_KIND,\n    is: (kind: string | undefined) => {\n      return (\n        typeof kind === 'string' && isItemKind(kind) && test(metaForKind(kind))\n      );\n    },\n  };\n}\n\ntype Bundles = ReturnType<ChromeAPI['getAvailableBundles']>;\n\nfunction detailsStepName(kind: ItemKind): string {\n  return `step-details-${kind}`;\n}\n\nexport const NAME_KIND = 'kind';\nexport const NAME_TITLE = 'title';\nexport const NAME_BUNDLES = 'bundles';\nexport const NAME_DESCRIPTION = 'description';\nexport const NAME_DURATION = 'duration';\nexport const NAME_URL = 'url';\n\nexport const NAME_PANEL_INTRODUCTION = 'panel-overview';\nexport const NAME_PREREQUISITES = 'prerequisites';\nexport const NAME_TASK_TITLES = 'task-titles';\n\nconst STEP_PANEL_OVERVIEW = 'step-panel-overview';\nconst STEP_DOWNLOAD = 'step-download';\n\nfunction makeDetailsStep(kind: ItemKind, bundles: Bundles) {\n  const meta = metaForKind(kind);\n\n  const fields: Field[] = [];\n\n  fields.push(\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_TITLE,\n      label: 'Title',\n      isRequired: true,\n      validate: [REQUIRED],\n    },\n    {\n      component: componentTypes.SELECT,\n      name: NAME_BUNDLES,\n      label: 'Bundles',\n      simpleValue: true,\n      isMulti: true,\n      options: bundles.map((b) => ({\n        value: b.id,\n        label: `${b.title} (${b.id})`,\n      })),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_DESCRIPTION,\n      label: 'Description',\n      isRequired: true,\n      validate: [REQUIRED],\n    }\n  );\n\n  if (meta.fields.duration) {\n    fields.push({\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_DURATION,\n      label: 'Duration',\n      dataType: dataTypes.NUMBER,\n      isRequired: true,\n      validate: [REQUIRED],\n    });\n  }\n\n  if (meta.fields.url) {\n    fields.push({\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_URL,\n      label: 'URL',\n      isRequired: true,\n      validate: [\n        REQUIRED,\n        {\n          type: validatorTypes.URL,\n        },\n      ],\n      condition: kindMetaCondition((meta) => meta.fields.url === true),\n    });\n  }\n\n  return {\n    name: detailsStepName(kind),\n    title: `${meta.displayName} details`,\n    fields: fields,\n    nextStep: meta.hasTasks ? STEP_PANEL_OVERVIEW : STEP_DOWNLOAD,\n  };\n}\n\nconst MAX_TASKS = 10;\n\nexport const NAME_TASKS_ARRAY = 'tasks';\nexport const NAME_TASK_CONTENT = 'content';\n\nconst TASK_STEP_PREFIX = 'step-task-detail-';\n\nfunction taskStepName(index: number): string {\n  return `${TASK_STEP_PREFIX}${index}`;\n}\n\nexport function taskFromStepName(name: string): number | null {\n  if (name.startsWith(TASK_STEP_PREFIX)) {\n    return parseInt(name.substring(TASK_STEP_PREFIX.length));\n  }\n\n  return null;\n}\n\nfunction makeTaskStep(index: number) {\n  return {\n    name: taskStepName(index),\n    title: `Task ${index + 1}`,\n    fields: [\n      {\n        component: componentTypes.TEXTAREA,\n        name: `${NAME_TASKS_ARRAY}[${index}].${NAME_TASK_CONTENT}`,\n        label: 'Task data (YAML)',\n        resizeOrientation: 'vertical',\n      },\n      {\n        component: 'lr-task-error',\n        name: `internal-task-errors[${index}]`,\n        index: index,\n      },\n    ],\n    nextStep: ({ values }: WizardNextStepFunctionArgument) => {\n      if (index + 1 < (values?.[NAME_TASK_TITLES]?.length ?? 0)) {\n        return taskStepName(index + 1);\n      }\n\n      return STEP_DOWNLOAD;\n    },\n  };\n}\n\nexport function makeSchema(chrome: ChromeAPI): Schema {\n  const bundles = chrome.getAvailableBundles();\n\n  const taskSteps = [];\n\n  for (let i = 0; i < MAX_TASKS; ++i) {\n    taskSteps.push(makeTaskStep(i));\n  }\n\n  const wizardProps: WizardProps & {\n    component: string;\n    name: string;\n  } = {\n    component: componentTypes.WIZARD,\n    name: 'wizard-learning-resource',\n    isDynamic: true,\n    crossroads: [NAME_KIND, NAME_TASK_TITLES],\n    fields: [\n      {\n        name: 'step-kind',\n        title: 'Select content type',\n        fields: [\n          {\n            component: componentTypes.SELECT,\n            name: NAME_KIND,\n            label: 'Type',\n            simpleValue: true,\n            options: ALL_KIND_ENTRIES.map(([name, value]) => ({\n              value: name,\n              label: value.displayName,\n            })),\n            isRequired: true,\n            validate: [REQUIRED],\n          },\n        ],\n        nextStep: {\n          when: NAME_KIND,\n          stepMapper: Object.fromEntries(\n            ALL_ITEM_KINDS.map((kind) => [kind, detailsStepName(kind)])\n          ),\n        },\n      },\n      ...ALL_ITEM_KINDS.map((kind) => makeDetailsStep(kind, bundles)),\n      {\n        name: STEP_PANEL_OVERVIEW,\n        title: 'Panel overview',\n        fields: [\n          {\n            component: componentTypes.TEXTAREA,\n            name: NAME_PANEL_INTRODUCTION,\n            label: 'Introduction (Markdown)',\n            resizeOrientation: 'vertical',\n          },\n          {\n            component: componentTypes.FIELD_ARRAY,\n            name: NAME_PREREQUISITES,\n            label: 'Prerequisites',\n            noItemsMessage: 'No prerequisites have been added.',\n            fields: [\n              {\n                component: componentTypes.TEXT_FIELD,\n                label: 'Prerequisite',\n              },\n            ],\n          },\n          {\n            component: componentTypes.FIELD_ARRAY,\n            name: NAME_TASK_TITLES,\n            label: 'Tasks',\n            minItems: 1,\n            maxItems: MAX_TASKS,\n            noItemsMessage: 'No tasks have been added.',\n            initialValue: [''],\n            fields: [\n              {\n                component: componentTypes.TEXT_FIELD,\n                label: 'Title',\n              },\n            ],\n          },\n        ],\n        nextStep: taskStepName(0),\n      },\n      ...taskSteps,\n      {\n        name: STEP_DOWNLOAD,\n        title: 'Download files',\n        fields: [\n          {\n            component: 'lr-download-files',\n            name: 'internal-download',\n          },\n        ],\n      },\n    ],\n  };\n\n  const schema = {\n    fields: [wizardProps],\n  };\n\n  for (const step of schema.fields) {\n    if (step.component === componentTypes.WIZARD) {\n      for (const page of step.fields) {\n        // Add an lr-wizard-spy component to all wizard steps. It must be here (rather\n        // than at the top level of the schema) so that it is inside the WizardContext.\n        page.fields.push({\n          component: 'lr-wizard-spy',\n          name: `internal-wizard-spies.${page.name}`,\n        });\n\n        // Use custom buttons for each step.\n        if (page.buttons === undefined) {\n          page.buttons = CustomButtons;\n        }\n      }\n    }\n  }\n\n  return schema;\n}\n","import {\n  Button,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n} from '@patternfly/react-core';\nimport DownloadIcon from '@patternfly/react-icons/dist/dynamic/icons/download-icon';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { ItemKind, isItemKind, metaForKind } from './meta';\nimport { CreatorErrors } from '../../Creator';\nimport { QuickStartSpec } from '@patternfly/quickstarts';\nimport {\n  AnyObject,\n  FormRenderer,\n  FormSpy,\n} from '@data-driven-forms/react-form-renderer';\nimport DdfWizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport pf4ComponentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport {\n  NAME_BUNDLES,\n  NAME_DESCRIPTION,\n  NAME_DURATION,\n  NAME_KIND,\n  NAME_PANEL_INTRODUCTION,\n  NAME_PREREQUISITES,\n  NAME_TASKS_ARRAY,\n  NAME_TASK_TITLES,\n  NAME_TITLE,\n  NAME_URL,\n  makeSchema,\n  taskFromStepName,\n} from './schema';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\n\nexport type TaskState = {\n  title: string;\n  yamlContent: string;\n};\n\nexport const EMPTY_TASK: TaskState = {\n  title: '',\n  yamlContent: '',\n};\n\ntype CreatorFiles = {\n  name: string;\n  content: string;\n}[];\n\ntype CreatorWizardProps = {\n  onChangeKind: (newKind: ItemKind | null) => void;\n  onChangeQuickStartSpec: (newValue: QuickStartSpec) => void;\n  onChangeBundles: (newValue: string[]) => void;\n  onChangeTaskContents: (contents: string[]) => void;\n  onChangeCurrentTask: (index: number | null) => void;\n  files: CreatorFiles;\n  errors: CreatorErrors;\n};\n\ntype FormValue = AnyObject;\n\ntype UpdaterProps = {\n  values: FormValue;\n  onChangeKind: (newKind: ItemKind | null) => void;\n  onChangeBundles: (bundles: string[]) => void;\n  onChangeQuickStartSpec: (newValue: QuickStartSpec) => void;\n  onChangeTaskContents: (contents: string[]) => void;\n};\n\nconst DEFAULT_TASK_TITLES: string[] = [''];\n\nconst PropUpdater = ({\n  values,\n  onChangeKind,\n  onChangeBundles,\n  onChangeQuickStartSpec,\n  onChangeTaskContents,\n}: UpdaterProps) => {\n  const bundles = values[NAME_BUNDLES];\n\n  useEffect(() => {\n    onChangeBundles(bundles ?? []);\n  }, [bundles]);\n\n  const rawKind: string | undefined = values[NAME_KIND];\n  const title: string | undefined = values[NAME_TITLE];\n  const description: string | undefined = values[NAME_DESCRIPTION];\n  const url: string | undefined = values[NAME_URL];\n  const duration: number | string | undefined = values[NAME_DURATION];\n  const prerequisites: string[] | undefined = values[NAME_PREREQUISITES];\n  const introduction: string | undefined = values[NAME_PANEL_INTRODUCTION];\n\n  const taskTitles: string[] = values[NAME_TASK_TITLES] ?? DEFAULT_TASK_TITLES;\n  const taskValues: { content: string | undefined }[] | undefined =\n    values[NAME_TASKS_ARRAY];\n\n  const kind =\n    typeof rawKind === 'string' && isItemKind(rawKind) ? rawKind : null;\n\n  const meta = kind !== null ? metaForKind(kind) : null;\n\n  useEffect(() => {\n    onChangeKind(kind);\n  }, [kind]);\n\n  const taskContents = useMemo(() => {\n    if (meta?.hasTasks !== true) {\n      return [];\n    }\n\n    const effective = [];\n\n    for (let i = 0; i < (taskTitles?.length ?? 0); ++i) {\n      effective.push(taskValues?.[i]?.content ?? '');\n    }\n\n    return effective;\n  }, [meta, taskTitles, taskValues]);\n\n  useEffect(() => {\n    onChangeQuickStartSpec({\n      type:\n        meta !== null\n          ? {\n              text: meta.displayName,\n              color: meta.tagColor,\n            }\n          : undefined,\n      displayName: title ?? '',\n      description: description ?? '',\n      icon: null,\n      link:\n        meta?.fields?.url && url !== undefined\n          ? {\n              text: 'View documentation',\n              href: url,\n            }\n          : undefined,\n      durationMinutes:\n        meta?.fields?.duration && typeof duration === 'number'\n          ? duration\n          : undefined,\n      prerequisites: meta?.hasTasks === true ? prerequisites : undefined,\n      introduction: meta?.hasTasks === true ? introduction : undefined,\n      tasks:\n        meta?.hasTasks === true\n          ? (taskTitles ?? []).map((t) => ({ title: t }))\n          : undefined,\n    });\n  }, [\n    meta,\n    rawKind,\n    title,\n    description,\n    url,\n    duration,\n    prerequisites,\n    introduction,\n    taskTitles,\n  ]);\n\n  useEffect(() => {\n    onChangeTaskContents(taskContents);\n  }, [taskContents]);\n\n  // Allow use as JSX component\n  return undefined;\n};\n\nconst CreatorWizardContext = React.createContext<{\n  errors: CreatorErrors;\n  files: CreatorFiles;\n  onChangeCurrentTask: (index: number | null) => void;\n}>({\n  errors: {\n    taskErrors: new Map(),\n  },\n  files: [],\n  onChangeCurrentTask: () => {},\n});\n\nconst TaskErrorPreview = ({ index }: { index: number }) => {\n  const context = useContext(CreatorWizardContext);\n  const error = context.errors.taskErrors.get(index);\n\n  return error !== undefined ? (\n    <pre style={{ whiteSpace: 'pre-wrap' }}>{error}</pre>\n  ) : undefined;\n};\n\nconst FileDownload = () => {\n  const { files } = useContext(CreatorWizardContext);\n\n  return (\n    <div>\n      Download these files.\n      {files.map((file) => (\n        <div key={file.name}>\n          <Button\n            variant=\"secondary\"\n            icon={<DownloadIcon />}\n            onClick={() => {\n              const dotIndex = file.name.lastIndexOf('.');\n              const baseName =\n                dotIndex !== -1 ? file.name.substring(0, dotIndex) : file.name;\n              const extension =\n                dotIndex !== -1 ? file.name.substring(dotIndex + 1) : 'txt';\n\n              downloadFile(file.content, baseName, extension);\n            }}\n          >\n            {file.name}\n          </Button>\n\n          <ClipboardCopy\n            isCode\n            isReadOnly\n            variant={ClipboardCopyVariant.expansion}\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n          >\n            {file.content}\n          </ClipboardCopy>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Watches for changes in the current step, then calls onChangeCurrentTask so\n// that Creator can update the live preview.\nconst WizardSpy = () => {\n  const wizardContext = useContext(DdfWizardContext);\n  const creatorContext = useContext(CreatorWizardContext);\n\n  useEffect(() => {\n    creatorContext.onChangeCurrentTask(\n      taskFromStepName(wizardContext.currentStep.name)\n    );\n  }, [wizardContext.currentStep.name]);\n\n  return undefined;\n};\n\nconst CreatorWizard = ({\n  onChangeKind,\n  onChangeQuickStartSpec,\n  onChangeBundles,\n  onChangeTaskContents,\n  onChangeCurrentTask,\n  files,\n  errors,\n}: CreatorWizardProps) => {\n  const chrome = useChrome();\n  const schema = useMemo(() => makeSchema(chrome), []);\n\n  const context = useMemo(\n    () => ({\n      errors,\n      files,\n      onChangeCurrentTask,\n    }),\n    [errors, files]\n  );\n\n  const componentMapper = {\n    ...pf4ComponentMapper,\n    'lr-task-error': TaskErrorPreview,\n    'lr-download-files': FileDownload,\n    'lr-wizard-spy': WizardSpy,\n  };\n\n  return (\n    <CreatorWizardContext.Provider value={context}>\n      <FormRenderer\n        onSubmit={() => {}}\n        schema={schema}\n        componentMapper={componentMapper}\n      >\n        {({ formFields }) => (\n          <form onSubmit={(e) => e.preventDefault()} className=\"pf-v5-c-form\">\n            <FormSpy subscription={{ values: true }}>\n              {/*\n            In order to display the live preview, we need to update the parent\n            whenever the form state changes. Unfortunately, as best as I can\n            tell, there is no way to pass FormRenderer a callback that's called\n            whenever a value changes.\n\n            The example at [0] shows using a custom component in the schema to\n            watch the values, but it seems clearer to just add it once here\n            (and it avoids introducing another custom component name).\n\n            [0]: https://github.com/data-driven-forms/react-forms/blob/master/packages/react-renderer-demo/src/examples/components/examples/value-listener.js\n             */}\n              {(props) => (\n                <PropUpdater\n                  values={props.values}\n                  onChangeKind={onChangeKind}\n                  onChangeBundles={onChangeBundles}\n                  onChangeQuickStartSpec={onChangeQuickStartSpec}\n                  onChangeTaskContents={onChangeTaskContents}\n                />\n              )}\n            </FormSpy>\n            <>{formFields}</>\n          </form>\n        )}\n      </FormRenderer>\n    </CreatorWizardContext.Provider>\n  );\n};\n\nexport default CreatorWizard;\n","import {\n  AllQuickStartStates,\n  QuickStart,\n  QuickStartContext,\n  QuickStartDrawer,\n  QuickStartStatus,\n  useValuesForQuickStartContext,\n} from '@patternfly/quickstarts';\nimport { Title } from '@patternfly/react-core';\nimport WrappedQuickStartTile from '../WrappedQuickStartTile';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { ItemMeta } from './meta';\nimport './CreatorPreview.scss';\n\nconst CreatorPreview = ({\n  kindMeta,\n  quickStart,\n  currentTask,\n}: {\n  kindMeta: ItemMeta | null;\n  quickStart: QuickStart;\n  currentTask: number | null;\n}) => {\n  const allQuickStarts = useMemo(() => [quickStart], [quickStart]);\n  const [quickStartStates, setQuickStartStates] = useState<AllQuickStartStates>(\n    {}\n  );\n\n  const [prevTask, setPrevTask] = useState<number | null>(currentTask);\n\n  const parentContext = useContext(QuickStartContext);\n\n  const quickstartValues = useValuesForQuickStartContext({\n    allQuickStarts: [quickStart],\n    activeQuickStartID:\n      kindMeta?.hasTasks === true ? quickStart.metadata.name : '',\n    setActiveQuickStartID: () => {},\n    allQuickStartStates: quickStartStates,\n    setAllQuickStartStates: (states) => setQuickStartStates(states),\n    useQueryParams: false,\n    footer: parentContext.footer,\n    focusOnQuickStart: false,\n  });\n\n  if (quickstartValues.allQuickStarts?.[0] !== quickStart) {\n    quickstartValues.setAllQuickStarts?.([quickStart]);\n  }\n\n  if (\n    prevTask !== currentTask ||\n    quickstartValues?.activeQuickStartState === undefined\n  ) {\n    setPrevTask(currentTask);\n\n    if (currentTask !== null) {\n      quickstartValues.setQuickStartTaskNumber?.(\n        quickStart.metadata.name,\n        currentTask\n      );\n    } else {\n      quickstartValues.restartQuickStart?.(\n        quickStart.metadata.name,\n        quickStart.spec.tasks?.length ?? 0\n      );\n    }\n  }\n\n  return (\n    <QuickStartContext.Provider value={quickstartValues}>\n      <QuickStartDrawer quickStarts={allQuickStarts}>\n        <section>\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mb-md\">\n            Live card preview\n          </Title>\n\n          <div className=\"rc-tile-preview-wrapper\">\n            <WrappedQuickStartTile\n              quickStart={quickStart}\n              bookmarks={null}\n              isActive={false}\n              status={QuickStartStatus.NOT_STARTED}\n            />\n          </div>\n        </section>\n      </QuickStartDrawer>\n    </QuickStartContext.Provider>\n  );\n};\n\nexport default CreatorPreview;\n","import React, { useMemo, useState } from 'react';\nimport YAML, { YAMLError } from 'yaml';\nimport {\n  Grid,\n  GridItem,\n  PageGroup,\n  PageSection,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  QuickStart,\n  QuickStartSpec,\n  QuickStartTask,\n} from '@patternfly/quickstarts';\nimport CreatorWizard, { EMPTY_TASK } from './components/creator/CreatorWizard';\nimport { ItemKind, metaForKind } from './components/creator/meta';\nimport CreatorPreview from './components/creator/CreatorPreview';\n\nexport type CreatorErrors = {\n  taskErrors: Map<number, string>;\n};\n\nconst BASE_METADATA = {\n  name: 'test-quickstart',\n};\n\nfunction makeDemoQuickStart(\n  kind: ItemKind | null,\n  baseQuickStart: QuickStart,\n  taskContents: string[]\n): [QuickStart, CreatorErrors] {\n  const kindMeta = kind !== null ? metaForKind(kind) : null;\n\n  const [tasks, taskErrors] = (() => {\n    if (kindMeta?.hasTasks !== true) return [undefined, new Map()];\n\n    const out: QuickStartTask[] = [];\n    const errors: CreatorErrors['taskErrors'] = new Map();\n\n    if (baseQuickStart.spec.tasks !== undefined) {\n      for (let index = 0; index < baseQuickStart.spec.tasks.length; ++index) {\n        const task = baseQuickStart.spec.tasks[index];\n\n        try {\n          out.push({\n            ...YAML.parse(taskContents[index]),\n            title: task.title,\n          });\n        } catch (e) {\n          if (!(e instanceof YAMLError)) throw e;\n\n          out.push({ ...EMPTY_TASK, title: task.title });\n          errors.set(index, e.message);\n        }\n      }\n    }\n\n    return [out, errors];\n  })();\n\n  return [\n    {\n      ...baseQuickStart,\n      metadata: {\n        ...baseQuickStart.metadata,\n        name: 'test-quickstart',\n        ...(kindMeta?.extraMetadata ?? {}),\n      },\n      spec: {\n        ...baseQuickStart.spec,\n        tasks: tasks,\n      },\n    },\n    { taskErrors },\n  ];\n}\n\nconst Creator = () => {\n  const [rawKind, setRawKind] = useState<ItemKind | null>(null);\n\n  const [rawQuickStart, setRawQuickStart] = useState<QuickStart>({\n    metadata: {\n      name: 'test-quickstart',\n    },\n    spec: {\n      displayName: '',\n      icon: null,\n      description: '',\n    },\n  });\n\n  const selectedKind =\n    rawKind !== null ? { id: rawKind, meta: metaForKind(rawKind) } : null;\n\n  const [bundles, setBundles] = useState<string[]>([]);\n  const [taskContents, setTaskContents] = useState<string[]>([]);\n\n  const [currentTask, setCurrentTask] = useState<number | null>(null);\n\n  const updateSpec = (\n    updater: (old: QuickStartSpec) => Partial<QuickStartSpec>\n  ) => {\n    setRawQuickStart((old) => ({\n      ...old,\n      spec: {\n        ...old.spec,\n        ...updater(old.spec),\n      },\n    }));\n  };\n\n  const setKind = (newKind: ItemKind | null) => {\n    if (newKind !== null) {\n      const meta = metaForKind(newKind);\n\n      setRawQuickStart((old) => {\n        const updates: Partial<QuickStart> = {};\n\n        updates.spec = { ...old.spec };\n\n        updates.spec.type = {\n          text: meta.displayName,\n          color: meta.tagColor,\n        };\n\n        if (\n          meta.hasTasks &&\n          (old.spec.tasks === undefined || old.spec.tasks.length === 0)\n        ) {\n          updates.spec.tasks = [EMPTY_TASK];\n        }\n\n        if (!meta.hasTasks) {\n          updates.spec.tasks = undefined;\n          updates.spec.introduction = undefined;\n          updates.spec.prerequisites = [];\n        }\n\n        if (!meta.fields.url) updates.spec.link = undefined;\n        if (!meta.fields.duration) updates.spec.durationMinutes = undefined;\n\n        updates.metadata = { ...BASE_METADATA, ...meta.extraMetadata };\n\n        return { ...old, ...updates };\n      });\n\n      if (meta.hasTasks) {\n        setTaskContents((old) => (old.length === 0 ? [''] : old));\n      } else if (!meta.hasTasks) {\n        setTaskContents([]);\n      }\n    }\n\n    setRawKind(newKind);\n  };\n\n  const [quickStart, errors] = useMemo(\n    () => makeDemoQuickStart(rawKind, rawQuickStart, taskContents),\n    [rawKind, rawQuickStart, taskContents]\n  );\n\n  const files = useMemo(() => {\n    const effectiveName = quickStart.spec.displayName\n      .toLowerCase()\n      .replaceAll(/\\s/g, '-')\n      .replaceAll(/(^-+)|(-+$)/g, '');\n\n    const adjustedQuickstart = { ...quickStart };\n    adjustedQuickstart.spec = { ...adjustedQuickstart.spec };\n    adjustedQuickstart.metadata = {\n      ...adjustedQuickstart.metadata,\n      name: effectiveName,\n    };\n\n    delete adjustedQuickstart.spec['icon'];\n\n    return [\n      {\n        name: 'metadata.yaml',\n        content: YAML.stringify({\n          kind: 'QuickStarts',\n          name: effectiveName,\n          tags: bundles\n            .toSorted()\n            .map((bundle) => ({ kind: 'bundle', value: bundle })),\n        }),\n      },\n      {\n        name: `${effectiveName}.yaml`,\n        content: YAML.stringify(adjustedQuickstart),\n      },\n    ];\n  }, [quickStart, bundles]);\n\n  if ((quickStart.spec.tasks?.length ?? 0) != taskContents.length) {\n    throw new Error(\n      `Mismatch between quickstart tasks and task contents: ${quickStart.spec.tasks?.length} vs ${taskContents.length}`\n    );\n  }\n\n  return (\n    <PageGroup>\n      <PageSection variant=\"darker\">\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          Add new learning resources\n        </Title>\n\n        <p>Description</p>\n      </PageSection>\n\n      <PageSection isFilled>\n        <Grid hasGutter className=\"pf-v5-u-h-100 pf-v5-u-w-100\">\n          <GridItem span={12} lg={6}>\n            <CreatorWizard\n              onChangeKind={setKind}\n              onChangeQuickStartSpec={(spec) => {\n                updateSpec(() => spec);\n              }}\n              onChangeBundles={setBundles}\n              onChangeTaskContents={setTaskContents}\n              onChangeCurrentTask={setCurrentTask}\n              errors={errors}\n              files={files}\n            />\n          </GridItem>\n\n          <GridItem span={12} lg={6}>\n            <CreatorPreview\n              kindMeta={selectedKind?.meta ?? null}\n              quickStart={quickStart}\n              currentTask={currentTask}\n            />\n          </GridItem>\n        </Grid>\n      </PageSection>\n    </PageGroup>\n  );\n};\n\nexport default Creator;\n","import React, { SyntheticEvent } from 'react';\nimport {\n  QuickStart,\n  QuickStartStatus,\n  QuickStartTile,\n} from '@patternfly/quickstarts';\n\nimport { BookmarkIcon, OutlinedBookmarkIcon } from '@patternfly/react-icons';\nimport { Icon } from '@patternfly/react-core';\nimport './WrappedQuickStartTile.scss';\n\nconst OutlinedBookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <OutlinedBookmarkIcon />\n  </Icon>\n);\n\nconst BookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <BookmarkIcon />\n  </Icon>\n);\n\ntype BookmarksConfig = {\n  isFavorite: boolean;\n  setFavorite: (newState: boolean) => Promise<void>;\n} | null;\n\nconst WrappedQuickStartTile = ({\n  quickStart,\n  bookmarks,\n  isActive,\n  status,\n}: {\n  quickStart: QuickStart;\n  bookmarks: BookmarksConfig;\n  isActive: boolean;\n  status: QuickStartStatus;\n}) => {\n  return (\n    <div className=\"lr-c-quickstart_tile\">\n      <QuickStartTile\n        action={\n          bookmarks !== null\n            ? {\n                'aria-label': bookmarks.isFavorite\n                  ? `Remove quickstart ${quickStart.spec.displayName} from bookmarks.`\n                  : `Bookmark quickstart ${quickStart.spec.displayName}.`,\n                icon: bookmarks.isFavorite\n                  ? BookmarkedIcon\n                  : OutlinedBookmarkedIcon,\n                onClick: (e: SyntheticEvent<Element, Event>): void => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  bookmarks.setFavorite(!bookmarks.isFavorite);\n                },\n              }\n            : undefined\n        }\n        quickStart={{\n          ...quickStart,\n          spec: {\n            ...quickStart.spec,\n            // remove any lingering icons\n            icon: null,\n          },\n        }}\n        isActive={isActive}\n        status={status}\n      />\n    </div>\n  );\n};\n\nexport default WrappedQuickStartTile;\n"],"names":["itemKindMeta","Object","freeze","documentation","displayName","tagColor","fields","url","extraMetadata","externalDocumentation","quickstart","hasDuration","duration","hasTasks","learningPath","other","otherResource","isItemKind","kind","hasOwn","metaForKind","ALL_ITEM_KINDS","keys","ALL_KIND_ENTRIES","entries","map","k","v","Error","CustomButtons","props","subscription","pristine","valid","validating","values","state","computedNext","nextStep","selectNext","undefined","renderNextButton","submitLabel","Button","type","variant","isDisabled","disableBack","onClick","handlePrev","REQUIRED","detailsStepName","NAME_KIND","NAME_TITLE","NAME_BUNDLES","NAME_DESCRIPTION","NAME_DURATION","NAME_PANEL_INTRODUCTION","NAME_PREREQUISITES","NAME_TASK_TITLES","STEP_PANEL_OVERVIEW","STEP_DOWNLOAD","NAME_TASKS_ARRAY","NAME_TASK_CONTENT","TASK_STEP_PREFIX","taskStepName","index","makeTaskStep","name","title","component","TEXTAREA","label","resizeOrientation","length","EMPTY_TASK","yamlContent","DEFAULT_TASK_TITLES","PropUpdater","onChangeKind","onChangeBundles","onChangeQuickStartSpec","onChangeTaskContents","bundles","useEffect","rawKind","description","prerequisites","introduction","taskTitles","taskValues","meta","taskContents","useMemo","effective","i","push","content","text","color","icon","link","href","durationMinutes","tasks","t","CreatorWizardContext","errors","taskErrors","Map","files","onChangeCurrentTask","TaskErrorPreview","error","useContext","get","style","whiteSpace","FileDownload","file","key","dotIndex","lastIndexOf","baseName","substring","extension","ClipboardCopy","isCode","isReadOnly","expansion","hoverTip","clickTip","WizardSpy","wizardContext","creatorContext","currentStep","startsWith","parseInt","chrome","useChrome","schema","getAvailableBundles","taskSteps","WIZARD","isDynamic","crossroads","SELECT","simpleValue","options","value","isRequired","validate","when","stepMapper","fromEntries","test","TEXT_FIELD","isMulti","b","id","dataType","NUMBER","URL","condition","is","makeDetailsStep","FIELD_ARRAY","noItemsMessage","minItems","maxItems","initialValue","step","page","buttons","makeSchema","context","componentMapper","Provider","onSubmit","formFields","e","preventDefault","className","kindMeta","quickStart","currentTask","allQuickStarts","quickStartStates","setQuickStartStates","useState","prevTask","setPrevTask","parentContext","QuickStartContext","quickstartValues","useValuesForQuickStartContext","activeQuickStartID","metadata","setActiveQuickStartID","allQuickStartStates","setAllQuickStartStates","states","useQueryParams","footer","focusOnQuickStart","setAllQuickStarts","activeQuickStartState","setQuickStartTaskNumber","restartQuickStart","spec","QuickStartDrawer","quickStarts","Title","headingLevel","size","WrappedQuickStartTile","bookmarks","isActive","status","QuickStartStatus","NOT_STARTED","BASE_METADATA","setRawKind","rawQuickStart","setRawQuickStart","selectedKind","setBundles","setTaskContents","setCurrentTask","baseQuickStart","out","task","set","message","makeDemoQuickStart","effectiveName","toLowerCase","replaceAll","adjustedQuickstart","tags","toSorted","bundle","PageGroup","PageSection","isFilled","Grid","hasGutter","GridItem","span","lg","newKind","old","updates","updater","OutlinedBookmarkedIcon","BookmarkedIcon","QuickStartTile","action","isFavorite","stopPropagation","setFavorite"],"sourceRoot":""}