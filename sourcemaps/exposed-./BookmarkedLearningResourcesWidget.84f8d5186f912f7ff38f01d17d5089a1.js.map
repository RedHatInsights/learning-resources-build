{"version":3,"file":"js/exposed-./BookmarkedLearningResourcesWidget.869436eec1a6480c0a8e.js","mappings":"uLAIO,MAAMA,EAAeC,IACxB,IAAI,SAAEC,EAAQ,UAAEC,EAAY,GAAE,UAAEC,GAAY,GAAUH,EAAII,GAAQ,IAAAC,QAAOL,EAAI,CAAC,WAAY,YAAa,cACvG,OAAQ,gBAAoB,MAAOM,OAAOC,OAAO,CAAC,EAAGH,EAAO,CAAEF,WAAW,OAAI,IAAOM,QAASL,GAAa,IAAOM,UAAUC,QAASR,KAAeD,EAAU,EAEjKF,EAAYY,YAAc,a,gGCJnB,MAAMC,EAAYZ,IACrB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,UAAEW,EAAY,OAAUb,EAAII,GAAQ,IAAAC,QAAOL,EAAI,CAAC,WAAY,YAAa,cAC9G,MAAMc,EAAYD,EAClB,OAAQ,gBAAoBC,EAAWR,OAAOC,OAAO,CAAEL,WAAW,OAAI,IAAOa,SAAUb,IAAcE,GAAQH,EAAU,EAE3HW,EAASD,YAAc,U,yDCRvB,SACE,SAAY,mB,+DCFVK,EAAsC,WAStC,OARAA,EAAWV,OAAOC,QAAU,SAASU,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOb,OAAOkB,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOD,EAASW,MAAMC,KAAMP,UAChC,EAYA,QAVgB,SAAUQ,GACtB,IAAI7B,EACA8B,GAAQ,IAAAC,eACRC,GAA+B,QAApBhC,EAAK8B,EAAMG,WAAwB,IAAPjC,OAAgB,EAASA,EAAGgC,SAAW,CAAC,EAEnF,OADAA,EAAShB,EAASA,EAAS,CAAC,EAAGgB,GAAS,CAAEE,YAAaJ,EAAMI,cACrC,mBAAbL,EACAA,EAASG,GAEbA,CACX,C,kUCqBA,EA7B6D,IAEzD,kBAACG,EAAA,EAAU,CAACC,QAASD,EAAA,EAAkBE,GAAInC,UAAU,iBACnD,kBAACoC,EAAA,EAAgB,CACfC,UAAU,mCACVC,KAAM,yBAAKC,IAAK,IAChBC,aAAa,OAEf,kBAACC,EAAA,EAAc,KACb,kBAACC,EAAA,EAAK,KACJ,kBAACC,EAAA,EAAS,oHAMd,kBAACC,EAAA,EAAgB,CAAC5C,UAAU,iBAC1B,kBAAC6C,EAAA,GAAM,CACLX,QAAQ,YACRvB,UAAU,IACVmC,KAAK,6CAA2C,iC,iFCTnD,MAAMC,EAAW,sBACXC,EAAc,eACdC,EAAY,aAOnBC,EAAc,EAClBC,WACAC,YAKA,MAAM,oBAAEC,IAAwB,EAAAC,EAAA,KAChC,OACE,kBAAC,EAAAC,KAAI,CAACC,QAAS,IAAMH,EAAoBD,GAAQK,GAAIN,GAClDC,EAEJ,EAGGM,EAED,EAAGC,eAMJ,6BACwB,IAArBA,EAAUvC,OACT,kBAAC,EAA2B,MAE5B,kBAACwC,EAAA,EAAO,CAAC5D,UAAU,yCAAyC6D,WAAS,GAClEF,EAAUG,KAAI,EAAGC,OAAMC,YAAYC,KAAU,OAC5C,yBAAKC,IAAKD,GACR,kBAACpE,EAAA,EAAW,KACTmE,EAASG,sBACR,uBAAGrB,KAAMiB,EAAKK,MAAMtB,KAAMuB,OAAO,SAASC,IAAI,cAC3CP,EAAKtD,YACN,kBAAC8D,EAAA,EAAI,CAACvE,UAAU,gBAAgBwE,UAAQ,GACtC,kBAAC,KAAmB,QAIxB,kBAACtB,EAAW,CACVE,MAAOW,EAAKtD,YACZ0C,SAAUY,EAAKK,MAAMtB,MAAQ,MAInC,kBAAC2B,EAAA,EAAI,CAACC,UAAW,CAAEC,QAAS,QAC1B,kBAACC,EAAA,EAAQ,CAAC5E,UAAU,iBACjB+D,EAAKc,MACJ,kBAACC,EAAA,EAAK,CAACC,MAAOhB,EAAKc,KAAKE,OAAQhB,EAAKc,KAAKG,OAG9C,kBAACJ,EAAA,EAAQ,KACP,kBAAC/E,EAAA,EAAW,KACV,kBAACoF,EAAA,EAAI,CAACtE,UAAWsE,EAAA,EAAaC,OAC3BnB,EAAKK,MAAMtB,MApCXqC,EAoC8BpB,EAAKK,MAAMtB,KAnCrD,IAAIsC,IAAID,GAAKE,MAmCgD,QApClD,IAACF,CA0CZ,MAOLG,EAAe,EACnBC,iBACAC,aAKA,MAAM,UAAE7B,EAAS,aAAE8B,IAAiB,EAAAC,EAAA,IAAeF,GAMnD,OALA,IAAAG,YAAU,KACJF,GACFF,EAAe5B,EACjB,GACC,CAAC8B,IACG,IAAI,EA0Bb,EAvBuC,KACrC,MAAM,oBAAEG,IAAwB,EAAAtC,EAAA,MACzBuC,EAAcC,IAAmB,IAAAC,UAAyB,IACjE,OACE,kBAAC,EAAAC,SAAQ,KACNJ,IAAsB9B,KAAI,EAAGmC,MAAMhC,IAClC,kBAACqB,EAAY,CACXE,OAAQS,EACR/B,IAAKD,EACLsB,eAAiBW,GAASJ,GAAiBK,GAAS,IAAIA,EAAMD,SAGjEL,EAAazE,SAAWwE,IAAsBxE,OAC7C,kBAACV,EAAA,EAAQ,KACP,kBAAC0F,EAAA,EAAO,OAGV,kBAAC1C,EAAuB,CAACC,UAAWkC,EAAaQ,SAGtD,C,wGC9HI,MAAMtD,EAAW,sBACXC,EAAc,eACdC,EAAY,aAOnBqD,EAAU,CAACC,EAAgBC,IAC/BD,EAAGxC,KAAKtD,YAAYgG,cAAcD,EAAGzC,KAAKtD,aA4J5C,EAtJwBiG,IACtB,MAAM5E,GAAS,UACP6E,YAAaC,GAAmB9E,GACjC2D,EAAcoB,IAAmB,IAAAd,WAAS,IAC1Ce,EAAWC,IAAgB,IAAAhB,UAA+B,KAC3D,oBACJiB,EAAmB,eACnBC,EAAiB,GAAE,OACnBC,IACE,IAAAC,YAAoC,EAAAC,mBAElCxF,GAAQ,IAAAyF,UAAQ,KACQ,IAAAC,mBAC1BL,GAAkB,GAClBC,GAAQK,SAAW,GACnBL,GAAQM,QAAQC,cAChBT,GAAuB,CAAC,GACxBU,KAAKpB,GACoBqB,QAOzB,CAACC,EAAKC,KACJ,MAAMC,EA9Bd,SAAoBC,EAAwBjB,GAC1C,QAASA,EAAUkB,MAAMC,GAAMA,EAAEC,iBAAmBH,EAAW/D,SAASmE,MAC1E,CA4B2BC,CAAWP,EAAMf,GAC9BZ,EAAO,IACR2B,EACH7D,SAAU,IACL6D,EAAK7D,SACRqE,SAAUP,IAgBd,OAbIA,GACFF,EAAIjE,UAAU2E,KAAKpC,GAEjB2B,EAAK7D,SAASG,sBAChByD,EAAIW,cAAcD,KAAKpC,GACd2B,EAAK7D,SAASwE,cACvBZ,EAAIa,MAAMH,KAAKpC,GACN2B,EAAK7D,SAAS0E,aACvBd,EAAIe,cAAcL,KAAKpC,GAEvB0B,EAAIjB,YAAY2B,KAAKpC,GAGhB0B,CAAG,GAEZ,CACEW,cAAe,GACf5B,YAAa,GACb8B,MAAO,GACPE,cAAe,GACfhF,UAAW,MAGd,CAACsD,EAAgBC,EAAQJ,IAiD5B8B,eAAeC,EAAeX,EAAwBG,GACpD,MAAMS,EAAoB,IAAIhC,GACxBiC,EAAejC,EAAUI,QAC5Be,GAAMA,EAAEC,iBAAmBA,IAE1BG,GACFU,EAAaT,KAAK,CAChBD,WACAH,mBAGJnB,EAAagC,GAEb,MAAMC,QAAalH,EAAOmH,KAAKC,UAC/B,IAAKF,EACH,MAAM,IAAIG,MAAM,sBAGlB,MAAMC,EAAUJ,EAAKK,SAASC,UAAUC,WAExC,UACQ,SAAW,GAAGxG,KAAYE,aAAqBmG,IAAW,CAC9DlB,iBACAG,YAEJ,CAAE,MAAOmB,GAEPC,QAAQD,MAAM,6BAA8BA,GAC5CzC,EAAa+B,EACf,CACF,CAWA,OA7CA,IAAAnD,YAAU,MA3CViD,iBACE,MAAMI,QAAalH,EAAOmH,KAAKC,UAC/B,IAAKF,EACH,MAAM,IAAIG,MAAM,sBAGlB,MAAMC,EAAUJ,EAAKK,SAASC,UAAUC,WAElCG,EAAkBhD,EACpB,GAAG3D,KAAYC,YAAsB0D,IACrC,GAAG3D,KAAYC,aAAuBoG,IAwBpCO,EAAW,CAtBM,QACqBD,GACzCE,MAAK,EAAG1D,WACPQ,EACIE,EAAeiD,IACb,GAAGnD,IACHR,EAAKA,KAAKpC,KAAI,EAAGxD,aAAcA,KAEjCsG,EAAeiD,IACb,GAAGT,IACHlD,EAAKA,KAAKpC,KAAI,EAAGxD,aAAcA,IAChC,IAGgB8I,EACrB,QAEI,GAAGrG,KAAYE,aAAqBmG,KAErCQ,MAAK,EAAG1D,UAAWA,EAAKA,OAC3B4D,QAAQC,QAA8B,MAGnC,CAAEjD,SAAmBgD,QAAQE,WAAWL,GACtB,cAArB7C,EAAUU,QAA0BV,EAAUmD,OAChDlD,EAAaD,EAAUmD,OAGzBpD,GAAgB,EAClB,CAGEqD,EAAW,GACV,CAACxD,KAkCgB,IAAAW,UAClB,KAAM,IACDzF,EACH6D,eACAoD,oBAEF,CAACjH,EAAO6D,EAAcoD,GAGN,C","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye.js","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Bullseye/bullseye.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/useChrome/useChrome.js","webpack:///./src/components/LearningResourcesWidget/EmptyState.tsx","webpack:///./src/components/LearningResourcesWidget/LearningResourcesWidget.tsx","webpack:///./src/hooks/useQuickStarts.ts"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye.mjs';\nexport const Bullseye = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.bullseye, className) }, props), children));\n};\nBullseye.displayName = 'Bullseye';\n//# sourceMappingURL=Bullseye.js.map","import './bullseye.css';\nexport default {\n  \"bullseye\": \"pf-v5-l-bullseye\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useScalprum } from '@scalprum/react-core';\nvar useChrome = function (selector) {\n    var _a;\n    var state = useScalprum();\n    var chrome = ((_a = state.api) === null || _a === void 0 ? void 0 : _a.chrome) || {};\n    chrome = __assign(__assign({}, chrome), { initialized: state.initialized });\n    if (typeof selector === 'function') {\n        return selector(chrome);\n    }\n    return chrome;\n};\nexport default useChrome;\n//# sourceMappingURL=useChrome.js.map","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateFooter,\n  EmptyStateHeader,\n  EmptyStateVariant,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core/';\nimport BookMarkEmptyState from './Bookmarks_empty-state.svg';\n\nconst LearningResourcesEmptyState: React.FunctionComponent = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.lg} className=\"pf-v5-u-py-md\">\n      <EmptyStateHeader\n        titleText=\"No bookmarked learning resources\"\n        icon={<img src={BookMarkEmptyState} />}\n        headingLevel=\"h4\"\n      />\n      <EmptyStateBody>\n        <Stack>\n          <StackItem>\n            Add documentation, quickstarts, learning paths, and more to your\n            bookmarks for easy access in the future.\n          </StackItem>\n        </Stack>\n      </EmptyStateBody>\n      <EmptyStateFooter className=\"pf-v5-u-mt-sm\">\n        <Button\n          variant=\"secondary\"\n          component=\"a\"\n          href=\"settings/learning-resources#documentation\"\n        >\n          View all learning resources\n        </Button>\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default LearningResourcesEmptyState;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core/dist/dynamic/components/Text';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { Link } from 'react-router-dom';\nimport { Gallery } from '@patternfly/react-core/dist/dynamic/layouts/Gallery';\nimport { Label } from '@patternfly/react-core/dist/dynamic/components/Label';\nimport LearningResourcesEmptyState from './EmptyState';\nimport useQuickStarts from '../../hooks/useQuickStarts';\nimport {\n  Bullseye,\n  Flex,\n  FlexItem,\n  Icon,\n  Spinner,\n} from '@patternfly/react-core';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nimport './LearningResourcesWidget.scss';\nimport { QuickStart } from '@patternfly/quickstarts';\n\nexport const API_BASE = '/api/quickstarts/v1';\nexport const QUICKSTARTS = '/quickstarts';\nexport const FAVORITES = '/favorites';\n\nexport type FavoriteQuickStart = {\n  favorite: boolean;\n  quickstartName: string;\n};\n\nconst LinkWrapper = ({\n  pathname,\n  title,\n}: {\n  pathname: string;\n  title: string;\n}) => {\n  const { updateDocumentTitle } = useChrome();\n  return (\n    <Link onClick={() => updateDocumentTitle(title)} to={pathname}>\n      {title}\n    </Link>\n  );\n};\n\nconst LearningResourcesWidget: React.FunctionComponent<{\n  bookmarks: QuickStart[];\n}> = ({ bookmarks }) => {\n  const getPathName = (url: string) => {\n    return new URL(url).host;\n  };\n\n  return (\n    <div>\n      {bookmarks.length === 0 ? (\n        <LearningResourcesEmptyState />\n      ) : (\n        <Gallery className=\"widget-learning-resources pf-v5-u-p-md\" hasGutter>\n          {bookmarks.map(({ spec, metadata }, index) => (\n            <div key={index}>\n              <TextContent>\n                {metadata.externalDocumentation ? (\n                  <a href={spec.link?.href} target=\"_blank\" rel=\"noreferrer\">\n                    {spec.displayName}\n                    <Icon className=\"pf-v5-u-ml-sm\" isInline>\n                      <ExternalLinkAltIcon />\n                    </Icon>\n                  </a>\n                ) : (\n                  <LinkWrapper\n                    title={spec.displayName}\n                    pathname={spec.link?.href || ''}\n                  />\n                )}\n              </TextContent>\n              <Flex direction={{ default: 'row' }}>\n                <FlexItem className=\"pf-v5-u-mr-sm\">\n                  {spec.type && (\n                    <Label color={spec.type.color}>{spec.type.text}</Label>\n                  )}\n                </FlexItem>\n                <FlexItem>\n                  <TextContent>\n                    <Text component={TextVariants.small}>\n                      {spec.link?.href ? getPathName(spec.link?.href) : ''}\n                    </Text>\n                  </TextContent>\n                </FlexItem>\n              </Flex>\n            </div>\n          ))}\n        </Gallery>\n      )}\n    </div>\n  );\n};\n\nconst GetFavorites = ({\n  onContentReady,\n  bundle,\n}: {\n  bundle: string;\n  onContentReady: (data: QuickStart[]) => void;\n}) => {\n  const { bookmarks, contentReady } = useQuickStarts(bundle);\n  useEffect(() => {\n    if (contentReady) {\n      onContentReady(bookmarks);\n    }\n  }, [contentReady]);\n  return null;\n};\n\nconst LearningResourcesWidgetWrapper = () => {\n  const { getAvailableBundles } = useChrome();\n  const [allFavorites, setAllFavorites] = useState<QuickStart[][]>([]);\n  return (\n    <Fragment>\n      {getAvailableBundles().map(({ id }, index) => (\n        <GetFavorites\n          bundle={id}\n          key={index}\n          onContentReady={(data) => setAllFavorites((prev) => [...prev, data])}\n        />\n      ))}\n      {allFavorites.length !== getAvailableBundles().length ? (\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      ) : (\n        <LearningResourcesWidget bookmarks={allFavorites.flat()} />\n      )}\n    </Fragment>\n  );\n};\n\nexport default LearningResourcesWidgetWrapper;\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport {\n  QuickStart,\n  QuickStartContext,\n  QuickStartContextValues,\n  filterQuickStarts,\n} from '@patternfly/quickstarts';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const API_BASE = '/api/quickstarts/v1';\nexport const QUICKSTARTS = '/quickstarts';\nexport const FAVORITES = '/favorites';\n\nexport type FavoriteQuickStart = {\n  favorite: boolean;\n  quickstartName: string;\n};\n\nconst sortFnc = (q1: QuickStart, q2: QuickStart) =>\n  q1.spec.displayName.localeCompare(q2.spec.displayName);\n\nfunction isFavorite(quickStart: QuickStart, favorites: FavoriteQuickStart[]) {\n  return !!favorites.find((f) => f.quickstartName === quickStart.metadata.name);\n}\n\nconst useQuickStarts = (targetBundle?: string) => {\n  const chrome = useChrome();\n  const { quickStarts: quickStartsApi } = chrome;\n  const [contentReady, setContentReady] = useState(false);\n  const [favorites, setFavorites] = useState<FavoriteQuickStart[]>([]);\n  const {\n    allQuickStartStates,\n    allQuickStarts = [],\n    filter,\n  } = useContext<QuickStartContextValues>(QuickStartContext);\n\n  const state = useMemo(() => {\n    const filteredQuickStarts = filterQuickStarts(\n      allQuickStarts || [],\n      filter?.keyword || '',\n      filter?.status?.statusFilters,\n      allQuickStartStates || {}\n    ).sort(sortFnc);\n    return filteredQuickStarts.reduce<{\n      bookmarks: QuickStart[];\n      documentation: QuickStart[];\n      quickStarts: QuickStart[];\n      other: QuickStart[];\n      learningPaths: QuickStart[];\n    }>(\n      (acc, curr) => {\n        const bookmarked = isFavorite(curr, favorites);\n        const data = {\n          ...curr,\n          metadata: {\n            ...curr.metadata,\n            favorite: bookmarked,\n          },\n        };\n        if (bookmarked) {\n          acc.bookmarks.push(data);\n        }\n        if (curr.metadata.externalDocumentation) {\n          acc.documentation.push(data);\n        } else if (curr.metadata.otherResource) {\n          acc.other.push(data);\n        } else if (curr.metadata.learningPath) {\n          acc.learningPaths.push(data);\n        } else {\n          acc.quickStarts.push(data);\n        }\n\n        return acc;\n      },\n      {\n        documentation: [],\n        quickStarts: [],\n        other: [],\n        learningPaths: [],\n        bookmarks: [],\n      }\n    );\n  }, [allQuickStarts, filter, favorites]);\n\n  async function fetchData() {\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    const quickstartsPath = targetBundle\n      ? `${API_BASE}/${QUICKSTARTS}?bundle=${targetBundle}`\n      : `${API_BASE}/${QUICKSTARTS}?account=${account}`;\n\n    const contentPromise = axios\n      .get<{ data: { content: QuickStart }[] }>(quickstartsPath)\n      .then(({ data }) => {\n        targetBundle\n          ? quickStartsApi.set(\n              `${targetBundle}`,\n              data.data.map(({ content }) => content)\n            )\n          : quickStartsApi.set(\n              `${account}`,\n              data.data.map(({ content }) => content)\n            );\n      });\n\n    const favoritesPromise = account\n      ? axios\n          .get<{ data: FavoriteQuickStart[] }>(\n            `${API_BASE}/${FAVORITES}?account=${account}`\n          )\n          .then(({ data }) => data.data)\n      : Promise.resolve<FavoriteQuickStart[]>([]);\n\n    const promises = [contentPromise, favoritesPromise];\n    const [, favorites] = await Promise.allSettled(promises);\n    if (favorites.status === 'fulfilled' && favorites.value) {\n      setFavorites(favorites.value);\n    }\n\n    setContentReady(true);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [targetBundle]);\n\n  async function toggleFavorite(quickstartName: string, favorite: boolean) {\n    const originalFavorites = [...favorites];\n    const newFavorites = favorites.filter(\n      (f) => f.quickstartName !== quickstartName\n    );\n    if (favorite) {\n      newFavorites.push({\n        favorite,\n        quickstartName,\n      });\n    }\n    setFavorites(newFavorites);\n\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    try {\n      await axios.post(`${API_BASE}/${FAVORITES}?account=${account}`, {\n        quickstartName,\n        favorite,\n      });\n    } catch (error) {\n      // rollback\n      console.error('Failed to update favorites', error);\n      setFavorites(originalFavorites);\n    }\n  }\n\n  const cachedState = useMemo(\n    () => ({\n      ...state,\n      contentReady,\n      toggleFavorite,\n    }),\n    [state, contentReady, toggleFavorite]\n  );\n\n  return cachedState;\n};\n\nexport default useQuickStarts;\n"],"names":["TextContent","_a","children","className","isVisited","props","__rest","Object","assign","content","modifiers","visited","displayName","Bullseye","component","Component","bullseye","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","selector","state","useScalprum","chrome","api","initialized","EmptyState","variant","lg","EmptyStateHeader","titleText","icon","src","headingLevel","EmptyStateBody","Stack","StackItem","EmptyStateFooter","Button","href","API_BASE","QUICKSTARTS","FAVORITES","LinkWrapper","pathname","title","updateDocumentTitle","useChrome","Link","onClick","to","LearningResourcesWidget","bookmarks","Gallery","hasGutter","map","spec","metadata","index","key","externalDocumentation","link","target","rel","Icon","isInline","Flex","direction","default","FlexItem","type","Label","color","text","Text","small","url","URL","host","GetFavorites","onContentReady","bundle","contentReady","useQuickStarts","useEffect","getAvailableBundles","allFavorites","setAllFavorites","useState","Fragment","id","data","prev","Spinner","flat","sortFnc","q1","q2","localeCompare","targetBundle","quickStarts","quickStartsApi","setContentReady","favorites","setFavorites","allQuickStartStates","allQuickStarts","filter","useContext","QuickStartContext","useMemo","filterQuickStarts","keyword","status","statusFilters","sort","reduce","acc","curr","bookmarked","quickStart","find","f","quickstartName","name","isFavorite","favorite","push","documentation","otherResource","other","learningPath","learningPaths","async","toggleFavorite","originalFavorites","newFavorites","user","auth","getUser","Error","account","identity","internal","account_id","error","console","quickstartsPath","promises","then","set","Promise","resolve","allSettled","value","fetchData"],"sourceRoot":""}