{"version":3,"file":"js/546.5d997c265b683c6265bd.js","mappings":"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","sources":["webpack:///./src/components/CatalogHeader.tsx","webpack:///./src/components/CatalogFilter.tsx","webpack:///./src/components/CatalogSection.tsx","webpack:///./src/components/TableOfContents.tsx","webpack:///./src/App.tsx","webpack:///./src/hooks/useQuickStarts.ts"],"sourcesContent":["import { Stack, StackItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport './CatalogHeader.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CatalogHeader = () => {\n  // FIXME: Add missing type to the types lib\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { getBundleData } = useChrome();\n  const { bundleTitle } = getBundleData();\n  return (\n    <Stack className=\"lr-c-catalog__header\">\n      <StackItem>\n        <Title\n          className=\"lr-c-catalog__header-bundle\"\n          headingLevel=\"h2\"\n          size=\"lg\"\n        >\n          {bundleTitle}\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          Learning Resources\n        </Title>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default CatalogHeader;\n","import { QuickStartCatalogFilterCountWrapper } from '@patternfly/quickstarts';\nimport { Level, LevelItem, SearchInput } from '@patternfly/react-core';\nimport React from 'react';\n\nimport './CatalogFilter.scss';\n\nconst CatalogFilter = ({\n  onSearchInputChange,\n  quickStartsCount,\n}: {\n  onSearchInputChange: (value: string) => void;\n  quickStartsCount: number;\n}) => {\n  return (\n    <Level className=\"pf-v5-u-pt-sm pf-v5-u-pb-sm lr-c-catalog__filter\">\n      <LevelItem className=\"pfext-quick-start-catalog-filter__input\">\n        <SearchInput\n          placeholder=\"Filter by keywords...\"\n          onChange={(_ev, str) => onSearchInputChange(str)}\n        />\n      </LevelItem>\n      <LevelItem className=\"pf-v5-u-mr-md\">\n        <QuickStartCatalogFilterCountWrapper\n          quickStartsCount={quickStartsCount}\n        />\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default CatalogFilter;\n","import {\n  AllQuickStartStates,\n  QuickStart,\n  QuickStartTile,\n  getQuickStartStatus,\n} from '@patternfly/quickstarts';\nimport {\n  Badge,\n  Button,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Gallery,\n  GalleryItem,\n  Icon,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport React, { PropsWithChildren, SyntheticEvent, useState } from 'react';\nimport {\n  AngleRightIcon,\n  BookmarkIcon,\n  OutlinedBookmarkIcon,\n} from '@patternfly/react-icons';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nimport './CatalogSection.scss';\n\nconst OutlinedBookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <OutlinedBookmarkIcon />\n  </Icon>\n);\n\nconst BookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <BookmarkIcon />\n  </Icon>\n);\n\nconst CatalogWrapper: React.FC<\n  PropsWithChildren<{\n    sectionCount: number;\n    sectionTitle: React.ReactNode;\n    children: React.ReactNode;\n    isExpandable?: boolean;\n    rightTitle?: React.ReactNode;\n    sectionName: string;\n  }>\n> = ({\n  children,\n  sectionTitle,\n  sectionCount,\n  isExpandable = true,\n  rightTitle,\n  sectionName,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(!!sectionCount);\n\n  if (!isExpandable) {\n    return (\n      <div className=\"lr-c-catalog-section\" id={sectionName}>\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge className=\"pf-u-ml-sm\">{sectionCount}</Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </Split>\n        {children ? (\n          <div className=\"lr-c-catalog-section__static\">{children}</div>\n        ) : null}\n      </div>\n    );\n  }\n\n  return (\n    <ExpandableSection\n      isExpanded={isExpanded}\n      isIndented\n      onToggle={() => setIsExpanded((prev) => !prev)}\n      className=\"lr-c-catalog-section\"\n      id={sectionName}\n      toggleContent={\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge isRead={!sectionCount} className=\"pf-u-ml-sm\">\n                {sectionCount}\n              </Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </Split>\n      }\n    >\n      {children}\n    </ExpandableSection>\n  );\n};\n\nconst CatalogSection = ({\n  sectionTitle,\n  sectionDescription,\n  sectionCount,\n  sectionQuickStarts,\n  isExpandable = true,\n  activeQuickStartID,\n  allQuickStartStates,\n  rightTitle,\n  emptyBody,\n  toggleFavorite,\n  sectionName,\n}: PropsWithChildren<{\n  sectionTitle: React.ReactNode;\n  sectionCount: number;\n  sectionQuickStarts: QuickStart[];\n  emptyBody?: React.ReactNode;\n  rightTitle?: React.ReactNode;\n  sectionDescription?: React.ReactNode;\n  isExpandable?: boolean;\n  activeQuickStartID?: string;\n  allQuickStartStates?: AllQuickStartStates;\n  sectionName: string;\n  toggleFavorite: (name: string, favorite: boolean) => Promise<void>;\n}>) => {\n  const showBookmarks = useFlag('platform.learning-resources.bookmarks');\n  // Expandable section does not support disabled sections\n  if (sectionCount === 0 && isExpandable) {\n    return (\n      <Flex\n        alignItems={{ default: 'alignItemsCenter' }}\n        id={sectionName}\n        className=\"lr-c-catalog-section\"\n      >\n        <FlexItem className=\"pf-v5-u-mr-sm\">\n          <Button\n            className=\"pf-c-expandable-section__toggle pf-v5-u-pl-0 pf-v5-u-pr-0\"\n            variant=\"plain\"\n            isDisabled\n            icon={<AngleRightIcon />}\n          ></Button>\n        </FlexItem>\n        <FlexItem>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge isRead={false} className=\"pf-u-ml-sm\">\n                {sectionCount}\n              </Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  return (\n    <CatalogWrapper\n      sectionName={sectionName}\n      sectionCount={sectionCount}\n      sectionTitle={sectionTitle}\n      isExpandable={isExpandable}\n      rightTitle={rightTitle}\n    >\n      {sectionDescription && (\n        <TextContent className=\"pf-u-mb-md\">\n          <Text>{sectionDescription}</Text>\n        </TextContent>\n      )}\n      {sectionCount ? (\n        <Gallery hasGutter>\n          {sectionQuickStarts.map((quickStart) => (\n            <GalleryItem\n              className=\"lr-c-quickstart_tile\"\n              key={quickStart.metadata.name}\n            >\n              <QuickStartTile\n                action={{\n                  'aria-label': quickStart.metadata.favorite\n                    ? `Remove quickstart ${quickStart.spec.displayName} from bookmarks.`\n                    : `Bookmark quickstart ${quickStart.spec.displayName}.`,\n                  icon: showBookmarks\n                    ? quickStart.metadata.favorite\n                      ? BookmarkedIcon\n                      : OutlinedBookmarkedIcon\n                    : undefined,\n                  onClick: (e: SyntheticEvent<Element, Event>): void => {\n                    if (showBookmarks) {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      toggleFavorite(\n                        quickStart.metadata.name,\n                        !quickStart.metadata.favorite\n                      );\n                    }\n                  },\n                }}\n                quickStart={{\n                  ...quickStart,\n                  spec: {\n                    ...quickStart.spec,\n                    // remove any lingering icons\n                    icon: null,\n                  },\n                }}\n                isActive={quickStart.metadata.name === activeQuickStartID}\n                status={getQuickStartStatus(\n                  allQuickStartStates || {},\n                  quickStart.metadata.name\n                )}\n              />\n            </GalleryItem>\n          ))}\n        </Gallery>\n      ) : (\n        emptyBody\n      )}\n    </CatalogWrapper>\n  );\n};\n\nexport default CatalogSection;\n","import { JumpLinks, JumpLinksItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nconst TableOfContents: React.FC<{\n  defaultActive: string;\n  linkItems: { id: string; label: React.ReactNode }[];\n}> = ({ defaultActive, linkItems }) => {\n  const tocRef = React.useRef<HTMLDivElement>(null);\n  const [activeItem, setActive] = React.useState<string>(defaultActive);\n\n  const intersectionObserver = () => {\n    const options = {\n      threshold: 0.5,\n    };\n    const contentLinks: HTMLAnchorElement[] =\n      Array.from(document.querySelectorAll('.lr-c-catalog-section')) || [];\n\n    const callback: IntersectionObserverCallback = (elements) => {\n      const firstElement = elements.find((ele) => ele.isIntersecting);\n\n      if (firstElement) {\n        setActive(firstElement?.target?.id);\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n\n    Array.from(contentLinks).forEach((link) => {\n      observer.observe(link);\n    });\n  };\n\n  const onJumpLinkClick = React.useCallback(\n    (item: string) => {\n      document.location.href = `${document.location.pathname}#${item}`;\n      setActive(item);\n    },\n    [setActive]\n  );\n\n  React.useEffect(() => {\n    if ('IntersectionObserver' in window) {\n      intersectionObserver();\n    }\n  }, []);\n\n  return (\n    <div ref={tocRef}>\n      <JumpLinks isVertical label=\"Jump to section\">\n        {linkItems.map(({ id, label }) => (\n          <JumpLinksItem\n            key={id}\n            onClick={() => onJumpLinkClick(id)}\n            isActive={activeItem === id}\n          >\n            {label}\n          </JumpLinksItem>\n        ))}\n      </JumpLinks>\n    </div>\n  );\n};\n\nexport default TableOfContents;\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport {\n  LoadingBox,\n  QuickStartContext,\n  QuickStartContextValues,\n} from '@patternfly/quickstarts';\nimport {\n  Divider,\n  EmptyState,\n  Icon,\n  PageGroup,\n  PageSection,\n  Pagination,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  StackItem,\n} from '@patternfly/react-core';\nimport CatalogHeader from './components/CatalogHeader';\nimport CatalogFilter from './components/CatalogFilter';\nimport CatalogSection from './components/CatalogSection';\nimport TableOfContents from './components/TableOfContents';\nimport { BookmarkIcon, OutlinedBookmarkIcon } from '@patternfly/react-icons';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport useQuickStarts from './hooks/useQuickStarts';\n\nexport const App = ({ bundle }: { bundle: string }) => {\n  const chrome = useChrome();\n  const { activeQuickStartID, allQuickStartStates, setFilter, loading } =\n    React.useContext<QuickStartContextValues>(QuickStartContext);\n  const showBookmarks = useFlag('platform.learning-resources.bookmarks');\n\n  const [size, setSize] = useState(window.innerHeight);\n  const targetBundle = bundle || 'settings';\n\n  const {\n    contentReady,\n    documentation,\n    learningPaths,\n    other,\n    quickStarts,\n    bookmarks,\n    toggleFavorite,\n  } = useQuickStarts(targetBundle);\n  const [pagination, setPagination] = useState({\n    count: bookmarks.length,\n    perPage: 20,\n    page: 1,\n  });\n\n  const quickStartsCount =\n    quickStarts.length +\n    documentation.length +\n    learningPaths.length +\n    other.length;\n\n  chrome.updateDocumentTitle('Learning Resources');\n  useEffect(() => {\n    chrome.hideGlobalFilter(true);\n  }, []);\n\n  const onSearchInputChange = (searchValue: string) => {\n    setFilter('keyword', searchValue);\n  };\n\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize(\n        window.innerHeight -\n          (document.querySelector('header')?.getBoundingClientRect()?.height ||\n            0)\n      );\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  if (!contentReady || loading) {\n    return <LoadingBox />;\n  }\n\n  return (\n    <PageGroup id=\"learning-resources-wrapper\" style={{ height: `${size}px` }}>\n      <PageSection className=\"pf-u-p-lg lr-c-catalog__header\">\n        <StackItem className=\"pf-u-mb-md\">\n          <CatalogHeader />\n        </StackItem>\n        <StackItem>\n          <CatalogFilter\n            quickStartsCount={quickStartsCount}\n            onSearchInputChange={onSearchInputChange}\n          />\n        </StackItem>\n      </PageSection>\n      <PageSection className=\"pf-u-background-color-200 pf-m-fill\">\n        <div className=\"pf-v5-u-h-100\">\n          <Sidebar id=\"content-wrapper\" isPanelRight hasGutter>\n            <SidebarContent\n              id=\"quick-starts\"\n              className=\"pf-u-background-color-200\"\n            >\n              {showBookmarks && (\n                <React.Fragment>\n                  <CatalogSection\n                    sectionName=\"bookmarks\"\n                    toggleFavorite={toggleFavorite}\n                    sectionCount={bookmarks.length}\n                    emptyBody={\n                      <EmptyState className=\"lr-c-empty_bookmarks\">\n                        No bookmarked resources yet. Click the{' '}\n                        <Icon className=\"lr-c-bookmark__icon\">\n                          <OutlinedBookmarkIcon />\n                        </Icon>\n                        icon to pin it to your bookmarks here.\n                      </EmptyState>\n                    }\n                    sectionTitle={\n                      <span>\n                        <Icon className=\"lr-c-bookmark__icon pf-v5-u-ml-sm pf-v5-u-pr-md\">\n                          <BookmarkIcon />\n                        </Icon>\n                        Bookmarks\n                      </span>\n                    }\n                    rightTitle={\n                      <Pagination\n                        itemCount={bookmarks.length}\n                        perPage={pagination.perPage}\n                        page={pagination.page}\n                        onSetPage={(_e, newPage) => {\n                          setPagination((pagination) => ({\n                            ...pagination,\n                            page: newPage,\n                          }));\n                        }}\n                        widgetId=\"pagination-options-menu-top\"\n                        onPerPageSelect={(_e, perPage) =>\n                          setPagination((pagination) => ({\n                            ...pagination,\n                            perPage,\n                          }))\n                        }\n                        isCompact\n                      />\n                    }\n                    isExpandable={false}\n                    sectionQuickStarts={bookmarks.slice(\n                      (pagination.page - 1) * pagination.perPage,\n                      pagination.page * (pagination.perPage - 1) + 1\n                    )}\n                    activeQuickStartID={activeQuickStartID}\n                    allQuickStartStates={allQuickStartStates}\n                  />\n                  <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n                </React.Fragment>\n              )}\n              <CatalogSection\n                sectionName=\"documentation\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={documentation.length}\n                sectionTitle=\"Documentation\"\n                sectionDescription=\"Technical information for using the service\"\n                sectionQuickStarts={documentation}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"quick-starts\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={quickStarts.length}\n                sectionTitle=\"Quick starts\"\n                sectionDescription=\"Step-by-step instructions and tasks\"\n                sectionQuickStarts={quickStarts}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"learning-paths\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={learningPaths.length}\n                sectionTitle=\"Learning paths\"\n                sectionDescription=\"Collections of learning materials contributing to a common use case\"\n                sectionQuickStarts={learningPaths}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"other-content-types\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={other.length}\n                sectionTitle=\"Other content types\"\n                sectionDescription=\"Tutorials, videos, e-books, and more to help you build your skills\"\n                sectionQuickStarts={other}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n            </SidebarContent>\n            <SidebarPanel\n              variant=\"sticky\"\n              className=\"pf-u-background-color-200 pf-u-pl-lg pf-u-pl-0-on-lg\"\n            >\n              <TableOfContents\n                defaultActive=\"bookmarks\"\n                linkItems={[\n                  {\n                    id: 'bookmarks',\n                    label: `Bookmarks (${bookmarks.length})`,\n                  },\n                  {\n                    id: 'documentation',\n                    label: `Documentation (${documentation.length})`,\n                  },\n                  {\n                    id: 'quick-starts',\n                    label: `Quick starts (${quickStarts.length})`,\n                  },\n                  {\n                    id: 'learning-paths',\n                    label: `Learning paths (${learningPaths.length})`,\n                  },\n                  {\n                    id: 'other-content-types',\n                    label: `Other content types (${other.length})`,\n                  },\n                ]}\n              />\n            </SidebarPanel>\n          </Sidebar>\n        </div>\n      </PageSection>\n    </PageGroup>\n  );\n};\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport {\n  QuickStart,\n  QuickStartContext,\n  QuickStartContextValues,\n  filterQuickStarts,\n} from '@patternfly/quickstarts';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const API_BASE = '/api/quickstarts/v1';\nexport const QUICKSTARTS = '/quickstarts';\nexport const FAVORITES = '/favorites';\n\nexport type FavoriteQuickStart = {\n  favorite: boolean;\n  quickstartName: string;\n};\n\nconst sortFnc = (q1: QuickStart, q2: QuickStart) =>\n  q1.spec.displayName.localeCompare(q2.spec.displayName);\n\nfunction isFavorite(quickStart: QuickStart, favorites: FavoriteQuickStart[]) {\n  return !!favorites.find((f) => f.quickstartName === quickStart.metadata.name);\n}\n\nconst useQuickStarts = (targetBundle?: string) => {\n  const chrome = useChrome();\n  const { quickStarts: quickStartsApi } = chrome;\n  const [contentReady, setContentReady] = useState(false);\n  const [favorites, setFavorites] = useState<FavoriteQuickStart[]>([]);\n  const {\n    allQuickStartStates,\n    allQuickStarts = [],\n    filter,\n  } = useContext<QuickStartContextValues>(QuickStartContext);\n\n  const state = useMemo(() => {\n    const filteredQuickStarts = filterQuickStarts(\n      allQuickStarts || [],\n      filter?.keyword || '',\n      filter?.status?.statusFilters,\n      allQuickStartStates || {}\n    ).sort(sortFnc);\n    return filteredQuickStarts.reduce<{\n      bookmarks: QuickStart[];\n      documentation: QuickStart[];\n      quickStarts: QuickStart[];\n      other: QuickStart[];\n      learningPaths: QuickStart[];\n    }>(\n      (acc, curr) => {\n        const bookmarked = isFavorite(curr, favorites);\n        const data = {\n          ...curr,\n          metadata: {\n            ...curr.metadata,\n            favorite: bookmarked,\n          },\n        };\n        if (bookmarked) {\n          acc.bookmarks.push(data);\n        }\n        if (curr.metadata.externalDocumentation) {\n          acc.documentation.push(data);\n        } else if (curr.metadata.otherResource) {\n          acc.other.push(data);\n        } else if (curr.metadata.learningPath) {\n          acc.learningPaths.push(data);\n        } else {\n          acc.quickStarts.push(data);\n        }\n\n        return acc;\n      },\n      {\n        documentation: [],\n        quickStarts: [],\n        other: [],\n        learningPaths: [],\n        bookmarks: [],\n      }\n    );\n  }, [allQuickStarts, filter, favorites]);\n\n  async function fetchData() {\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    const quickstartsPath = targetBundle\n      ? `${API_BASE}/${QUICKSTARTS}?bundle=${targetBundle}`\n      : `${API_BASE}/${QUICKSTARTS}?account=${account}`;\n\n    const contentPromise = axios\n      .get<{ data: { content: QuickStart }[] }>(quickstartsPath)\n      .then(({ data }) => {\n        targetBundle\n          ? quickStartsApi.set(\n              `${targetBundle}`,\n              data.data.map(({ content }) => content)\n            )\n          : quickStartsApi.set(\n              `${account}`,\n              data.data.map(({ content }) => content)\n            );\n      });\n\n    const favoritesPromise = account\n      ? axios\n          .get<{ data: FavoriteQuickStart[] }>(\n            `${API_BASE}/${FAVORITES}?account=${account}`\n          )\n          .then(({ data }) => data.data)\n      : Promise.resolve<FavoriteQuickStart[]>([]);\n\n    const promises = [contentPromise, favoritesPromise];\n    const [, favorites] = await Promise.allSettled(promises);\n    if (favorites.status === 'fulfilled' && favorites.value) {\n      setFavorites(favorites.value);\n    }\n\n    setContentReady(true);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [targetBundle]);\n\n  async function toggleFavorite(quickstartName: string, favorite: boolean) {\n    const originalFavorites = [...favorites];\n    const newFavorites = favorites.filter(\n      (f) => f.quickstartName !== quickstartName\n    );\n    if (favorite) {\n      newFavorites.push({\n        favorite,\n        quickstartName,\n      });\n    }\n    setFavorites(newFavorites);\n\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    try {\n      await axios.post(`${API_BASE}/${FAVORITES}?account=${account}`, {\n        quickstartName,\n        favorite,\n      });\n    } catch (error) {\n      // rollback\n      console.error('Failed to update favorites', error);\n      setFavorites(originalFavorites);\n    }\n  }\n\n  const cachedState = useMemo(\n    () => ({\n      ...state,\n      contentReady,\n      toggleFavorite,\n    }),\n    [state, contentReady, toggleFavorite]\n  );\n\n  return cachedState;\n};\n\nexport default useQuickStarts;\n"],"names":["getBundleData","useChrome","bundleTitle","Stack","className","StackItem","Title","headingLevel","size","onSearchInputChange","quickStartsCount","Level","LevelItem","SearchInput","placeholder","onChange","_ev","str","QuickStartCatalogFilterCountWrapper","OutlinedBookmarkedIcon","Icon","BookmarkedIcon","CatalogWrapper","children","sectionTitle","sectionCount","isExpandable","rightTitle","sectionName","isExpanded","setIsExpanded","useState","ExpandableSection","isIndented","onToggle","prev","id","toggleContent","Split","SplitItem","isFilled","Badge","isRead","sectionDescription","sectionQuickStarts","activeQuickStartID","allQuickStartStates","emptyBody","toggleFavorite","showBookmarks","useFlag","Flex","alignItems","default","FlexItem","Button","variant","isDisabled","icon","TextContent","Text","Gallery","hasGutter","map","quickStart","GalleryItem","key","metadata","name","QuickStartTile","action","favorite","spec","displayName","undefined","onClick","e","preventDefault","stopPropagation","isActive","status","getQuickStartStatus","defaultActive","linkItems","tocRef","activeItem","setActive","onJumpLinkClick","item","document","location","href","pathname","window","contentLinks","Array","from","querySelectorAll","observer","IntersectionObserver","elements","firstElement","find","ele","isIntersecting","target","threshold","forEach","link","observe","intersectionObserver","ref","JumpLinks","isVertical","label","JumpLinksItem","App","bundle","chrome","setFilter","loading","QuickStartContext","setSize","innerHeight","targetBundle","contentReady","documentation","learningPaths","other","quickStarts","bookmarks","useQuickStarts","pagination","setPagination","count","length","perPage","page","updateDocumentTitle","useEffect","hideGlobalFilter","updateSize","querySelector","getBoundingClientRect","height","addEventListener","removeEventListener","LoadingBox","PageGroup","style","PageSection","searchValue","Sidebar","isPanelRight","SidebarContent","EmptyState","Pagination","itemCount","onSetPage","_e","newPage","widgetId","onPerPageSelect","isCompact","slice","Divider","SidebarPanel","API_BASE","QUICKSTARTS","FAVORITES","sortFnc","q1","q2","localeCompare","quickStartsApi","setContentReady","favorites","setFavorites","allQuickStarts","filter","useContext","state","useMemo","filterQuickStarts","keyword","statusFilters","sort","reduce","acc","curr","bookmarked","f","quickstartName","isFavorite","data","push","externalDocumentation","otherResource","learningPath","async","originalFavorites","newFavorites","user","auth","getUser","Error","account","identity","internal","account_id","error","console","quickstartsPath","promises","then","set","content","Promise","resolve","allSettled","value","fetchData"],"sourceRoot":""}