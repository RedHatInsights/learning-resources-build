{"version":3,"file":"js/exposed-./RootApp.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/KeyboardHandler.js","webpack:///./src/AppEntry.tsx","webpack:///./src/Viewer.tsx","webpack:///./src/components/CatalogFilter.tsx","webpack:///./src/components/CatalogHeader.tsx","webpack:///./src/components/CatalogSection.tsx","webpack:///./src/components/TableOfContents.tsx","webpack:///./src/components/WrappedQuickStartTile.tsx","webpack:///./src/hooks/useQuickStarts.ts"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state.mjs';\nexport var EmptyStateVariant;\n(function (EmptyStateVariant) {\n    EmptyStateVariant[\"xs\"] = \"xs\";\n    EmptyStateVariant[\"sm\"] = \"sm\";\n    EmptyStateVariant[\"lg\"] = \"lg\";\n    EmptyStateVariant[\"xl\"] = \"xl\";\n    EmptyStateVariant[\"full\"] = \"full\";\n})(EmptyStateVariant || (EmptyStateVariant = {}));\nexport const EmptyState = (_a) => {\n    var { children, className, variant = EmptyStateVariant.full, isFullHeight } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"isFullHeight\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyState, variant === 'xs' && styles.modifiers.xs, variant === 'sm' && styles.modifiers.sm, variant === 'lg' && styles.modifiers.lg, variant === 'xl' && styles.modifiers.xl, isFullHeight && styles.modifiers.fullHeight, className) }, props),\n        React.createElement(\"div\", { className: css(styles.emptyStateContent) }, children)));\n};\nEmptyState.displayName = 'EmptyState';\n//# sourceMappingURL=EmptyState.js.map","import * as React from 'react';\nimport { canUseDOM } from './util';\n/**\n * This function is a helper for handling basic arrow keyboard interactions. If a component already has its own key handler and event start up/tear down, this function may be easier to integrate in over the full component.\n *\n * @param {event} event Event triggered by the keyboard\n * @param {element[]} navigableElements Valid traversable elements of the container\n * @param {function} isActiveElement Callback to determine if a given element from the navigable elements array is the active element of the page\n * @param {function} getFocusableElement Callback returning the focusable element of a given element from the navigable elements array\n * @param {string[]} validSiblingTags Valid sibling tags that horizontal arrow handling will focus\n * @param {boolean} noVerticalArrowHandling Flag indicating that the included vertical arrow key handling should be ignored\n * @param {boolean} noHorizontalArrowHandling Flag indicating that the included horizontal arrow key handling should be ignored\n * @param {boolean} updateTabIndex Flag indicating that the tabIndex of the currently focused element and next focused element should be updated, in the case of using a roving tabIndex\n * @param {boolean} onlyTraverseSiblings Flag indicating that next focusable element of a horizontal movement will be this element's sibling\n */\nexport const handleArrows = (event, navigableElements, isActiveElement = (element) => document.activeElement.contains(element), getFocusableElement = (element) => element, validSiblingTags = ['A', 'BUTTON', 'INPUT'], noVerticalArrowHandling = false, noHorizontalArrowHandling = false, updateTabIndex = true, onlyTraverseSiblings = true) => {\n    const activeElement = document.activeElement;\n    const key = event.key;\n    let moveTarget = null;\n    // Handle vertical arrow keys. If noVerticalArrowHandling is passed, skip this block\n    if (!noVerticalArrowHandling) {\n        if (['ArrowUp', 'ArrowDown'].includes(key)) {\n            event.preventDefault();\n            event.stopImmediatePropagation(); // For menus in menus\n            // Traverse navigableElements to find the element which is currently active\n            let currentIndex = -1;\n            // while (currentIndex === -1) {\n            navigableElements.forEach((element, index) => {\n                if (isActiveElement(element)) {\n                    // Once found, move up or down the array by 1. Determined by the vertical arrow key direction\n                    let increment = 0;\n                    // keep increasing the increment until you've tried the whole navigableElement\n                    while (!moveTarget && increment < navigableElements.length && increment * -1 < navigableElements.length) {\n                        key === 'ArrowUp' ? increment-- : increment++;\n                        currentIndex = index + increment;\n                        if (currentIndex >= navigableElements.length) {\n                            currentIndex = 0;\n                        }\n                        if (currentIndex < 0) {\n                            currentIndex = navigableElements.length - 1;\n                        }\n                        // Set the next target element (undefined if none found)\n                        moveTarget = getFocusableElement(navigableElements[currentIndex]);\n                    }\n                }\n            });\n            // }\n        }\n    }\n    // Handle horizontal arrow keys. If noHorizontalArrowHandling is passed, skip this block\n    if (!noHorizontalArrowHandling) {\n        if (['ArrowLeft', 'ArrowRight'].includes(key)) {\n            event.preventDefault();\n            event.stopImmediatePropagation(); // For menus in menus\n            let currentIndex = -1;\n            navigableElements.forEach((element, index) => {\n                if (isActiveElement(element)) {\n                    const activeRow = navigableElements[index].querySelectorAll(validSiblingTags.join(',')); // all focusable elements in my row\n                    if (!activeRow.length || onlyTraverseSiblings) {\n                        let nextSibling = activeElement;\n                        // While a sibling exists, check each sibling to determine if it should be focussed\n                        while (nextSibling) {\n                            // Set the next checked sibling, determined by the horizontal arrow key direction\n                            nextSibling = key === 'ArrowLeft' ? nextSibling.previousElementSibling : nextSibling.nextElementSibling;\n                            if (nextSibling) {\n                                if (validSiblingTags.includes(nextSibling.tagName)) {\n                                    // If the sibling's tag is included in validSiblingTags, set the next target element and break the loop\n                                    moveTarget = nextSibling;\n                                    break;\n                                }\n                                // If the sibling's tag is not valid, skip to the next sibling if possible\n                            }\n                        }\n                    }\n                    else {\n                        activeRow.forEach((focusableElement, index) => {\n                            if (event.target === focusableElement) {\n                                // Once found, move up or down the array by 1. Determined by the vertical arrow key direction\n                                const increment = key === 'ArrowLeft' ? -1 : 1;\n                                currentIndex = index + increment;\n                                if (currentIndex >= activeRow.length) {\n                                    currentIndex = 0;\n                                }\n                                if (currentIndex < 0) {\n                                    currentIndex = activeRow.length - 1;\n                                }\n                                // Set the next target element\n                                moveTarget = activeRow[currentIndex];\n                            }\n                        });\n                    }\n                }\n            });\n        }\n    }\n    if (moveTarget) {\n        // If updateTabIndex is true, set the previously focussed element's tabIndex to -1 and the next focussed element's tabIndex to 0\n        // This updates the tabIndex for a roving tabIndex\n        if (updateTabIndex) {\n            activeElement.tabIndex = -1;\n            moveTarget.tabIndex = 0;\n        }\n        // If a move target has been set by either arrow handler, focus that target\n        moveTarget.focus();\n    }\n};\n/**\n * This function is a helper for setting the initial tabIndexes in a roving tabIndex\n *\n * @param {HTMLElement[]} options Array of elements which should have a tabIndex of -1, except for the first element which will have a tabIndex of 0\n */\nexport const setTabIndex = (options) => {\n    if (options && options.length > 0) {\n        // Iterate the options and set the tabIndex to -1 on every option\n        options.forEach((option) => {\n            option.tabIndex = -1;\n        });\n        // Manually set the tabIndex of the first option to 0\n        options[0].tabIndex = 0;\n    }\n};\nclass KeyboardHandler extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.keyHandler = (event) => {\n            const { isEventFromContainer } = this.props;\n            // If the passed keyboard event is not from the container, ignore the event by returning\n            if (isEventFromContainer ? !isEventFromContainer(event) : !this._isEventFromContainer(event)) {\n                return;\n            }\n            const { isActiveElement, getFocusableElement, noVerticalArrowHandling, noHorizontalArrowHandling, noEnterHandling, noSpaceHandling, updateTabIndex, validSiblingTags, additionalKeyHandler, createNavigableElements, onlyTraverseSiblings } = this.props;\n            // Pass the event off to be handled by any custom handler\n            additionalKeyHandler && additionalKeyHandler(event);\n            // Initalize navigableElements from the createNavigableElements callback\n            const navigableElements = createNavigableElements();\n            if (!navigableElements) {\n                // eslint-disable-next-line no-console\n                console.warn('No navigable elements have been passed to the KeyboardHandler. Keyboard navigation provided by this component will be ignored.');\n                return;\n            }\n            const key = event.key;\n            // Handle enter key. If noEnterHandling is passed, skip this block\n            if (!noEnterHandling) {\n                if (key === 'Enter') {\n                    event.preventDefault();\n                    event.stopImmediatePropagation(); // For menus in menus\n                    document.activeElement.click();\n                }\n            }\n            // Handle space key. If noSpaceHandling is passed, skip this block\n            if (!noSpaceHandling) {\n                if (key === ' ') {\n                    event.preventDefault();\n                    event.stopImmediatePropagation(); // For menus in menus\n                    document.activeElement.click();\n                }\n            }\n            // Inject helper handler for arrow navigation\n            handleArrows(event, navigableElements, isActiveElement, getFocusableElement, validSiblingTags, noVerticalArrowHandling, noHorizontalArrowHandling, updateTabIndex, onlyTraverseSiblings);\n        };\n        this._isEventFromContainer = (event) => {\n            const { containerRef } = this.props;\n            return containerRef.current && containerRef.current.contains(event.target);\n        };\n    }\n    componentDidMount() {\n        if (canUseDOM) {\n            window.addEventListener('keydown', this.keyHandler);\n        }\n    }\n    componentWillUnmount() {\n        if (canUseDOM) {\n            window.removeEventListener('keydown', this.keyHandler);\n        }\n    }\n    render() {\n        return null;\n    }\n}\nKeyboardHandler.displayName = 'KeyboardHandler';\nKeyboardHandler.defaultProps = {\n    containerRef: null,\n    createNavigableElements: () => null,\n    isActiveElement: (navigableElement) => document.activeElement === navigableElement,\n    getFocusableElement: (navigableElement) => navigableElement,\n    validSiblingTags: ['BUTTON', 'A'],\n    onlyTraverseSiblings: true,\n    updateTabIndex: true,\n    noHorizontalArrowHandling: false,\n    noVerticalArrowHandling: false,\n    noEnterHandling: false,\n    noSpaceHandling: false\n};\nexport { KeyboardHandler };\n//# sourceMappingURL=KeyboardHandler.js.map","import React from 'react';\nimport { Viewer } from './Viewer';\n\nconst AppEntry = (props: { bundle: string }) => <Viewer {...props} />;\n\nexport default AppEntry;\n","import React, { useEffect, useState } from 'react';\nimport './Viewer.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport {\n  LoadingBox,\n  QuickStartContext,\n  QuickStartContextValues,\n} from '@patternfly/quickstarts';\nimport {\n  Divider,\n  EmptyState,\n  Icon,\n  PageGroup,\n  PageSection,\n  Pagination,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  StackItem,\n} from '@patternfly/react-core';\nimport CatalogHeader from './components/CatalogHeader';\nimport CatalogFilter from './components/CatalogFilter';\nimport CatalogSection from './components/CatalogSection';\nimport TableOfContents from './components/TableOfContents';\nimport { BookmarkIcon, OutlinedBookmarkIcon } from '@patternfly/react-icons';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport useQuickStarts from './hooks/useQuickStarts';\n\nexport const Viewer = ({ bundle }: { bundle: string }) => {\n  const chrome = useChrome();\n  const { activeQuickStartID, allQuickStartStates, setFilter, loading } =\n    React.useContext<QuickStartContextValues>(QuickStartContext);\n  const showBookmarks = useFlag('platform.learning-resources.bookmarks');\n\n  const [size, setSize] = useState(window.innerHeight);\n  const targetBundle = bundle || 'settings';\n\n  const {\n    contentReady,\n    documentation,\n    learningPaths,\n    other,\n    quickStarts,\n    bookmarks,\n    toggleFavorite,\n  } = useQuickStarts(targetBundle);\n  const [pagination, setPagination] = useState({\n    count: bookmarks.length,\n    perPage: 20,\n    page: 1,\n  });\n\n  const quickStartsCount =\n    quickStarts.length +\n    documentation.length +\n    learningPaths.length +\n    other.length;\n\n  chrome.updateDocumentTitle('Learning Resources');\n  useEffect(() => {\n    chrome.hideGlobalFilter(true);\n  }, []);\n\n  const onSearchInputChange = (searchValue: string) => {\n    setFilter('keyword', searchValue);\n  };\n\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize(\n        window.innerHeight -\n          (document.querySelector('header')?.getBoundingClientRect()?.height ||\n            0)\n      );\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  if (!contentReady || loading) {\n    return <LoadingBox />;\n  }\n\n  return (\n    <PageGroup id=\"learning-resources-wrapper\" style={{ height: `${size}px` }}>\n      <PageSection className=\"pf-u-p-lg lr-c-catalog__header\">\n        <StackItem className=\"pf-u-mb-md\">\n          <CatalogHeader />\n        </StackItem>\n        <StackItem>\n          <CatalogFilter\n            quickStartsCount={quickStartsCount}\n            onSearchInputChange={onSearchInputChange}\n          />\n        </StackItem>\n      </PageSection>\n      <PageSection className=\"pf-u-background-color-200 pf-m-fill\">\n        <div className=\"pf-v5-u-h-100\">\n          <Sidebar id=\"content-wrapper\" isPanelRight hasGutter>\n            <SidebarContent\n              id=\"quick-starts\"\n              className=\"pf-u-background-color-200\"\n            >\n              {showBookmarks && (\n                <React.Fragment>\n                  <CatalogSection\n                    sectionName=\"bookmarks\"\n                    toggleFavorite={toggleFavorite}\n                    sectionCount={bookmarks.length}\n                    emptyBody={\n                      <EmptyState className=\"lr-c-empty_bookmarks\">\n                        No bookmarked resources yet. Click the{' '}\n                        <Icon className=\"lr-c-bookmark__icon\">\n                          <OutlinedBookmarkIcon />\n                        </Icon>\n                        icon to pin it to your bookmarks here.\n                      </EmptyState>\n                    }\n                    sectionTitle={\n                      <span>\n                        <Icon className=\"lr-c-bookmark__icon pf-v5-u-ml-sm pf-v5-u-pr-md\">\n                          <BookmarkIcon />\n                        </Icon>\n                        Bookmarks\n                      </span>\n                    }\n                    rightTitle={\n                      <Pagination\n                        itemCount={bookmarks.length}\n                        perPage={pagination.perPage}\n                        page={pagination.page}\n                        onSetPage={(_e, newPage) => {\n                          setPagination((pagination) => ({\n                            ...pagination,\n                            page: newPage,\n                          }));\n                        }}\n                        widgetId=\"pagination-options-menu-top\"\n                        onPerPageSelect={(_e, perPage) =>\n                          setPagination((pagination) => ({\n                            ...pagination,\n                            perPage,\n                          }))\n                        }\n                        isCompact\n                      />\n                    }\n                    isExpandable={false}\n                    sectionQuickStarts={bookmarks.slice(\n                      (pagination.page - 1) * pagination.perPage,\n                      pagination.page * (pagination.perPage - 1) + 1\n                    )}\n                    activeQuickStartID={activeQuickStartID}\n                    allQuickStartStates={allQuickStartStates}\n                  />\n                  <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n                </React.Fragment>\n              )}\n              <CatalogSection\n                sectionName=\"documentation\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={documentation.length}\n                sectionTitle=\"Documentation\"\n                sectionDescription=\"Technical information for using the service\"\n                sectionQuickStarts={documentation}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"quick-starts\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={quickStarts.length}\n                sectionTitle=\"Quick starts\"\n                sectionDescription=\"Step-by-step instructions and tasks\"\n                sectionQuickStarts={quickStarts}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"learning-paths\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={learningPaths.length}\n                sectionTitle=\"Learning paths\"\n                sectionDescription=\"Collections of learning materials contributing to a common use case\"\n                sectionQuickStarts={learningPaths}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"other-content-types\"\n                toggleFavorite={toggleFavorite}\n                sectionCount={other.length}\n                sectionTitle=\"Other content types\"\n                sectionDescription=\"Tutorials, videos, e-books, and more to help you build your skills\"\n                sectionQuickStarts={other}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n            </SidebarContent>\n            <SidebarPanel\n              variant=\"sticky\"\n              className=\"pf-u-background-color-200 pf-u-pl-lg pf-u-pl-0-on-lg\"\n            >\n              <TableOfContents\n                defaultActive=\"bookmarks\"\n                linkItems={[\n                  {\n                    id: 'bookmarks',\n                    label: `Bookmarks (${bookmarks.length})`,\n                  },\n                  {\n                    id: 'documentation',\n                    label: `Documentation (${documentation.length})`,\n                  },\n                  {\n                    id: 'quick-starts',\n                    label: `Quick starts (${quickStarts.length})`,\n                  },\n                  {\n                    id: 'learning-paths',\n                    label: `Learning paths (${learningPaths.length})`,\n                  },\n                  {\n                    id: 'other-content-types',\n                    label: `Other content types (${other.length})`,\n                  },\n                ]}\n              />\n            </SidebarPanel>\n          </Sidebar>\n        </div>\n      </PageSection>\n    </PageGroup>\n  );\n};\n","import { QuickStartCatalogFilterCountWrapper } from '@patternfly/quickstarts';\nimport { Level, LevelItem, SearchInput } from '@patternfly/react-core';\nimport React from 'react';\n\nimport './CatalogFilter.scss';\n\nconst CatalogFilter = ({\n  onSearchInputChange,\n  quickStartsCount,\n}: {\n  onSearchInputChange: (value: string) => void;\n  quickStartsCount: number;\n}) => {\n  return (\n    <Level className=\"pf-v5-u-pt-sm pf-v5-u-pb-sm lr-c-catalog__filter\">\n      <LevelItem className=\"pfext-quick-start-catalog-filter__input\">\n        <SearchInput\n          placeholder=\"Filter by keywords...\"\n          onChange={(_ev, str) => onSearchInputChange(str)}\n        />\n      </LevelItem>\n      <LevelItem className=\"pf-v5-u-mr-md\">\n        <QuickStartCatalogFilterCountWrapper\n          quickStartsCount={quickStartsCount}\n        />\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default CatalogFilter;\n","import { Stack, StackItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport './CatalogHeader.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CatalogHeader = () => {\n  // FIXME: Add missing type to the types lib\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { getBundleData } = useChrome();\n  const { bundleTitle } = getBundleData();\n  return (\n    <Stack className=\"lr-c-catalog__header\">\n      <StackItem>\n        <Title\n          className=\"lr-c-catalog__header-bundle\"\n          headingLevel=\"h2\"\n          size=\"lg\"\n        >\n          {bundleTitle}\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          Learning Resources\n        </Title>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default CatalogHeader;\n","import {\n  AllQuickStartStates,\n  QuickStart,\n  getQuickStartStatus,\n} from '@patternfly/quickstarts';\nimport {\n  Badge,\n  Button,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Gallery,\n  GalleryItem,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport React, { PropsWithChildren, useState } from 'react';\nimport { AngleRightIcon } from '@patternfly/react-icons';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nimport './CatalogSection.scss';\nimport WrappedQuickStartTile from './WrappedQuickStartTile';\n\nconst CatalogWrapper: React.FC<\n  PropsWithChildren<{\n    sectionCount: number;\n    sectionTitle: React.ReactNode;\n    children: React.ReactNode;\n    isExpandable?: boolean;\n    rightTitle?: React.ReactNode;\n    sectionName: string;\n  }>\n> = ({\n  children,\n  sectionTitle,\n  sectionCount,\n  isExpandable = true,\n  rightTitle,\n  sectionName,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(!!sectionCount);\n\n  if (!isExpandable) {\n    return (\n      <div className=\"lr-c-catalog-section\" id={sectionName}>\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge className=\"pf-u-ml-sm\">{sectionCount}</Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </Split>\n        {children ? (\n          <div className=\"lr-c-catalog-section__static\">{children}</div>\n        ) : null}\n      </div>\n    );\n  }\n\n  return (\n    <ExpandableSection\n      isExpanded={isExpanded}\n      isIndented\n      onToggle={() => setIsExpanded((prev) => !prev)}\n      className=\"lr-c-catalog-section\"\n      id={sectionName}\n      toggleContent={\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge isRead={!sectionCount} className=\"pf-u-ml-sm\">\n                {sectionCount}\n              </Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </Split>\n      }\n    >\n      {children}\n    </ExpandableSection>\n  );\n};\n\nconst CatalogSection = ({\n  sectionTitle,\n  sectionDescription,\n  sectionCount,\n  sectionQuickStarts,\n  isExpandable = true,\n  activeQuickStartID,\n  allQuickStartStates,\n  rightTitle,\n  emptyBody,\n  toggleFavorite,\n  sectionName,\n}: PropsWithChildren<{\n  sectionTitle: React.ReactNode;\n  sectionCount: number;\n  sectionQuickStarts: QuickStart[];\n  emptyBody?: React.ReactNode;\n  rightTitle?: React.ReactNode;\n  sectionDescription?: React.ReactNode;\n  isExpandable?: boolean;\n  activeQuickStartID?: string;\n  allQuickStartStates?: AllQuickStartStates;\n  sectionName: string;\n  toggleFavorite: (name: string, favorite: boolean) => Promise<void>;\n}>) => {\n  const showBookmarks = useFlag('platform.learning-resources.bookmarks');\n  // Expandable section does not support disabled sections\n  if (sectionCount === 0 && isExpandable) {\n    return (\n      <Flex\n        alignItems={{ default: 'alignItemsCenter' }}\n        id={sectionName}\n        className=\"lr-c-catalog-section\"\n      >\n        <FlexItem className=\"pf-v5-u-mr-sm\">\n          <Button\n            className=\"pf-c-expandable-section__toggle pf-v5-u-pl-0 pf-v5-u-pr-0\"\n            variant=\"plain\"\n            isDisabled\n            icon={<AngleRightIcon />}\n          ></Button>\n        </FlexItem>\n        <FlexItem>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"lg\">\n              {sectionTitle}\n              <Badge isRead={false} className=\"pf-u-ml-sm\">\n                {sectionCount}\n              </Badge>\n            </Title>\n          </SplitItem>\n          <SplitItem>{rightTitle}</SplitItem>\n        </FlexItem>\n      </Flex>\n    );\n  }\n\n  return (\n    <CatalogWrapper\n      sectionName={sectionName}\n      sectionCount={sectionCount}\n      sectionTitle={sectionTitle}\n      isExpandable={isExpandable}\n      rightTitle={rightTitle}\n    >\n      {sectionDescription && (\n        <TextContent className=\"pf-u-mb-md\">\n          <Text>{sectionDescription}</Text>\n        </TextContent>\n      )}\n      {sectionCount ? (\n        <Gallery hasGutter>\n          {sectionQuickStarts.map((quickStart) => (\n            <GalleryItem key={quickStart.metadata.name}>\n              <WrappedQuickStartTile\n                quickStart={quickStart}\n                bookmarks={\n                  showBookmarks\n                    ? {\n                        isFavorite: quickStart.metadata.favorite,\n                        setFavorite: (newState) =>\n                          toggleFavorite(quickStart.metadata.name, newState),\n                      }\n                    : null\n                }\n                isActive={quickStart.metadata.name === activeQuickStartID}\n                status={getQuickStartStatus(\n                  allQuickStartStates || {},\n                  quickStart.metadata.name\n                )}\n              />\n            </GalleryItem>\n          ))}\n        </Gallery>\n      ) : (\n        emptyBody\n      )}\n    </CatalogWrapper>\n  );\n};\n\nexport default CatalogSection;\n","import { JumpLinks, JumpLinksItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nconst TableOfContents: React.FC<{\n  defaultActive: string;\n  linkItems: { id: string; label: React.ReactNode }[];\n}> = ({ defaultActive, linkItems }) => {\n  const tocRef = React.useRef<HTMLDivElement>(null);\n  const [activeItem, setActive] = React.useState<string>(defaultActive);\n\n  const intersectionObserver = () => {\n    const options = {\n      threshold: 0.5,\n    };\n    const contentLinks: HTMLAnchorElement[] =\n      Array.from(document.querySelectorAll('.lr-c-catalog-section')) || [];\n\n    const callback: IntersectionObserverCallback = (elements) => {\n      const firstElement = elements.find((ele) => ele.isIntersecting);\n\n      if (firstElement) {\n        setActive(firstElement?.target?.id);\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n\n    Array.from(contentLinks).forEach((link) => {\n      observer.observe(link);\n    });\n  };\n\n  const onJumpLinkClick = React.useCallback(\n    (item: string) => {\n      document.location.href = `${document.location.pathname}#${item}`;\n      setActive(item);\n    },\n    [setActive]\n  );\n\n  React.useEffect(() => {\n    if ('IntersectionObserver' in window) {\n      intersectionObserver();\n    }\n  }, []);\n\n  return (\n    <div ref={tocRef}>\n      <JumpLinks isVertical label=\"Jump to section\">\n        {linkItems.map(({ id, label }) => (\n          <JumpLinksItem\n            key={id}\n            onClick={() => onJumpLinkClick(id)}\n            isActive={activeItem === id}\n          >\n            {label}\n          </JumpLinksItem>\n        ))}\n      </JumpLinks>\n    </div>\n  );\n};\n\nexport default TableOfContents;\n","import React, { SyntheticEvent } from 'react';\nimport {\n  QuickStart,\n  QuickStartStatus,\n  QuickStartTile,\n} from '@patternfly/quickstarts';\n\nimport { BookmarkIcon, OutlinedBookmarkIcon } from '@patternfly/react-icons';\nimport { Icon } from '@patternfly/react-core';\nimport './WrappedQuickStartTile.scss';\n\nconst OutlinedBookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <OutlinedBookmarkIcon />\n  </Icon>\n);\n\nconst BookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <BookmarkIcon />\n  </Icon>\n);\n\ntype BookmarksConfig = {\n  isFavorite: boolean;\n  setFavorite: (newState: boolean) => Promise<void>;\n} | null;\n\nconst WrappedQuickStartTile = ({\n  quickStart,\n  bookmarks,\n  isActive,\n  status,\n}: {\n  quickStart: QuickStart;\n  bookmarks: BookmarksConfig;\n  isActive: boolean;\n  status: QuickStartStatus;\n}) => {\n  return (\n    <div className=\"lr-c-quickstart_tile\">\n      <QuickStartTile\n        action={\n          bookmarks !== null\n            ? {\n                'aria-label': bookmarks.isFavorite\n                  ? `Remove quickstart ${quickStart.spec.displayName} from bookmarks.`\n                  : `Bookmark quickstart ${quickStart.spec.displayName}.`,\n                icon: bookmarks.isFavorite\n                  ? BookmarkedIcon\n                  : OutlinedBookmarkedIcon,\n                onClick: (e: SyntheticEvent<Element, Event>): void => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  bookmarks.setFavorite(!bookmarks.isFavorite);\n                },\n              }\n            : undefined\n        }\n        quickStart={{\n          ...quickStart,\n          spec: {\n            ...quickStart.spec,\n            // remove any lingering icons\n            icon: null,\n          },\n        }}\n        isActive={isActive}\n        status={status}\n      />\n    </div>\n  );\n};\n\nexport default WrappedQuickStartTile;\n","import { useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport {\n  QuickStart,\n  QuickStartContext,\n  QuickStartContextValues,\n  filterQuickStarts,\n} from '@patternfly/quickstarts';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const API_BASE = '/api/quickstarts/v1';\nexport const QUICKSTARTS = '/quickstarts';\nexport const FAVORITES = '/favorites';\n\nexport type FavoriteQuickStart = {\n  favorite: boolean;\n  quickstartName: string;\n};\n\nconst sortFnc = (q1: QuickStart, q2: QuickStart) =>\n  q1.spec.displayName.localeCompare(q2.spec.displayName);\n\nfunction isFavorite(quickStart: QuickStart, favorites: FavoriteQuickStart[]) {\n  return !!favorites.find((f) => f.quickstartName === quickStart.metadata.name);\n}\n\nconst useQuickStarts = (targetBundle?: string) => {\n  const chrome = useChrome();\n  const { quickStarts: quickStartsApi } = chrome;\n  const [contentReady, setContentReady] = useState(false);\n  const [favorites, setFavorites] = useState<FavoriteQuickStart[]>([]);\n  const {\n    allQuickStartStates,\n    allQuickStarts = [],\n    filter,\n  } = useContext<QuickStartContextValues>(QuickStartContext);\n\n  const state = useMemo(() => {\n    const filteredQuickStarts = filterQuickStarts(\n      allQuickStarts || [],\n      filter?.keyword || '',\n      filter?.status?.statusFilters,\n      allQuickStartStates || {}\n    ).sort(sortFnc);\n    return filteredQuickStarts.reduce<{\n      bookmarks: QuickStart[];\n      documentation: QuickStart[];\n      quickStarts: QuickStart[];\n      other: QuickStart[];\n      learningPaths: QuickStart[];\n    }>(\n      (acc, curr) => {\n        const bookmarked = isFavorite(curr, favorites);\n        const data = {\n          ...curr,\n          metadata: {\n            ...curr.metadata,\n            favorite: bookmarked,\n          },\n        };\n        if (bookmarked) {\n          acc.bookmarks.push(data);\n        }\n        if (curr.metadata.externalDocumentation) {\n          acc.documentation.push(data);\n        } else if (curr.metadata.otherResource) {\n          acc.other.push(data);\n        } else if (curr.metadata.learningPath) {\n          acc.learningPaths.push(data);\n        } else {\n          acc.quickStarts.push(data);\n        }\n\n        return acc;\n      },\n      {\n        documentation: [],\n        quickStarts: [],\n        other: [],\n        learningPaths: [],\n        bookmarks: [],\n      }\n    );\n  }, [allQuickStarts, filter, favorites]);\n\n  async function fetchData() {\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    const quickstartsPath = targetBundle\n      ? `${API_BASE}/${QUICKSTARTS}?bundle=${targetBundle}`\n      : `${API_BASE}/${QUICKSTARTS}?account=${account}`;\n\n    const contentPromise = axios\n      .get<{ data: { content: QuickStart }[] }>(quickstartsPath)\n      .then(({ data }) => {\n        targetBundle\n          ? quickStartsApi.set(\n              `${targetBundle}`,\n              data.data.map(({ content }) => content)\n            )\n          : quickStartsApi.set(\n              `${account}`,\n              data.data.map(({ content }) => content)\n            );\n      });\n\n    const favoritesPromise = account\n      ? axios\n          .get<{ data: FavoriteQuickStart[] }>(\n            `${API_BASE}/${FAVORITES}?account=${account}`\n          )\n          .then(({ data }) => data.data)\n      : Promise.resolve<FavoriteQuickStart[]>([]);\n\n    const promises = [contentPromise, favoritesPromise];\n    const [, favorites] = await Promise.allSettled(promises);\n    if (favorites.status === 'fulfilled' && favorites.value) {\n      setFavorites(favorites.value);\n    }\n\n    setContentReady(true);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [targetBundle]);\n\n  async function toggleFavorite(quickstartName: string, favorite: boolean) {\n    const originalFavorites = [...favorites];\n    const newFavorites = favorites.filter(\n      (f) => f.quickstartName !== quickstartName\n    );\n    if (favorite) {\n      newFavorites.push({\n        favorite,\n        quickstartName,\n      });\n    }\n    setFavorites(newFavorites);\n\n    const user = await chrome.auth.getUser();\n    if (!user) {\n      throw new Error('User not logged in');\n    }\n\n    const account = user.identity.internal?.account_id;\n\n    try {\n      await axios.post(`${API_BASE}/${FAVORITES}?account=${account}`, {\n        quickstartName,\n        favorite,\n      });\n    } catch (error) {\n      // rollback\n      console.error('Failed to update favorites', error);\n      setFavorites(originalFavorites);\n    }\n  }\n\n  const cachedState = useMemo(\n    () => ({\n      ...state,\n      contentReady,\n      toggleFavorite,\n    }),\n    [state, contentReady, toggleFavorite]\n  );\n\n  return cachedState;\n};\n\nexport default useQuickStarts;\n"],"names":["EmptyStateVariant","EmptyState","_a","children","className","variant","full","isFullHeight","props","__rest","Object","assign","emptyState","modifiers","xs","sm","lg","xl","fullHeight","emptyStateContent","displayName","handleArrows","event","navigableElements","isActiveElement","element","document","activeElement","contains","getFocusableElement","validSiblingTags","noVerticalArrowHandling","noHorizontalArrowHandling","updateTabIndex","onlyTraverseSiblings","key","moveTarget","includes","preventDefault","stopImmediatePropagation","currentIndex","forEach","index","increment","length","activeRow","querySelectorAll","join","nextSibling","previousElementSibling","nextElementSibling","tagName","focusableElement","target","tabIndex","focus","KeyboardHandler","constructor","super","arguments","this","keyHandler","isEventFromContainer","_isEventFromContainer","noEnterHandling","noSpaceHandling","additionalKeyHandler","createNavigableElements","console","warn","click","containerRef","current","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","defaultProps","navigableElement","Viewer","bundle","chrome","activeQuickStartID","allQuickStartStates","setFilter","loading","QuickStartContext","showBookmarks","useFlag","size","setSize","useState","innerHeight","targetBundle","contentReady","documentation","learningPaths","other","quickStarts","bookmarks","toggleFavorite","pagination","setPagination","count","perPage","page","quickStartsCount","updateDocumentTitle","useEffect","hideGlobalFilter","updateSize","querySelector","getBoundingClientRect","height","LoadingBox","id","style","onSearchInputChange","searchValue","isPanelRight","hasGutter","sectionName","sectionCount","emptyBody","sectionTitle","rightTitle","itemCount","onSetPage","_e","newPage","widgetId","onPerPageSelect","isCompact","isExpandable","sectionQuickStarts","slice","sectionDescription","defaultActive","linkItems","label","placeholder","onChange","_ev","str","QuickStartCatalogFilterCountWrapper","getBundleData","bundleTitle","headingLevel","CatalogWrapper","isExpanded","setIsExpanded","isIndented","onToggle","prev","toggleContent","isFilled","isRead","alignItems","default","isDisabled","icon","map","quickStart","metadata","name","isFavorite","favorite","setFavorite","newState","isActive","status","getQuickStartStatus","tocRef","activeItem","setActive","onJumpLinkClick","item","location","href","pathname","contentLinks","Array","from","observer","IntersectionObserver","elements","firstElement","find","ele","isIntersecting","threshold","link","observe","intersectionObserver","ref","isVertical","onClick","OutlinedBookmarkedIcon","BookmarkedIcon","QuickStartTile","action","spec","e","stopPropagation","undefined","API_BASE","QUICKSTARTS","FAVORITES","sortFnc","q1","q2","localeCompare","quickStartsApi","setContentReady","favorites","setFavorites","allQuickStarts","filter","useContext","state","useMemo","filterQuickStarts","keyword","statusFilters","sort","reduce","acc","curr","bookmarked","f","quickstartName","data","push","externalDocumentation","otherResource","learningPath","async","originalFavorites","newFavorites","user","auth","getUser","Error","account","identity","internal","account_id","error","quickstartsPath","promises","then","set","content","Promise","resolve","allSettled","value","fetchData"],"sourceRoot":""}