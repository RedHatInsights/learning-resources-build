{"version":3,"file":"js/exposed-./RootApp.564a79b77d713c310ab4.js","mappings":"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","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/components/CatalogFilter.tsx","webpack:///./src/components/CatalogHeader.tsx","webpack:///./src/components/CatalogSection.tsx","webpack:///./src/components/TableOfContents.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport './App.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport {\n  LoadingBox,\n  QuickStart,\n  QuickStartContext,\n  QuickStartContextValues,\n  filterQuickStarts,\n} from '@patternfly/quickstarts';\nimport {\n  Divider,\n  PageGroup,\n  PageSection,\n  Sidebar,\n  SidebarContent,\n  SidebarPanel,\n  StackItem,\n} from '@patternfly/react-core';\nimport CatalogHeader from './components/CatalogHeader';\nimport CatalogFilter from './components/CatalogFilter';\nimport CatalogSection from './components/CatalogSection';\nimport TableOfContents from './components/TableOfContents';\n\nconst sortFnc = (q1: QuickStart, q2: QuickStart) =>\n  q1.spec.displayName.localeCompare(q2.spec.displayName);\n\nexport const App = ({ bundle }: { bundle: string }) => {\n  const {\n    activeQuickStartID,\n    allQuickStartStates,\n    allQuickStarts = [],\n    filter,\n    setFilter,\n    loading,\n  } = React.useContext<QuickStartContextValues>(QuickStartContext);\n  const [contentReady, setContentReady] = useState(false);\n  const [size, setSize] = useState(window.innerHeight);\n\n  const { documentation, learningPaths, other, quickStarts } = useMemo(() => {\n    const filteredQuickStarts = filterQuickStarts(\n      allQuickStarts || [],\n      filter?.keyword || '',\n      filter?.status?.statusFilters,\n      allQuickStartStates || {}\n    ).sort(sortFnc);\n    return filteredQuickStarts.reduce<{\n      documentation: QuickStart[];\n      quickStarts: QuickStart[];\n      other: QuickStart[];\n      learningPaths: QuickStart[];\n    }>(\n      (acc, curr) => {\n        if (curr.metadata.externalDocumentation) {\n          acc.documentation.push(curr);\n        } else if (curr.metadata.otherResource) {\n          acc.other.push(curr);\n        } else if (curr.metadata.learningPath) {\n          acc.learningPaths.push(curr);\n        } else {\n          acc.quickStarts.push(curr);\n        }\n\n        return acc;\n      },\n      { documentation: [], quickStarts: [], other: [], learningPaths: [] }\n    );\n  }, [allQuickStarts, filter]);\n\n  const quickStartsCount =\n    quickStarts.length +\n    documentation.length +\n    learningPaths.length +\n    other.length;\n\n  const chrome = useChrome();\n\n  const { quickStarts: quickStartsApi } = chrome;\n  const targetBundle = bundle || 'settings';\n\n  chrome?.updateDocumentTitle?.('Learning Resources');\n  useEffect(() => {\n    chrome?.hideGlobalFilter?.(true);\n  }, []);\n\n  useEffect(() => {\n    fetch(`/api/quickstarts/v1/quickstarts?bundle=${targetBundle}`)\n      .then<{ data: { content: QuickStart }[] }>((response) => response.json())\n      .then(({ data }) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        quickStartsApi.set(\n          `${targetBundle}`,\n          data.map(({ content }) => content)\n        );\n        setContentReady(true);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  }, []);\n\n  const onSearchInputChange = (searchValue: string) => {\n    setFilter('keyword', searchValue);\n  };\n\n  React.useLayoutEffect(() => {\n    function updateSize() {\n      setSize(\n        window.innerHeight -\n          (document.querySelector('header')?.getBoundingClientRect()?.height ||\n            0)\n      );\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  if (!contentReady || loading) {\n    return <LoadingBox />;\n  }\n\n  return (\n    <PageGroup id=\"learning-resources-wrapper\" style={{ height: `${size}px` }}>\n      <PageSection className=\"pf-u-p-lg lr-c-catalog__header\">\n        <StackItem className=\"pf-u-mb-md\">\n          <CatalogHeader />\n        </StackItem>\n        <StackItem>\n          <CatalogFilter\n            quickStartsCount={quickStartsCount}\n            onSearchInputChange={onSearchInputChange}\n          />\n        </StackItem>\n      </PageSection>\n      <PageSection className=\"pf-u-background-color-200 pf-m-fill\">\n        <div className=\"pf-v5-u-h-100\">\n          <Sidebar id=\"content-wrapper\" isPanelRight hasGutter>\n            <SidebarContent\n              id=\"quick-starts\"\n              className=\"pf-u-background-color-200\"\n            >\n              <CatalogSection\n                sectionName=\"documentation\"\n                sectionCount={documentation.length}\n                sectionTitle=\"Documentation\"\n                sectionDescription=\"Technical information for using the service\"\n                sectionQuickStarts={documentation}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"quick-starts\"\n                sectionCount={quickStarts.length}\n                sectionTitle=\"Quick starts\"\n                sectionDescription=\"Step-by-step instructions and tasks\"\n                sectionQuickStarts={quickStarts}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"learning-paths\"\n                sectionCount={learningPaths.length}\n                sectionTitle=\"Learning paths\"\n                sectionDescription=\"Collections of learning materials contributing to a common use case\"\n                sectionQuickStarts={learningPaths}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n              <Divider className=\"pf-u-mt-lg pf-u-mb-lg\" />\n              <CatalogSection\n                sectionName=\"other-content-types\"\n                sectionCount={other.length}\n                sectionTitle=\"Other content types\"\n                sectionDescription=\"Tutorials, videos, e-books, and more to help you build your skills\"\n                sectionQuickStarts={other}\n                activeQuickStartID={activeQuickStartID}\n                allQuickStartStates={allQuickStartStates}\n              />\n            </SidebarContent>\n            <SidebarPanel\n              variant=\"sticky\"\n              className=\"pf-u-background-color-200 pf-u-pl-lg pf-u-pl-0-on-lg\"\n            >\n              <TableOfContents\n                defaultActive=\"documentation\"\n                linkItems={[\n                  {\n                    id: 'documentation',\n                    label: `Documentation (${documentation.length})`,\n                  },\n                  {\n                    id: 'quick-starts',\n                    label: `Quick starts (${quickStarts.length})`,\n                  },\n                  {\n                    id: 'learning-paths',\n                    label: `Learning paths (${learningPaths.length})`,\n                  },\n                  {\n                    id: 'other-content-types',\n                    label: `Other content types (${other.length})`,\n                  },\n                ]}\n              />\n            </SidebarPanel>\n          </Sidebar>\n        </div>\n      </PageSection>\n    </PageGroup>\n  );\n};\n","import React from 'react';\nimport { App } from './App';\n\nconst AppEntry = (props: { bundle: string }) => <App {...props} />;\n\nexport default AppEntry;\n","import { QuickStartCatalogFilterCountWrapper } from '@patternfly/quickstarts';\nimport { Level, LevelItem, SearchInput } from '@patternfly/react-core';\nimport React from 'react';\n\nimport './CatalogFilter.scss';\n\nconst CatalogFilter = ({\n  quickStartsCount,\n  onSearchInputChange,\n}: {\n  onSearchInputChange: (value: string) => void;\n  quickStartsCount: number;\n}) => {\n  return (\n    <Level className=\"pf-v5-u-pt-sm pf-v5-u-pb-sm lr-c-catalog__filter\">\n      <LevelItem className=\"pfext-quick-start-catalog-filter__input\">\n        <SearchInput\n          placeholder=\"Filter by keywords...\"\n          onChange={(_ev, str) => onSearchInputChange(str)}\n        />\n      </LevelItem>\n      <LevelItem className=\"pf-v5-u-mr-md\">\n        <QuickStartCatalogFilterCountWrapper\n          quickStartsCount={quickStartsCount}\n        />\n      </LevelItem>\n    </Level>\n  );\n};\n\nexport default CatalogFilter;\n","import { Stack, StackItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport './CatalogHeader.scss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst CatalogHeader = () => {\n  // FIXME: Add missing type to the types lib\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const { getBundleData } = useChrome();\n  const { bundleTitle } = getBundleData();\n  return (\n    <Stack className=\"lr-c-catalog__header\">\n      <StackItem>\n        <Title\n          className=\"lr-c-catalog__header-bundle\"\n          headingLevel=\"h2\"\n          size=\"lg\"\n        >\n          {bundleTitle}\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          Learning Resources\n        </Title>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default CatalogHeader;\n","import {\n  AllQuickStartStates,\n  QuickStart,\n  QuickStartTile,\n  getQuickStartStatus,\n} from '@patternfly/quickstarts';\nimport {\n  Badge,\n  Button,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  Gallery,\n  GalleryItem,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport React, { PropsWithChildren, useState } from 'react';\nimport { AngleRightIcon } from '@patternfly/react-icons';\n\nimport './CatalogSection.scss';\n\nconst CatalogSection = ({\n  sectionTitle,\n  sectionDescription,\n  sectionCount,\n  sectionQuickStarts,\n  activeQuickStartID,\n  allQuickStartStates,\n  sectionName,\n}: PropsWithChildren<{\n  sectionTitle: React.ReactNode;\n  sectionDescription: React.ReactNode;\n  sectionCount: number;\n  sectionQuickStarts: QuickStart[];\n  sectionName: string;\n  activeQuickStartID?: string;\n  allQuickStartStates?: AllQuickStartStates;\n}>) => {\n  const [isExpanded, setIsExpanded] = useState(!!sectionCount);\n\n  // Expandable section does not support disabled sections\n  if (sectionCount === 0) {\n    return (\n      <Flex\n        alignItems={{ default: 'alignItemsCenter' }}\n        id={sectionName}\n        className=\"lr-c-catalog-section\"\n      >\n        <FlexItem>\n          <Button\n            className=\"pf-c-expandable-section__toggle\"\n            variant=\"plain\"\n            isDisabled\n            icon={<AngleRightIcon />}\n          ></Button>\n        </FlexItem>\n        <FlexItem>\n          <Title headingLevel=\"h3\" size=\"lg\">\n            {sectionTitle}\n            <Badge className=\"pf-u-ml-sm\">{sectionCount}</Badge>\n          </Title>\n        </FlexItem>\n      </Flex>\n    );\n  }\n  return (\n    <ExpandableSection\n      isExpanded={isExpanded}\n      isIndented\n      onToggle={() => setIsExpanded((prev) => !prev)}\n      className=\"lr-c-catalog-section\"\n      id={sectionName}\n      toggleContent={\n        <Title headingLevel=\"h3\" size=\"lg\">\n          {sectionTitle}\n          <Badge isRead={!sectionCount} className=\"pf-u-ml-sm\">\n            {sectionCount}\n          </Badge>\n        </Title>\n      }\n    >\n      <TextContent className=\"pf-u-mb-md\">\n        <Text>{sectionDescription}</Text>\n      </TextContent>\n      <Gallery hasGutter>\n        {sectionQuickStarts.map((quickStart) => (\n          <GalleryItem\n            className=\"pfext-quick-start-catalog__gallery-item\"\n            key={quickStart.metadata.name}\n          >\n            <QuickStartTile\n              quickStart={{\n                ...quickStart,\n                spec: {\n                  ...quickStart.spec,\n                  // remove any lingering icons\n                  icon: null,\n                },\n              }}\n              isActive={quickStart.metadata.name === activeQuickStartID}\n              status={getQuickStartStatus(\n                allQuickStartStates || {},\n                quickStart.metadata.name\n              )}\n            />\n          </GalleryItem>\n        ))}\n      </Gallery>\n    </ExpandableSection>\n  );\n};\n\nexport default CatalogSection;\n","import { JumpLinks, JumpLinksItem } from '@patternfly/react-core';\nimport * as React from 'react';\n\nconst TableOfContents: React.FC<{\n  defaultActive: string;\n  linkItems: { id: string; label: React.ReactNode }[];\n}> = ({ defaultActive, linkItems }) => {\n  const tocRef = React.useRef<HTMLDivElement>(null);\n  const [activeItem, setActive] = React.useState<string>(defaultActive);\n\n  const intersectionObserver = () => {\n    const options = {\n      threshold: 0.5,\n    };\n    const contentLinks: HTMLAnchorElement[] =\n      Array.from(document.querySelectorAll('.lr-c-catalog-section')) || [];\n\n    const callback: IntersectionObserverCallback = (elements) => {\n      const firstElement = elements.find((ele) => ele.isIntersecting);\n\n      if (firstElement) {\n        setActive(firstElement?.target?.id);\n      }\n    };\n    const observer = new IntersectionObserver(callback, options);\n\n    Array.from(contentLinks).forEach((link) => {\n      observer.observe(link);\n    });\n  };\n\n  const onJumpLinkClick = React.useCallback(\n    (item: string) => {\n      document.location.href = `${document.location.pathname}#${item}`;\n      setActive(item);\n    },\n    [setActive]\n  );\n\n  React.useEffect(() => {\n    if ('IntersectionObserver' in window) {\n      intersectionObserver();\n    }\n  }, []);\n\n  return (\n    <div ref={tocRef}>\n      <JumpLinks isVertical label=\"Jump to section\">\n        {linkItems.map(({ id, label }) => (\n          <JumpLinksItem\n            key={id}\n            onClick={() => onJumpLinkClick(id)}\n            isActive={activeItem === id}\n          >\n            {label}\n          </JumpLinksItem>\n        ))}\n      </JumpLinks>\n    </div>\n  );\n};\n\nexport default TableOfContents;\n"],"names":["sortFnc","q1","q2","spec","displayName","localeCompare","App","bundle","activeQuickStartID","allQuickStartStates","allQuickStarts","filter","setFilter","loading","QuickStartContext","contentReady","setContentReady","useState","size","setSize","window","innerHeight","documentation","learningPaths","other","quickStarts","useMemo","filterQuickStarts","keyword","status","statusFilters","sort","reduce","acc","curr","metadata","externalDocumentation","push","otherResource","learningPath","quickStartsCount","length","chrome","quickStartsApi","targetBundle","updateDocumentTitle","useEffect","hideGlobalFilter","fetch","then","response","json","data","set","map","content","catch","err","console","log","message","updateSize","document","querySelector","getBoundingClientRect","height","addEventListener","removeEventListener","LoadingBox","id","style","className","onSearchInputChange","searchValue","isPanelRight","hasGutter","sectionName","sectionCount","sectionTitle","sectionDescription","sectionQuickStarts","variant","defaultActive","linkItems","label","props","placeholder","onChange","_ev","str","QuickStartCatalogFilterCountWrapper","getBundleData","bundleTitle","headingLevel","isExpanded","setIsExpanded","alignItems","default","isDisabled","icon","isIndented","onToggle","prev","toggleContent","isRead","quickStart","key","name","QuickStartTile","isActive","getQuickStartStatus","tocRef","activeItem","setActive","onJumpLinkClick","item","location","href","pathname","contentLinks","Array","from","querySelectorAll","observer","IntersectionObserver","elements","firstElement","find","ele","isIntersecting","target","threshold","forEach","link","observe","intersectionObserver","ref","isVertical","onClick"],"sourceRoot":""}