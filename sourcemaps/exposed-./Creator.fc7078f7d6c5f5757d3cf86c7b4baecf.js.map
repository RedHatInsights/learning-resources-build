{"version":3,"file":"js/exposed-./Creator.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yUAEA,MAsDMA,EAtDkBC,OAAOC,OAAO,CACpCC,cAAe,CACbC,YAAa,gBACbC,SAAU,SACVC,OAAQ,CACNC,KAAK,GAEPC,cAAe,CACbC,uBAAuB,IAG3BC,WAAY,CACVN,YAAa,aACbC,SAAU,QACVM,aAAa,EACbL,OAAQ,CACNM,UAAU,GAEZC,UAAU,EACVL,cAAe,CAAC,GAElBM,aAAc,CACZV,YAAa,gBACbC,SAAU,OACVC,OAAQ,CACNC,KAAK,GAEPC,cAAe,CACbM,cAAc,IAGlBC,MAAO,CACLX,YAAa,QACbC,SAAU,SACVC,OAAQ,CACNC,KAAK,GAEPC,cAAe,CACbQ,eAAe,MAsBd,SAASC,EAAWC,GACzB,OAAOjB,OAAOkB,OAAOnB,EAAckB,EACrC,CAEO,SAASE,EAAYF,GAC1B,OAAOlB,EAAakB,EACtB,CAEO,MAAMG,EAAiBpB,OAAOC,OACnCD,OAAOqB,KAAKtB,IAGDuB,EAAoDtB,OAAOuB,QACtExB,GACAyB,KAAI,EAAEC,EAAGC,MACT,IAAKV,EAAWS,GAAI,MAAM,IAAIE,MAAM,wBACpC,MAAO,CAACF,EAAGC,EAAE,I,iCC5ER,MAAME,EAAW,CACtBC,KAAM,KAAeD,UAGVE,EAAY,OACZC,EAAa,QACbC,EAAe,UACfC,EAAmB,cACnBC,EAAgB,WAGhBC,EAA0B,iBAC1BC,EAAqB,gBAErBC,EAAmB,QACnBC,EAAmB,cAEnBC,EAAwB,cACxBC,EAA8B,oBAC9BC,EAAoC,0BACpCC,EAA4B,kBCPnCC,EAAmB,oBAMlB,SAASC,EAAaC,GAC3B,MAAO,GAAGF,IAAmBE,GAC/B,CAUO,SAASC,GAAa,MAC3BD,EAAK,eACLE,EAAc,aACdC,IAMA,MAAMC,EAAW,GAAGZ,KAAoBQ,KAElCK,EAA4B,CAChCC,KAAM,GAAGF,KAAYT,IACrBY,IAAI,GAGN,MAAO,CACLC,KAAMT,EAAaC,GACnBS,MAAO,QAAQT,EAAQ,IACvBU,UAAWR,EACX1C,OAAQ,CACN,CACEmD,UAAW,wBACXH,KAAM,+BAA+BR,KACrCA,MAAOA,GAET,CACEW,UAAW,KAAeC,WAC1BJ,KAAM,sCACNK,MAAO,+CAET,CACEF,UAAW,KAAeG,SAC1BN,KAAM,GAAGJ,KAAYV,IACrBmB,MAAO,cACPE,kBAAmB,YAErB,CACEJ,UAAW,KAAeK,OAC1BR,KAAM,GAAGJ,KAAYT,IACrBkB,MAAO,6BAET,CACEF,UAAW,KAAeC,WAC1BJ,KAAM,uCACNS,UAAWZ,EACXQ,MAAO,2DAET,CACEF,UAAW,KAAeG,SAC1BN,KAAM,GAAGJ,KAAYR,IACrBqB,UAAWZ,EACXQ,MAAO,0BACPE,kBAAmB,YAErB,CACEJ,UAAW,KAAeO,WAC1BD,UAAWZ,EACXQ,MAAO,2BACPL,KAAM,GAAGJ,KAAYP,IACrBsB,YAAa,kCAGjBC,SAAU,EAAGC,YACPrB,EAAQ,GAAKqB,IAAS5B,IAAmB6B,QAAU,GAC9CvB,EAAaC,EAAQ,GAGvBG,EAEToB,aAAc,CACZC,KACE,kBAAC,KAAO,CAACC,aAAc,CAAEJ,QAAQ,KAC7BK,GACO1B,EAAQ,EAAI0B,EAAML,OAAO5B,GAAkB6B,OAC9C,eAAetB,EAAQ,YACvB,gCAMhB,C,cCrGO,MAAM2B,EAA6B,uBAMnC,SAASC,EAAsBxD,GACpC,MAAO,GAAGuD,IAA6BvD,GACzC,CCYA,MAAMyD,EAAsB,gBAMrB,SAASC,EAAgB1D,GAC9B,MAAO,GAAGyD,IAAsBzD,GAClC,CCrCA,MAAM2D,EAAY,YCDLC,EAAuB,kBAIjC,CACDC,MAAO,GACPC,qBAAsB,OACtBC,aAAc,SCLHC,EAAgB,gBAMvBC,GAAuBC,IAC3B,MAAM,aAAEH,IAAiB,IAAAI,YAAWP,GAEpC,OACE,oCACE,kBAACQ,EAAA,GAAM,CACLxD,KAAK,SACLyD,QAAQ,YACRC,WAAYJ,EAAMK,YAClBC,QAAS,IAAMN,EAAMO,cAAY,QAKnC,kBAACL,EAAA,GAAM,CACLxD,KAAK,SACLyD,QAAQ,YACRK,KAAM,kBAAC,KAAc,MACrBF,QAAST,GAAY,iCAK1B,ECRGY,GAAiBT,GAEnB,kBAAC,KAAO,CACNb,aAAc,CACZuB,UAAU,EACVC,OAAO,EACPC,YAAY,EACZ7B,QAAQ,KAGRK,IAIA,MAAMyB,EAAeb,EAAMlB,SACvBkB,EAAMc,WAAWd,EAAMlB,UAAU,IAAMM,SACvC2B,EAEJ,OACE,oCACE,kBAACb,EAAA,GAAM,CACLxD,KAAK,SACLyD,QAAQ,YACRC,WAAYJ,EAAMK,YAClBC,QAAS,IAAMN,EAAMO,cAAY,aAKjBQ,IAAjBF,EACGb,EAAMgB,iBAAiB,CAAEC,YAAa,SACtC,KAEP,IAMHC,GAA0B,e,0BChEhC,MAuBA,GAvBqB,EACnBxE,OAAO,SACPyE,WACAX,UACGY,KAKD,+BACMA,EACJ1E,KAAMA,EACN2E,UAAW,gCAAgCD,EAAKC,WAAa,KAC7DC,MAAO,CAAEC,OAAQ,UAAYH,EAAKE,OAAS,CAAC,IAE5C,0BAAMD,eAAoBN,IAATP,EAAqB,gBAAkB,IACrDW,GAEFX,G,sECNP,MA+CA,GA/CwBR,IACtB,MAAM,MAAEwB,EAAK,KAAEC,KAASL,IAAS,QAAYpB,GACvC0B,GAAU,IAAAC,SACVC,EAAcR,EAAKS,IAAMH,EAEzBI,EAAcL,EAAKM,SAAWN,EAAKO,QAEnCC,EAAa,CACjBC,QAASV,EAAMU,QACfC,OAAQX,EAAMW,QAGhB,OACE,kBAACC,GAAA,EAAS,CACR7D,MAAO6C,EAAK7C,MACZ8D,WAAYjB,EAAKiB,WACjBC,QAASV,GAET,kBAACW,GAAA,EAAW,CACVV,GAAID,EACJY,UAAWhB,EAAMtD,KACjBuE,MAAOjB,EAAMiB,MACbC,UAAWZ,EAAc,QAAU,UACnCa,IAAKvB,EAAKwB,SACVC,IAAKzB,EAAK0B,SACVC,KAAM3B,EAAK2B,KACXC,OAAQ,IAAMxB,EAAMyB,UAAUzB,EAAMiB,OAAS,GAAK,GAClDS,QAAS,IAAM1B,EAAMyB,UAAUzB,EAAMiB,OAAS,GAAK,GACnDQ,SAAWE,GAAM3B,EAAMyB,SAASE,EAAEC,cAAcC,kBAC5CpB,EACJqB,aAAcrB,EACdsB,cAAetB,IAGhBH,EACC,kBAAC0B,GAAA,EAAc,KACb,kBAACC,GAAA,EAAU,KACT,kBAACC,GAAA,EAAc,CAACvD,QAAS,QAASK,KAAM,kBAAC,MAAqB,OAC3DiB,EAAKkC,SAIV,KAEP,E,oCC3CH,MAAMC,GAA0B,GAC1BC,GAAiBnG,GAAkB,QAAQA,EAAQ,IAwGzD,GAtG0BsC,IACxB,MAAM6B,GAAK,IAAAF,UAEL,MAAEH,KAAUJ,IAAS,QAAYpB,GACjC0B,GAAU,IAAAC,SACVC,EAAcR,EAAKS,IAAMH,EAEzBoC,EAAc1C,EAAK0C,aAAe,GAElCrB,EAAkBjB,EAAMiB,OAASmB,GACjCG,EAAuC3C,EAAK2C,WAAaF,GAEzDG,EAA+B5C,EAAK4C,SACpCC,EAA+B7C,EAAK6C,SAE1C,QAAiBlD,IAAbiD,GACEvB,EAAMzD,OAASgF,EAAU,CAC3B,MAAME,EAAW,IAAIzB,GAErB,IAAK,IAAI0B,EAAI,EAAGA,EAAIH,EAAWvB,EAAMzD,SAAUmF,EAC7CD,EAASE,KAAKN,GAGhBtC,EAAMyB,SAASiB,EACjB,CAGF,MAAMG,OAAyBtD,IAAbiD,GAA0BvB,EAAMzD,OAASgF,EACrDM,OAAsBvD,IAAbkD,GAA0BxB,EAAMzD,OAASiF,EAElDM,EAAWnD,EAAKmD,UAAY,WAC5BC,EAAepD,EAAKoD,aAEpBC,EAAcrD,EAAKqD,aAAe,6BAExC,OACE,kBAACC,GAAA,EAAW,CACVvG,MAAOiD,EAAK7C,OAAS,QACrBsD,GAAID,EACJ1D,KAAMsD,EAAMtD,KACZmD,UAAU,eAEV,yBAAKA,UAAU,gCACZoB,EAAMpG,KAAI,CAACsI,EAASjH,KACnB,MAAMkH,EAAY,GAAG/C,KAAMnE,UAE3B,OACE,kBAAC0E,GAAA,EAAS,CACRyC,IAAKnH,EACLa,MAAOwF,EAAUrG,GACjB4E,QAASsC,EACTvC,YAAU,GAEV,kBAACyC,EAAA,EAAI,CAACC,IAAK,CAAEC,QAAS,YACpB,kBAACC,EAAA,EAAQ,CAACC,KAAM,CAAEF,QAAS,SACzB,kBAACG,GAAA,GAAS,CACRtD,GAAI+C,EACJ1G,KAAM,GAAGsD,EAAMtD,cACfmE,YAAU,EACV3F,KAAK,OACL+F,MAAOkC,EACP1B,SAAU,CAACmC,EAAGC,KACZ,MAAMnB,EAAW,IAAIzB,GACrByB,EAASxG,GAAS2H,EAElB7D,EAAMyB,SAASiB,EAAS,KAK7BG,EACC,kBAACY,EAAA,EAAQ,KACP,kBAAC/E,EAAA,GAAM,cACO,eAAexC,EAAQ,IACnCyC,QAAQ,QACRK,KAAM,kBAAC,MAAe,MACtBF,QAAS,IAAMkB,EAAMyB,SAASR,EAAM6C,UAAU5H,EAAO,OAGvD,MAGT,KAIJ4G,EACC,kBAACpE,EAAA,GAAM,CACLC,QAAQ,OACRK,KAAMgE,EACNlE,QAAS,IAAMkB,EAAMyB,SAASR,EAAM8C,OAAOzB,IAC3C0B,UAAU,GAETjB,GAGH,8BAAOE,GAGZ,ECtDGgB,GAAgC,CAAC,IAE1BC,GAA6B,CAAC,EASrCC,GAAc,EAClB5G,SACA6G,eACAC,kBACAC,6BAEA,MAAMC,EAAUhH,EAAOlC,IAEvB,IAAAmJ,YAAU,KACRH,EAAgBE,GAAW,GAAG,GAC7B,CAACA,IAEJ,MAAME,EAA8BlH,EAAOpC,GACrCwB,EAA4BY,EAAOnC,GACnCsJ,EAAkCnH,EAAOjC,GACzC3B,EAA0B4D,EAAe,IACzCvD,EAAwCuD,EAAOhC,GAC/CoJ,EAAsCpH,EAAO9B,GAC7CmJ,EAAmCrH,EAAO/B,GAE1CqJ,EAAuBtH,EAAO5B,IAAqBsI,GACnDa,EAA0CvH,EAAO7B,GAEjDpB,EACe,iBAAZmK,GAAwBpK,EAAWoK,GAAWA,EAAU,KAE3DxE,EAAgB,OAAT3F,EAAgBE,EAAYF,GAAQ,MAEjD,IAAAkK,YAAU,KACRJ,EAAa9J,EAAK,GACjB,CAACA,IAEJ,MAAMyK,GAAiB,IAAAC,UAAQ,KAC7B,IAAuB,IAAnB/E,GAAMhG,SAAmB,OAE7B,MAAMgL,EAAwB,GAG9B,IAAK,IAAItC,EAAI,EAAGA,EAAIkC,EAAWrH,SAAUmF,EAAG,CAC1C,MAAMuC,EAAYJ,IAAanC,GAE/BsC,EAAIrC,KAAK,CACPjG,MAAOkI,EAAWlC,GAClB+B,YAAaQ,GAAWR,aAAe,GACvCS,OAAQD,GAAWE,kBACf,CACEC,aAAcH,GAAWI,wBACzBC,eAAgBL,GAAWM,kBACxB,QACLjG,GAER,CAEA,OAAO0F,CAAG,GACT,CAAChF,EAAM4E,EAAYC,KAEtB,IAAAN,YAAU,KACRF,EAAuB,CACrBpJ,KACW,OAAT+E,EACI,CACEwF,KAAMxF,EAAKzG,YACXkM,MAAOzF,EAAKxG,eAEd8F,EACN/F,YAAamD,GAAS,GACtB+H,YAAaA,GAAe,GAC5B1F,KAAM,KACN2G,KACE1F,GAAMvG,QAAQC,UAAe4F,IAAR5F,EACjB,CACE8L,KAAM,qBACNG,KAAMjM,QAER4F,EACNsG,gBACE5F,GAAMvG,QAAQM,UAAgC,iBAAbA,EAC7BA,OACAuF,EACNoF,eAAkC,IAAnB1E,GAAMhG,SAAoB0K,OAAgBpF,EACzDqF,cAAiC,IAAnB3E,GAAMhG,SAAoB2K,OAAerF,EACvDuG,MAAOf,IAGTX,EAAa9J,EAAK,GACjB,CACD2F,EACAwE,EACA9H,EACA+H,EACA/K,EACAK,EACA2K,EACAC,EACAG,GAIc,EAGZgB,GAAe,KACnB,MAAM,MAAE5H,IAAU,IAAAM,YAAWP,GAE7B,SAAS8H,EAAWC,GAClB,MAAMC,EAAWD,EAAKvJ,KAAKyJ,YAAY,KACjCC,GACU,IAAdF,EAAkBD,EAAKvJ,KAAK2J,UAAU,EAAGH,GAAYD,EAAKvJ,KACtD4J,GACU,IAAdJ,EAAkBD,EAAKvJ,KAAK2J,UAAUH,EAAW,GAAK,OAExD,SAAaD,EAAKM,QAASH,EAAUE,EACvC,CAEA,OACE,6BACE,kBAACE,EAAA,EAAM,CAACC,iBAAiB,gCAAgC9H,QAAQ,SAC/D,kBAAC2E,EAAA,EAAI,CAACoD,WAAY,CAAElD,QAAS,iBAC3B,kBAACC,EAAA,EAAQ,KACP,kBAAC,KAAe,OAElB,kBAACA,EAAA,EAAQ,wCAIb,kBAACkD,EAAA,EAAK,CAACC,WAAS,EAAC/G,UAAU,gBACzB,kBAACgH,EAAA,EAAS,KACR,kBAACC,EAAA,EAAI,K,8EAEI,IACP,uBACElB,KAAK,2EACLmB,OAAO,SACPC,IAAI,cAEH,I,sBAOP,kBAACH,EAAA,EAAS,KACR,kBAACnI,EAAA,GAAM,CACLC,QAAQ,UACRK,KAAM,kBAAC,KAAY,MACnBF,QAAS,IAAMX,EAAM8I,SAAShB,GAASD,EAAWC,M,iBAEnC9H,EAAMX,O,YAIxBW,EAAMtD,KAAKoL,GACV,kBAACY,EAAA,EAAS,CAACxD,IAAK4C,EAAKvJ,MACnB,kBAAC,GAAY,CACXsC,KAAM,kBAAC,KAAY,MACnBa,UAAU,gBACVf,QAAS,IAAMkH,EAAWC,IAEzBA,EAAKvJ,MAGR,kBAACwK,EAAA,GAAa,CACZC,QAAM,EACNC,YAAU,EACVzI,QAASuI,EAAA,GAAqBG,UAC9BC,SAAS,OACTC,SAAS,UAERtB,EAAKM,aAMjB,EAKGiB,GAAY,KAChB,MAAMC,GAAgB,IAAAhJ,YAAW,WAC3BiJ,GAAiB,IAAAjJ,YAAWP,IAElC,IAAAsG,YAAU,KACRkD,EAAetJ,qBJtLZ,SAA2B1B,GAChC,GHvEK,SAAoBA,GACzB,OAAOA,IAASuB,CAClB,CGqEM0J,CAAWjL,IJ1CV,SAAuBA,GAC5B,OAAOA,EAAKkL,WAAW7J,EACzB,CIwC0B8J,CAAcnL,GAAO,MAAO,CAAExB,KAAM,QAE5D,GLhEK,SAA6BwB,GAClC,OAAOA,EAAKkL,WAAW/J,EACzB,CK8DMiK,CAAoBpL,GAAO,MAAO,CAAExB,KAAM,kBAE9C,GNjEK,SAAoBwB,GACzB,OAAOA,EAAKkL,WAAW5L,EACzB,CM+DM+L,CAAWrL,GACb,MAAO,CACLxB,KAAM,OACNgB,MAAO,MACL,MAAMA,EN7DP,SAA0BQ,GAC/B,OAAIA,EAAKkL,WAAW5L,GACXgM,SAAStL,EAAK2J,UAAUrK,EAAiBwB,SAG3C,IACT,CMuDsByK,CAAiBvL,GAC/B,GAAc,OAAVR,EAAgB,MAAM,IAAIlB,MAAM,8BAEpC,OAAOkB,CACR,EALM,IASX,GDtFK,SAAwBQ,GAC7B,OAAOA,IAAS4B,CAClB,CCoFM4J,CAAexL,GAAO,MAAO,CAAExB,KAAM,YAEzC,MAAM,IAAIF,MAAM,8BAAgC0B,EAClD,CImKMyL,CAAkBV,EAAcW,YAAY1L,MAC7C,GACA,CAAC+K,EAAcW,YAAY1L,MAEd,EAGZ2L,GAAmB,EAAGnM,WAExB,kBAAC,KAAO,CAACyB,aAAc,CAAEJ,QAAQ,KAC7BK,GACA,kBAAC0K,EAAA,EAAK,CAACC,aAAa,MACjB3K,EAAML,SAAS5B,KAAoBO,IAAU,MA2ExD,GApEsB,EACpBkI,eACAE,yBACAD,kBACAjG,uBACAC,eACAF,YAEA,MAAMqK,GAAS,EAAAC,GAAA,KACTC,GAAS,IAAA1D,UAAQ,IJ7LlB,SAAoBwD,GACzB,MAAMjE,EAAUiE,EAAOG,sBAEjBC,EAAY,GAElB,IAAK,IAAIjG,EAAI,EAAGA,EPhFO,KOgFUA,EAC/BiG,EAAUhG,KACRzG,EAAa,CACXD,MAAOyG,EACPvG,eAAgBsD,GAChBrD,aAAciC,KAKpB,MAAMuK,EAGF,CACFhM,UAAW,KAAeiM,OAC1BpM,KAAM,2BACNqM,WAAW,EACXC,WAAY,CAAC7N,EAAWQ,GACxBjC,OAAQ,CH9GH,CACLgD,KAAMuB,EACNtB,MAAO,sBACPjD,OAAQ,CACN,CACEmD,UAAW,KAAeC,WAC1BJ,KAAM,iCACNK,MAAO,2DAET,CACEF,UAAW,KAAeoM,MAC1BvM,KAAMvB,EACN4B,MAAO,sBACPmM,aAAa,EACbC,QAASxO,EAAiBE,KAAI,EAAE6B,EAAMuE,MAAW,CAC/CA,MAAOvE,EACPK,MAAOkE,EAAMzH,gBAEfqH,YAAY,EACZuI,SAAU,CAACnO,KAGfqC,SAAU,CACRd,KAAMrB,EACNkO,WAAYhQ,OAAOiQ,YACjB7O,EAAeI,KAAKP,GAAS,CAACA,EAAM0D,EAAgB1D,YGuFnDG,EAAeI,KAAKP,GJhFtB,UAAyB,KAC9BA,EAAI,QACJiK,EAAO,aACPlI,IAMA,MAAM4D,EAAOzF,EAAYF,GAEnBZ,EAAkB,GAhC1B,IAA2B6P,EA0GzB,OAxEA7P,EAAOkJ,KACL,CACE/F,UAAW,KAAeC,WAC1BJ,KAAM,oCACNK,MACE,wEAEJ,CACEF,UAAW,KAAe2M,OAC1B9M,KAAMrB,EACN0B,MAAO,uBACPmM,aAAa,EACbO,SAAS,EACTpM,YAAa,wBACb8L,QAAS5E,EAAQ1J,KAAK6O,IAAM,CAC1BzI,MAAOyI,EAAErJ,GACTtD,MAAO,GAAG2M,EAAE/M,UAAU+M,EAAErJ,UAE1BQ,YAAY,EACZuI,SAAU,CAACnO,IAEb,CACE4B,UAAW,KAAeO,WAC1BV,KAAMtB,EACN2B,MAAO,iBACPM,YAAa,2BACbwD,YAAY,EACZuI,SAAU,CAACnO,IAEb,CACE4B,UAAW,KAAeG,SAC1BN,KAAMpB,EACNyB,MAAO,uBACPM,YACE,iGACFwD,YAAY,EACZuI,SAAU,CAACnO,GACXgC,kBAAmB,aAInBgD,EAAKvG,OAAOM,UACdN,EAAOkJ,KAAK,CACV/F,UAAW,kBACXH,KAAMnB,EACNwB,MAAO,WACPwE,KAAM,0BAAM1B,UAAU,uBAAqB,WAC3C8J,SAAU,KAAUC,OACpBC,aAAc,EACdzI,SAAU,EACVP,YAAY,EACZuI,SAAU,CAACnO,KAIXgF,EAAKvG,OAAOC,KACdD,EAAOkJ,KAAK,CACV/F,UAAW,KAAeO,WAC1BV,KHxGkB,MGyGlBK,MAAO,eACPM,YAAa,sCACbwD,YAAY,EACZuI,SAAU,CACRnO,EACA,CACEC,KAAM,KAAe4O,MAGzB3M,WAtGqBoM,EAsGStJ,IAA6B,IAApBA,EAAKvG,OAAOC,IArGhD,CACL6C,KAAMrB,EACNsB,GAAKnC,GAEe,iBAATA,GAAqBD,EAAWC,IAASiP,EAAK/O,EAAYF,QAqGhE,CACLoC,KAAMsB,EAAgB1D,GACtBqC,MAAO,GAAGsD,EAAKzG,sBACfE,OAAQA,EACR4D,SAAU2C,EAAKhG,SAAW6D,EAAsBxD,GAAQ+B,EACxDoB,aAAc,CACZC,KAAMuC,EAAKhG,SACP,2BAA2BgG,EAAKzG,oBAChC,mCAGV,CIfQuQ,CAAgB,CAAEzP,OAAMiK,UAASlI,aAAciC,SAE9C7D,EAAeuP,QAAQ1P,GAASE,EAAYF,GAAML,WAAUY,KAC5DP,GLxGF,UAA+B,KACpCA,EAAI,eACJ8B,IAKA,MAAM6D,EAAOzF,EAAYF,GAsDzB,MApDwE,CACtEoC,KAAMoB,EAAsBxD,GAC5BqC,MAAO,kBACPC,UAAWR,EACX1C,OAAQ,CACN,CACEmD,UAAW,KAAeC,WAC1BJ,KAAM,sCACNK,MAAO,8EAA8EkD,EAAKzG,mGAE5F,CACEqD,UAAW,KAAeC,WAC1BJ,KAAM,gCACNK,MAAO,kBAACuL,EAAA,EAAK,CAACC,aAAa,MAAMtI,EAAKzG,Y,cAExC,CACEqD,UAAW,KAAeG,SAC1BN,KAAMlB,EACNuB,MAAO,0BACPE,kBAAmB,YAErB,CACEJ,UAAW,KAAeoN,YAC1BvN,KAAMjB,EACNsB,MAAO,gBACPmN,eAAgB,oCAChBxQ,OAAQ,CACN,CACEmD,UAAW,KAAeO,WAC1BL,MAAO,kBAIb,CACEF,UAAW,kBACXH,KAAMf,EACNoB,MAAO,QACPyF,SAAU,EACVC,SF/CiB,GEgDjBoH,aAAc,CAAC,IACf5G,YAAa,8BACbV,UAAYrG,GAAkB,QAAQA,EAAQ,IAC9C6G,SAAU,mBACVC,aAAc,kBAAC,KAAc,QAGjC1F,SAAUrB,EAAa,GACvBwB,aAAc,CACZC,KAAM,yBAKZ,CK2CUyM,CAAsB,CACpB7P,OACA8B,eAAgBsD,UAGnBkJ,ED/FA,CACLlM,KAAM4B,EACN3B,MAAO,iBACPjD,OAAQ,CACN,CACEmD,UAAW,oBACXH,KAAM,sBAGV0N,kBAAkB,EAClBC,QAAS9L,MCmIX,MAAO,CACL7E,OAAQ,CA1CU,IACfmP,EACHnP,OAAQmP,EAAenP,OAAOmB,KAAKyP,IACjC,MAAMC,EAEF,IAAKD,GAgCT,OA5BAC,EAAK7Q,OAAS,IACT6Q,EAAK7Q,OACR,CACEmD,UAAW,gBACXH,KAAM,yBAAyB6N,EAAK7N,cAKnB6C,IAAjBgL,EAAKF,UACPE,EAAKF,QAAUpL,SAGSM,IAAtBgL,EAAK9M,eAEP8M,EAAK9M,aAAe,CAClBC,KAAM,OACN8M,OAAQ,SACRC,KAAM,UACHF,EAAK9M,mBAIuB8B,IAA7BgL,EAAK9M,aAAaiN,SACpBH,EAAK9M,aAAaiN,OAASH,EAAK9M,aAAaC,OAI1C6M,CAAI,MAOjB,CIyG+BI,CAAWnC,IAAS,IAE3CoC,GAAU,IAAA5F,UACd,KAAM,CACJ7G,QACAC,uBACAC,kBAEF,CAACF,EAAOC,IAGJyM,EAAkB,IACnB,KACH,kBAAmB,GACnB,oBAAqB9E,GACrB,gBAAiByB,GACjB,wBAAyBa,GACzB,kBAAmB,IAGrB,OACE,kBAACnK,EAAqB4M,SAAQ,CAAC7J,MAAO2J,GACpC,kBAAC,KAAY,CACXG,SAAU,OACVrC,OAAQA,EACRmC,gBAAiBA,IAEhB,EAAGG,gBACF,0BAAMD,SAAWpJ,GAAMA,EAAEsJ,iBAAkBpL,UAAU,gBACnD,kBAAC,KAAO,CAAClC,aAAc,CAAEJ,QAAQ,KAa7BiB,GACA,kBAAC2F,GAAW,CACV5G,OAAQiB,EAAMjB,OACd6G,aAAcA,EACdC,gBAAiBA,EACjBC,uBAAwBA,MAI9B,oCAAG0G,MAKZ,E,yBCzUH,MAyFA,GAzFuB,EACrBE,WACAC,aACAC,mBAMA,MAAMC,GAAiB,IAAArG,UAAQ,IAAM,CAACmG,IAAa,CAACA,KAC7CG,EAAkBC,IAAuB,IAAAC,UAC9C,CAAC,IAGIC,EAAWC,IAAgB,IAAAF,UAChCJ,GAGIO,GAAgB,IAAAlN,YAAW,GAAAmN,mBAE3BC,EACJX,GAAUjR,WACa,mBAAtBmR,EAAalQ,MAAmD,SAAtBkQ,EAAalQ,MAEpD4Q,GAAmB,KAAAC,+BAA8B,CACrDV,eAAgB,CAACF,GACjBa,mBAAoBH,EAAYV,EAAWc,SAASvP,KAAO,GAC3DwP,sBAAuB,OACvBC,oBAAqBb,EACrBc,uBAAyBC,GAAWd,EAAoBc,GACxDC,gBAAgB,EAChBC,OAAQZ,EAAcY,OACtBC,mBAAmB,IAuBrB,OApBIV,EAAiBT,iBAAiB,KAAOF,GAC3CW,EAAiBW,oBAAoB,CAACtB,IAGpCM,IAAcL,IAChBM,EAAaN,GAEa,mBAAtBA,EAAalQ,KACf4Q,EAAiBY,oBACfvB,EAAWc,SAASvP,KACpByO,EAAWwB,KAAK7G,OAAOtI,QAAU,GAEJ,SAAtB4N,EAAalQ,MACtB4Q,EAAiBc,0BACfzB,EAAWc,SAASvP,KACpB0O,EAAalP,QAMjB,kBAACoH,EAAA,EAAI,CACHuJ,UAAW,CAAErJ,QAAS,UACtBD,IAAK,CAAEC,QAAS,WAChB3D,UAAU,iBAEV,kBAAC4D,EAAA,EAAQ,KACP,kBAAC6E,EAAA,EAAK,CAACC,aAAa,KAAKuE,KAAK,KAAKjN,UAAU,iB,QACrCgM,EAAYX,EAAS1R,YAAc,O,aAI7C,kBAACiK,EAAA,EAAQ,CAACC,KAAM,CAAEF,QAAS,SACzB,kBAAC,GAAAoI,kBAAkBd,SAAQ,CAAC7J,MAAO6K,GACjC,kBAAC,GAAAiB,iBAAgB,CAACC,YAAa3B,GAC7B,iCACIQ,EASE,KARF,yBAAKhM,UAAU,2BACb,kBAACoN,GAAA,EAAqB,CACpB9B,WAAYA,EACZ+B,UAAW,KACXC,UAAU,EACVC,OAAQ,GAAAC,iBAAiBC,mBAS1C,ECrFGC,GAAgB,CACpB7Q,KAAM,mBAmBF8Q,GAAkB,EAAGnP,mBACzB,MAAOoG,EAASgJ,IAAc,IAAAjC,UAA0B,OAEjDkC,EAAeC,IAAoB,IAAAnC,UAAqB,CAC7DS,SAAU,CACRvP,KAAM,mBAERiQ,KAAM,CACJnT,YAAa,GACbwF,KAAM,KACN0F,YAAa,MAIXkJ,EACQ,OAAZnJ,EAAmB,CAAEpE,GAAIoE,EAASxE,KAAMzF,EAAYiK,IAAa,MAE5DF,EAASsJ,IAAc,IAAArC,UAAmB,KAC1CJ,EAAc0C,IAAmB,IAAAtC,UAA6B,CACnEtQ,KAAM,SAGF6S,EAAwC,aAAtB3C,EAAalQ,KAqD/BiQ,GAAa,IAAAnG,UACjB,IA5FJ,SACE1K,EACA0T,GAEA,MAAM9C,EAAoB,OAAT5Q,EAAgBE,EAAYF,GAAQ,KAErD,MAAO,IACF0T,EACH/B,SAAU,IACL+B,EAAe/B,SAClBvP,KAAM,qBACFwO,GAAUtR,eAAiB,CAAC,GAGtC,CA8EUqU,CAAmBxJ,EAASiJ,IAClC,CAACjJ,EAASiJ,IAGNvP,GAAQ,IAAA6G,UAAQ,KACpB,MAAMkJ,EAAgB/C,EAAWwB,KAAKnT,YACnC2U,cACAC,WAAW,MAAO,KAClBA,WAAW,eAAgB,IAExBC,EAAqB,IACtBlD,EACHwB,KAAM,IACDxB,EAAWwB,KACd3N,UAAMO,GAER0M,SAAU,IACLd,EAAWc,SACdvP,KAAMwR,IAIV,MAAO,CACL,CACExR,KAAM,gBACN6J,QAAS,eAAe,CACtBjM,KAAM,cACNoC,KAAMwR,EACNI,KAAM/J,EACHgK,WACA1T,KAAK2T,IAAW,CAAGlU,KAAM,SAAU2G,MAAOuN,SAGjD,CACE9R,KAAM,GAAGwR,SACT3H,QAAS,eAAe8H,IAE3B,GACA,CAAClD,EAAY5G,IAEhB,OACE,kBAACkK,EAAA,EAAS,KACR,kBAACC,EAAA,GAAW,CAAC7O,UAAU,aACrB,kBAACyI,EAAA,EAAK,CAACC,aAAa,KAAKuE,KAAK,OAAK,6BAInC,2B,wEACwE,IACtE,uBACElH,KAAK,uHACLmB,OAAO,SACPC,IAAI,cAAY,+DAOtB,kBAAC0H,EAAA,GAAW,CAACC,UAAQ,EAACC,QAAS,CAAEpL,QAAS,cACxC,kBAACqL,EAAA,EAAI,CAACjI,WAAS,EAAC/G,UAAU,+BACxB,kBAACiP,EAAA,EAAQ,CAACC,KAAM,GAAIC,GAAIjB,EAAkB,EAAI,IAC5C,kBAAC,GAAa,CACZ3J,aAvGK6K,IACf,GAAgB,OAAZA,EAAkB,CACpB,MAAMhP,EAAOzF,EAAYyU,GAEzBtB,GAAkBuB,IAChB,MAAMC,EAA+B,CAAC,EA2BtC,OAzBAA,EAAQxC,KAAO,IAAKuC,EAAIvC,MAExBwC,EAAQxC,KAAKzR,KAAO,CAClBuK,KAAMxF,EAAKzG,YACXkM,MAAOzF,EAAKxG,WAIZwG,EAAKhG,eACesF,IAAnB2P,EAAIvC,KAAK7G,OAAiD,IAA1BoJ,EAAIvC,KAAK7G,MAAMtI,SAEhD2R,EAAQxC,KAAK7G,MAAQ,CAAC5B,KAGnBjE,EAAKhG,WACRkV,EAAQxC,KAAK7G,WAAQvG,EACrB4P,EAAQxC,KAAK/H,kBAAerF,EAC5B4P,EAAQxC,KAAKhI,cAAgB,IAG1B1E,EAAKvG,OAAOC,MAAKwV,EAAQxC,KAAKhH,UAAOpG,GACrCU,EAAKvG,OAAOM,WAAUmV,EAAQxC,KAAK9G,qBAAkBtG,GAE1D4P,EAAQlD,SAAW,IAAKsB,MAAkBtN,EAAKrG,eAExC,IAAKsV,KAAQC,EAAS,GAEjC,CAEA1B,EAAWwB,EAAQ,EAoET3K,uBAAyBqI,IApHlB,IACjByC,IAoHuB,IAAMzC,EAlH7BgB,GAAkBuB,IAAQ,IACrBA,EACHvC,KAAM,IACDuC,EAAIvC,QACJyC,EAAQF,EAAIvC,UA8Ge,EAExBtI,gBAAiBwJ,EACjBzP,qBAAsB0P,EACtBzP,aAAcA,EACdF,MAAOA,KAIV4P,EACC,kBAACe,EAAA,EAAQ,CAACC,KAAM,GAAIC,GAAI,EAAGnP,UAAU,uBACnC,kBAAC,GAAc,CACbqL,SAAU0C,GAAc3N,MAAQ,KAChCkL,WAAYA,EACZC,aAAcA,KAGhB,OAIX,EAcH,GAXgB,KACd,MAAOiE,EAAYC,IAAiB,IAAA9D,UAAS,IAE7C,OACE,kBAACgC,GAAe,CACdnK,IAAKgM,EACLhR,aAAc,IAAMiR,GAAeJ,GAAQA,EAAM,MAEpD,C,6GCtMH,MAAMK,EAAyB,IAC7B,kBAAC,IAAI,CAAC1P,UAAU,uBACd,kBAAC,KAAoB,OAInB2P,EAAiB,IACrB,kBAAC,IAAI,CAAC3P,UAAU,uBACd,kBAAC,KAAY,OAuDjB,EA9C8B,EAC5BsL,aACA+B,YACAC,WACAC,YAQE,yBAAKvN,UAAU,wBACb,kBAAC,EAAA4P,eAAc,CACbC,OACgB,OAAdxC,EACI,CACE,aAAcA,EAAUyC,WACpB,qBAAqBxE,EAAWwB,KAAKnT,8BACrC,uBAAuB2R,EAAWwB,KAAKnT,eAC3CwF,KAAMkO,EAAUyC,WACZH,EACAD,EACJzQ,QAAU6C,IACRA,EAAEsJ,iBACFtJ,EAAEiO,kBACF1C,EAAU2C,aAAa3C,EAAUyC,WAAW,QAGhDpQ,EAEN4L,WAAY,IACPA,EACHwB,KAAM,IACDxB,EAAWwB,KAEd3N,KAAM,OAGVmO,SAAUA,EACVC,OAAQA,I","sources":["webpack:///./src/components/creator/meta.ts","webpack:///./src/components/creator/steps/common.ts","webpack:///./src/components/creator/steps/task.tsx","webpack:///./src/components/creator/steps/panel-overview.tsx","webpack:///./src/components/creator/steps/details.tsx","webpack:///./src/components/creator/steps/kind.tsx","webpack:///./src/components/creator/context.ts","webpack:///./src/components/creator/steps/download.tsx","webpack:///./src/components/creator/schema.tsx","webpack:///./src/components/SimpleButton.tsx","webpack:///./src/components/DdfNumberInput.tsx","webpack:///./src/components/StringArrayInput.tsx","webpack:///./src/components/creator/CreatorWizard.tsx","webpack:///./src/components/creator/CreatorPreview.tsx","webpack:///./src/Creator.tsx","webpack:///./src/components/WrappedQuickStartTile.tsx"],"sourcesContent":["import { QuickStartType } from '@patternfly/quickstarts';\n\nconst rawItemKindMeta = Object.freeze({\n  documentation: {\n    displayName: 'Documentation',\n    tagColor: 'orange',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      externalDocumentation: true,\n    },\n  },\n  quickstart: {\n    displayName: 'Quickstart',\n    tagColor: 'green',\n    hasDuration: true,\n    fields: {\n      duration: true,\n    },\n    hasTasks: true,\n    extraMetadata: {},\n  },\n  learningPath: {\n    displayName: 'Learning path',\n    tagColor: 'cyan',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      learningPath: true,\n    },\n  },\n  other: {\n    displayName: 'Other',\n    tagColor: 'purple',\n    fields: {\n      url: true,\n    },\n    extraMetadata: {\n      otherResource: true,\n    },\n  },\n} as const);\n\nexport type ItemMeta = {\n  displayName: string;\n  tagColor: QuickStartType['color'];\n  fields: {\n    url?: boolean;\n    duration?: boolean;\n  };\n  hasTasks?: boolean;\n  extraMetadata: object;\n};\n\nconst itemKindMeta: {\n  [k in keyof typeof rawItemKindMeta]: ItemMeta;\n} = rawItemKindMeta;\n\nexport type ItemKind = keyof typeof itemKindMeta;\n\nexport function isItemKind(kind: string): kind is ItemKind {\n  return Object.hasOwn(itemKindMeta, kind);\n}\n\nexport function metaForKind(kind: ItemKind): ItemMeta {\n  return itemKindMeta[kind];\n}\n\nexport const ALL_ITEM_KINDS = Object.freeze(\n  Object.keys(itemKindMeta)\n) as readonly ItemKind[];\n\nexport const ALL_KIND_ENTRIES: readonly [ItemKind, ItemMeta][] = Object.entries(\n  itemKindMeta\n).map(([k, v]) => {\n  if (!isItemKind(k)) throw new Error('unexpected item kind');\n  return [k, v];\n});\n","import { validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nexport const REQUIRED = {\n  type: validatorTypes.REQUIRED,\n} as const;\n\nexport const NAME_KIND = 'kind';\nexport const NAME_TITLE = 'title';\nexport const NAME_BUNDLES = 'bundles';\nexport const NAME_DESCRIPTION = 'description';\nexport const NAME_DURATION = 'duration';\nexport const NAME_URL = 'url';\n\nexport const NAME_PANEL_INTRODUCTION = 'panel-overview';\nexport const NAME_PREREQUISITES = 'prerequisites';\n\nexport const NAME_TASKS_ARRAY = 'tasks';\nexport const NAME_TASK_TITLES = 'task-titles';\n\nexport const NAME_TASK_DESCRIPTION = 'description';\nexport const NAME_TASK_ENABLE_WORK_CHECK = 'enable_work_check';\nexport const NAME_TASK_WORK_CHECK_INSTRUCTIONS = 'work_check_instructions';\nexport const NAME_TASK_WORK_CHECK_HELP = 'work_check_help';\n\nexport const MAX_TASKS = 10;\n","import {\n  FormSpy,\n  componentTypes,\n} from '@data-driven-forms/react-form-renderer';\nimport { WizardNextStepFunctionArgument } from '@data-driven-forms/pf4-component-mapper/wizard/wizard';\nimport React from 'react';\nimport {\n  NAME_TASKS_ARRAY,\n  NAME_TASK_DESCRIPTION,\n  NAME_TASK_ENABLE_WORK_CHECK,\n  NAME_TASK_TITLES,\n  NAME_TASK_WORK_CHECK_HELP,\n  NAME_TASK_WORK_CHECK_INSTRUCTIONS,\n} from './common';\n\nconst TASK_STEP_PREFIX = 'step-task-detail-';\n\nexport function isTaskStep(name: string) {\n  return name.startsWith(TASK_STEP_PREFIX);\n}\n\nexport function taskStepName(index: number): string {\n  return `${TASK_STEP_PREFIX}${index}`;\n}\n\nexport function taskFromStepName(name: string): number | null {\n  if (name.startsWith(TASK_STEP_PREFIX)) {\n    return parseInt(name.substring(TASK_STEP_PREFIX.length));\n  }\n\n  return null;\n}\n\nexport function makeTaskStep({\n  index,\n  panelStepTitle,\n  downloadStep,\n}: {\n  index: number;\n  panelStepTitle: string;\n  downloadStep: string;\n}) {\n  const taskName = `${NAME_TASKS_ARRAY}[${index}]`;\n\n  const workCheckEnabledCondition = {\n    when: `${taskName}.${NAME_TASK_ENABLE_WORK_CHECK}`,\n    is: true,\n  };\n\n  return {\n    name: taskStepName(index),\n    title: `Task ${index + 1}`,\n    substepOf: panelStepTitle,\n    fields: [\n      {\n        component: 'lr-task-title-preview',\n        name: `internal-task-title-preview[${index}]`,\n        index: index,\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: `internal-text-task-step-description`,\n        label: 'Add the content for this step of the panel.',\n      },\n      {\n        component: componentTypes.TEXTAREA,\n        name: `${taskName}.${NAME_TASK_DESCRIPTION}`,\n        label: 'Description',\n        resizeOrientation: 'vertical',\n      },\n      {\n        component: componentTypes.SWITCH,\n        name: `${taskName}.${NAME_TASK_ENABLE_WORK_CHECK}`,\n        label: \"Show 'Work check' section\",\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: `internal-text-check-work-explanation`,\n        condition: workCheckEnabledCondition,\n        label: \"Add the content to display in the 'Check your work box.\",\n      },\n      {\n        component: componentTypes.TEXTAREA,\n        name: `${taskName}.${NAME_TASK_WORK_CHECK_INSTRUCTIONS}`,\n        condition: workCheckEnabledCondition,\n        label: 'Work check instructions',\n        resizeOrientation: 'vertical',\n      },\n      {\n        component: componentTypes.TEXT_FIELD,\n        condition: workCheckEnabledCondition,\n        label: 'Optional failure message',\n        name: `${taskName}.${NAME_TASK_WORK_CHECK_HELP}`,\n        placeholder: 'Try completing the task again',\n      },\n    ],\n    nextStep: ({ values }: WizardNextStepFunctionArgument) => {\n      if (index + 1 < (values?.[NAME_TASK_TITLES]?.length ?? 0)) {\n        return taskStepName(index + 1);\n      }\n\n      return downloadStep;\n    },\n    buttonLabels: {\n      next: (\n        <FormSpy subscription={{ values: true }}>\n          {(state) => {\n            return index + 1 < state.values[NAME_TASK_TITLES].length\n              ? `Create task ${index + 2} content`\n              : 'Approve and generate files';\n          }}\n        </FormSpy>\n      ),\n    },\n  };\n}\n","import { ItemKind, metaForKind } from '../meta';\nimport { WizardField } from '@data-driven-forms/pf4-component-mapper';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { Title } from '@patternfly/react-core';\nimport { taskStepName } from './task';\nimport React from 'react';\nimport {\n  MAX_TASKS,\n  NAME_PANEL_INTRODUCTION,\n  NAME_PREREQUISITES,\n  NAME_TASK_TITLES,\n} from './common';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/dynamic/icons/plus-circle-icon';\n\nexport const PANEL_OVERVIEW_STEP_PREFIX = 'step-panel-overview-';\n\nexport function isPanelOverviewStep(name: string): boolean {\n  return name.startsWith(PANEL_OVERVIEW_STEP_PREFIX);\n}\n\nexport function panelOverviewStepName(kind: ItemKind): string {\n  return `${PANEL_OVERVIEW_STEP_PREFIX}${kind}`;\n}\n\nexport function makePanelOverviewStep({\n  kind,\n  panelStepTitle,\n}: {\n  kind: ItemKind;\n  panelStepTitle: string;\n}) {\n  const meta = metaForKind(kind);\n\n  const step: WizardField & { buttonLabels: { [key: string]: string } } = {\n    name: panelOverviewStepName(kind),\n    title: 'Create overview',\n    substepOf: panelStepTitle,\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'internal-text-overview-instructions',\n        label: `Share the required details to show on the introduction (first view) in the ${meta.displayName}. Details that you entered in the previous steps have been brought in automatically.`,\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'internal-text-overview-header',\n        label: <Title headingLevel=\"h3\">{meta.displayName} overview</Title>,\n      },\n      {\n        component: componentTypes.TEXTAREA,\n        name: NAME_PANEL_INTRODUCTION,\n        label: 'Introduction (Markdown)',\n        resizeOrientation: 'vertical',\n      },\n      {\n        component: componentTypes.FIELD_ARRAY,\n        name: NAME_PREREQUISITES,\n        label: 'Prerequisites',\n        noItemsMessage: 'No prerequisites have been added.',\n        fields: [\n          {\n            component: componentTypes.TEXT_FIELD,\n            label: 'Prerequisite',\n          },\n        ],\n      },\n      {\n        component: 'lr-string-array',\n        name: NAME_TASK_TITLES,\n        label: 'Tasks',\n        minItems: 1,\n        maxItems: MAX_TASKS,\n        initialValue: [''],\n        fullMessage: `Only ${MAX_TASKS} tasks can be added.`,\n        itemLabel: (index: number) => `Task ${index + 1}`,\n        addLabel: 'Add another task',\n        addLabelIcon: <PlusCircleIcon />,\n      },\n    ],\n    nextStep: taskStepName(0),\n    buttonLabels: {\n      next: 'Create task 1 content',\n    },\n  };\n\n  return step;\n}\n","import { ItemKind, ItemMeta, isItemKind, metaForKind } from '../meta';\nimport {\n  ConditionProp,\n  Field,\n  componentTypes,\n  dataTypes,\n  validatorTypes,\n} from '@data-driven-forms/react-form-renderer';\nimport React from 'react';\nimport { ChromeAPI } from '@redhat-cloud-services/types';\nimport {\n  NAME_BUNDLES,\n  NAME_DESCRIPTION,\n  NAME_DURATION,\n  NAME_KIND,\n  NAME_TITLE,\n  NAME_URL,\n  REQUIRED,\n} from './common';\nimport { panelOverviewStepName } from './panel-overview';\n\nexport type Bundles = ReturnType<ChromeAPI['getAvailableBundles']>;\n\nfunction kindMetaCondition(test: (meta: ItemMeta) => boolean): ConditionProp {\n  return {\n    when: NAME_KIND,\n    is: (kind: string | undefined) => {\n      return (\n        typeof kind === 'string' && isItemKind(kind) && test(metaForKind(kind))\n      );\n    },\n  };\n}\n\nconst DETAILS_STEP_PREFIX = 'step-details-';\n\nexport function isDetailsStep(name: string): boolean {\n  return name.startsWith(DETAILS_STEP_PREFIX);\n}\n\nexport function detailsStepName(kind: ItemKind): string {\n  return `${DETAILS_STEP_PREFIX}${kind}`;\n}\n\nexport function makeDetailsStep({\n  kind,\n  bundles,\n  downloadStep,\n}: {\n  kind: ItemKind;\n  bundles: Bundles;\n  downloadStep: string;\n}) {\n  const meta = metaForKind(kind);\n\n  const fields: Field[] = [];\n\n  fields.push(\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'internal-text-details-description',\n      label:\n        'Share the details required to populate a card in the correct places.',\n    },\n    {\n      component: componentTypes.SELECT,\n      name: NAME_BUNDLES,\n      label: 'Associated bundle(s)',\n      simpleValue: true,\n      isMulti: true,\n      placeholder: 'Select all that apply',\n      options: bundles.map((b) => ({\n        value: b.id,\n        label: `${b.title} (${b.id})`,\n      })),\n      isRequired: true,\n      validate: [REQUIRED],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_TITLE,\n      label: 'Resource title',\n      placeholder: 'Title to display on card',\n      isRequired: true,\n      validate: [REQUIRED],\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      name: NAME_DESCRIPTION,\n      label: 'Resource description',\n      placeholder:\n        \"Short description of resource and will auto-truncate on card with '...' after 3 lines of text.\",\n      isRequired: true,\n      validate: [REQUIRED],\n      resizeOrientation: 'vertical',\n    }\n  );\n\n  if (meta.fields.duration) {\n    fields.push({\n      component: 'lr-number-input',\n      name: NAME_DURATION,\n      label: 'Duration',\n      unit: <span className=\"pf-v5-u-text-nowrap\">minutes</span>,\n      dataType: dataTypes.NUMBER,\n      initialValue: 0,\n      minValue: 0,\n      isRequired: true,\n      validate: [REQUIRED],\n    });\n  }\n\n  if (meta.fields.url) {\n    fields.push({\n      component: componentTypes.TEXT_FIELD,\n      name: NAME_URL,\n      label: 'Endpoint URL',\n      placeholder: 'http://url.redhat.com/docs-n-things',\n      isRequired: true,\n      validate: [\n        REQUIRED,\n        {\n          type: validatorTypes.URL,\n        },\n      ],\n      condition: kindMetaCondition((meta) => meta.fields.url === true),\n    });\n  }\n\n  return {\n    name: detailsStepName(kind),\n    title: `${meta.displayName} details`,\n    fields: fields,\n    nextStep: meta.hasTasks ? panelOverviewStepName(kind) : downloadStep,\n    buttonLabels: {\n      next: meta.hasTasks\n        ? `Approve card and create ${meta.displayName} panel`\n        : 'Approve card and generate files',\n    },\n  };\n}\n","import { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { ALL_ITEM_KINDS, ALL_KIND_ENTRIES } from '../meta';\nimport { NAME_KIND, REQUIRED } from './common';\nimport { detailsStepName } from './details';\n\nconst STEP_KIND = 'step-kind';\n\nexport function isKindStep(name: string): boolean {\n  return name === STEP_KIND;\n}\n\nexport function makeKindStep() {\n  return {\n    name: STEP_KIND,\n    title: 'Select content type',\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'internal-text-kind-description',\n        label: \"Learning resources are grouped by their 'content type'.\",\n      },\n      {\n        component: componentTypes.RADIO,\n        name: NAME_KIND,\n        label: 'Select content type',\n        simpleValue: true,\n        options: ALL_KIND_ENTRIES.map(([name, value]) => ({\n          value: name,\n          label: value.displayName,\n        })),\n        isRequired: true,\n        validate: [REQUIRED],\n      },\n    ],\n    nextStep: {\n      when: NAME_KIND,\n      stepMapper: Object.fromEntries(\n        ALL_ITEM_KINDS.map((kind) => [kind, detailsStepName(kind)])\n      ),\n    },\n  };\n}\n","import React from 'react';\nimport { CreatorWizardStage } from './schema';\nimport { CreatorFiles } from './types';\n\nexport const CreatorWizardContext = React.createContext<{\n  files: CreatorFiles;\n  onChangeCurrentStage: (stage: CreatorWizardStage) => void;\n  resetCreator: () => void;\n}>({\n  files: [],\n  onChangeCurrentStage: () => {},\n  resetCreator: () => {},\n});\n","import React, { useContext } from 'react';\nimport { WizardButtonsProps } from '@data-driven-forms/pf4-component-mapper';\nimport { Button } from '@patternfly/react-core';\nimport { CreatorWizardContext } from '../context';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/dynamic/icons/plus-circle-icon';\n\nexport const STEP_DOWNLOAD = 'step-download';\n\nexport function isDownloadStep(name: string) {\n  return name === STEP_DOWNLOAD;\n}\n\nconst DownloadStepButtons = (props: WizardButtonsProps) => {\n  const { resetCreator } = useContext(CreatorWizardContext);\n\n  return (\n    <>\n      <Button\n        type=\"button\"\n        variant=\"secondary\"\n        isDisabled={props.disableBack}\n        onClick={() => props.handlePrev()}\n      >\n        Back\n      </Button>\n\n      <Button\n        type=\"button\"\n        variant=\"secondary\"\n        icon={<PlusCircleIcon />}\n        onClick={resetCreator}\n      >\n        Add another learning resource\n      </Button>\n    </>\n  );\n};\n\nexport function makeDownloadStep() {\n  return {\n    name: STEP_DOWNLOAD,\n    title: 'Download files',\n    fields: [\n      {\n        component: 'lr-download-files',\n        name: 'internal-download',\n      },\n    ],\n    hasNoBodyPadding: true,\n    buttons: DownloadStepButtons,\n  };\n}\n","import {\n  FormSpy,\n  Schema,\n  componentTypes,\n} from '@data-driven-forms/react-form-renderer';\nimport { ALL_ITEM_KINDS, metaForKind } from './meta';\nimport { ChromeAPI } from '@redhat-cloud-services/types';\nimport {\n  WizardButtonsProps,\n  WizardProps,\n} from '@data-driven-forms/pf4-component-mapper';\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { isTaskStep, makeTaskStep, taskFromStepName } from './steps/task';\nimport { isDetailsStep, makeDetailsStep } from './steps/details';\nimport {\n  isPanelOverviewStep,\n  makePanelOverviewStep,\n} from './steps/panel-overview';\nimport { isKindStep, makeKindStep } from './steps/kind';\nimport {\n  STEP_DOWNLOAD,\n  isDownloadStep,\n  makeDownloadStep,\n} from './steps/download';\nimport { MAX_TASKS, NAME_KIND, NAME_TASK_TITLES } from './steps/common';\n\nconst CustomButtons = (props: WizardButtonsProps) => {\n  return (\n    <FormSpy\n      subscription={{\n        pristine: true,\n        valid: true,\n        validating: true,\n        values: true, // The next step can depend on values.\n      }}\n    >\n      {(state) => {\n        // Ensure that the form never says \"Submit\", and hide the button on the\n        // last step.\n\n        const computedNext = props.nextStep\n          ? props.selectNext(props.nextStep, () => state)\n          : undefined;\n\n        return (\n          <>\n            <Button\n              type=\"button\"\n              variant=\"secondary\"\n              isDisabled={props.disableBack}\n              onClick={() => props.handlePrev()}\n            >\n              Back\n            </Button>\n\n            {computedNext !== undefined\n              ? props.renderNextButton({ submitLabel: 'Next' })\n              : null}\n          </>\n        );\n      }}\n    </FormSpy>\n  );\n};\n\nconst STEP_TITLE_PANEL_PARENT = 'Create panel';\n\nexport type CreatorWizardStage =\n  | { type: 'card' }\n  | { type: 'panel-overview' }\n  | {\n      type: 'task';\n      index: number;\n    }\n  | { type: 'download' };\n\nexport function stageFromStepName(name: string): CreatorWizardStage {\n  if (isKindStep(name) || isDetailsStep(name)) return { type: 'card' };\n\n  if (isPanelOverviewStep(name)) return { type: 'panel-overview' };\n\n  if (isTaskStep(name)) {\n    return {\n      type: 'task',\n      index: (() => {\n        const index = taskFromStepName(name);\n        if (index === null) throw new Error('unable to parse task index');\n\n        return index;\n      })(),\n    };\n  }\n\n  if (isDownloadStep(name)) return { type: 'download' };\n\n  throw new Error('unable to parse step name: ' + name);\n}\n\nexport function makeSchema(chrome: ChromeAPI): Schema {\n  const bundles = chrome.getAvailableBundles();\n\n  const taskSteps = [];\n\n  for (let i = 0; i < MAX_TASKS; ++i) {\n    taskSteps.push(\n      makeTaskStep({\n        index: i,\n        panelStepTitle: STEP_TITLE_PANEL_PARENT,\n        downloadStep: STEP_DOWNLOAD,\n      })\n    );\n  }\n\n  const rawWizardProps: WizardProps & {\n    component: string;\n    name: string;\n  } = {\n    component: componentTypes.WIZARD,\n    name: 'wizard-learning-resource',\n    isDynamic: true,\n    crossroads: [NAME_KIND, NAME_TASK_TITLES],\n    fields: [\n      makeKindStep(),\n      ...ALL_ITEM_KINDS.map((kind) =>\n        makeDetailsStep({ kind, bundles, downloadStep: STEP_DOWNLOAD })\n      ),\n      ...ALL_ITEM_KINDS.filter((kind) => metaForKind(kind).hasTasks).map(\n        (kind) =>\n          makePanelOverviewStep({\n            kind,\n            panelStepTitle: STEP_TITLE_PANEL_PARENT,\n          })\n      ),\n      ...taskSteps,\n      makeDownloadStep(),\n    ],\n  };\n\n  const wizardProps = {\n    ...rawWizardProps,\n    fields: rawWizardProps.fields.map((rawPage) => {\n      const page: typeof rawPage & {\n        buttonLabels?: { [key: string]: string };\n      } = { ...rawPage };\n\n      // Add an lr-wizard-spy component to all wizard steps. It must be here (rather\n      // than at the top level of the schema) so that it is inside the WizardContext.\n      page.fields = [\n        ...page.fields,\n        {\n          component: 'lr-wizard-spy',\n          name: `internal-wizard-spies.${page.name}`,\n        },\n      ];\n\n      // Use custom buttons for each step.\n      if (page.buttons === undefined) {\n        page.buttons = CustomButtons;\n      }\n\n      if (page.buttonLabels !== undefined) {\n        // Fix missing prop errors for button labels by adding defaults.\n        page.buttonLabels = {\n          next: 'Next',\n          cancel: 'Cancel',\n          back: 'Back',\n          ...page.buttonLabels,\n        };\n\n        // Don't show \"Submit\" as a label, since this form is never submitted.\n        if (page.buttonLabels.submit === undefined) {\n          page.buttonLabels.submit = page.buttonLabels.next;\n        }\n      }\n\n      return page;\n    }),\n  };\n\n  return {\n    fields: [wizardProps],\n  };\n}\n","import React, { ButtonHTMLAttributes, ReactNode } from 'react';\n\nconst SimpleButton = ({\n  type = 'button',\n  children,\n  icon,\n  ...rest\n}: ButtonHTMLAttributes<HTMLButtonElement> & {\n  icon?: ReactNode;\n}) => {\n  return (\n    <button\n      {...rest}\n      type={type}\n      className={`pf-v5-u-background-color-200 ${rest.className ?? ''}`}\n      style={{ border: 'none', ...(rest.style ?? {}) }}\n    >\n      <span className={icon !== undefined ? 'pf-v5-u-mr-sm' : ''}>\n        {children}\n      </span>\n      {icon}\n    </button>\n  );\n};\n\nexport default SimpleButton;\n","import {\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  NumberInput,\n} from '@patternfly/react-core';\nimport React, { useId } from 'react';\nimport {\n  UseFieldApiConfig,\n  useFieldApi,\n} from '@data-driven-forms/react-form-renderer';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/dynamic/icons/exclamation-circle-icon';\n\nconst DdfNumberInput = (props: UseFieldApiConfig) => {\n  const { input, meta, ...rest } = useFieldApi(props);\n  const reactId = useId();\n  const effectiveId = rest.id || reactId;\n\n  const showInvalid = meta.touched && meta.invalid;\n\n  const focusProps = {\n    onFocus: input.onFocus,\n    onBlur: input.onBlur,\n  };\n\n  return (\n    <FormGroup\n      label={rest.label}\n      isRequired={rest.isRequired}\n      fieldId={effectiveId}\n    >\n      <NumberInput\n        id={effectiveId}\n        inputName={input.name}\n        value={input.value}\n        validated={showInvalid ? 'error' : 'default'}\n        min={rest.minValue}\n        max={rest.maxValue}\n        unit={rest.unit}\n        onPlus={() => input.onChange((input.value ?? 0) + 1)}\n        onMinus={() => input.onChange((input.value ?? 0) - 1)}\n        onChange={(e) => input.onChange(e.currentTarget.valueAsNumber)}\n        {...focusProps}\n        plusBtnProps={focusProps}\n        minusBtnProps={focusProps}\n      />\n\n      {showInvalid ? (\n        <FormHelperText>\n          <HelperText>\n            <HelperTextItem variant={'error'} icon={<ExclamationCircleIcon />}>\n              {meta.error}\n            </HelperTextItem>\n          </HelperText>\n        </FormHelperText>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default DdfNumberInput;\n","import React, { useId } from 'react';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  FormGroup,\n  FormSection,\n  TextInput,\n} from '@patternfly/react-core';\nimport MinusCircleIcon from '@patternfly/react-icons/dist/dynamic/icons/minus-circle-icon';\nimport {\n  UseFieldApiConfig,\n  useFieldApi,\n} from '@data-driven-forms/react-form-renderer';\n\nconst DEFAULT_VALUE: string[] = [];\nconst DEFAULT_LABEL = (index: number) => `Item ${index + 1}`;\n\nconst StringArrayInput = (props: UseFieldApiConfig) => {\n  const id = useId();\n\n  const { input, ...rest } = useFieldApi(props);\n  const reactId = useId();\n  const effectiveId = rest.id || reactId;\n\n  const defaultItem = rest.defaultItem ?? '';\n\n  const value: string[] = input.value ?? DEFAULT_VALUE;\n  const itemLabel: (index: number) => string = rest.itemLabel ?? DEFAULT_LABEL;\n\n  const minItems: number | undefined = rest.minItems;\n  const maxItems: number | undefined = rest.maxItems;\n\n  if (minItems !== undefined) {\n    if (value.length < minItems) {\n      const newValue = [...value];\n\n      for (let i = 0; i < minItems - value.length; ++i) {\n        newValue.push(defaultItem);\n      }\n\n      input.onChange(newValue);\n    }\n  }\n\n  const canRemove = minItems === undefined || value.length > minItems;\n  const canAdd = maxItems === undefined || value.length < maxItems;\n\n  const addLabel = rest.addLabel ?? 'Add item';\n  const addLabelIcon = rest.addLabelIcon;\n\n  const fullMessage = rest.fullMessage ?? 'No more items can be added';\n\n  return (\n    <FormSection\n      title={rest.label ?? 'Array'}\n      id={effectiveId}\n      name={input.name}\n      className=\"pf-v5-u-m-0\"\n    >\n      <div className=\"pf-v5-c-form pf-m-horizontal\">\n        {value.map((element, index) => {\n          const elementId = `${id}-${index}-title`;\n\n          return (\n            <FormGroup\n              key={index}\n              label={itemLabel(index)}\n              fieldId={elementId}\n              isRequired\n            >\n              <Flex gap={{ default: 'gapNone' }}>\n                <FlexItem grow={{ default: 'grow' }}>\n                  <TextInput\n                    id={elementId}\n                    name={`${input.name}[index]`}\n                    isRequired\n                    type=\"text\"\n                    value={element}\n                    onChange={(_, newItem) => {\n                      const newValue = [...value];\n                      newValue[index] = newItem;\n\n                      input.onChange(newValue);\n                    }}\n                  />\n                </FlexItem>\n\n                {canRemove ? (\n                  <FlexItem>\n                    <Button\n                      aria-label={`Remove item ${index + 1}`}\n                      variant=\"plain\"\n                      icon={<MinusCircleIcon />}\n                      onClick={() => input.onChange(value.toSpliced(index, 1))}\n                    />\n                  </FlexItem>\n                ) : null}\n              </Flex>\n            </FormGroup>\n          );\n        })}\n      </div>\n\n      {canAdd ? (\n        <Button\n          variant=\"link\"\n          icon={addLabelIcon}\n          onClick={() => input.onChange(value.concat(defaultItem))}\n          isInline={true}\n        >\n          {addLabel}\n        </Button>\n      ) : (\n        <span>{fullMessage}</span>\n      )}\n    </FormSection>\n  );\n};\n\nexport default StringArrayInput;\n","import {\n  Banner,\n  Button,\n  ClipboardCopy,\n  ClipboardCopyVariant,\n  Flex,\n  FlexItem,\n  Stack,\n  StackItem,\n  Text,\n  Title,\n} from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/dynamic/icons/check-circle-icon';\nimport DownloadIcon from '@patternfly/react-icons/dist/dynamic/icons/download-icon';\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { ItemKind, isItemKind, metaForKind } from './meta';\nimport { QuickStartSpec, QuickStartTask } from '@patternfly/quickstarts';\nimport {\n  AnyObject,\n  FormRenderer,\n  FormSpy,\n} from '@data-driven-forms/react-form-renderer';\nimport DdfWizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport pf4ComponentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport { CreatorWizardStage, makeSchema, stageFromStepName } from './schema';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { downloadFile } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport SimpleButton from '../SimpleButton';\nimport DdfNumberInput from '../DdfNumberInput';\nimport {\n  NAME_BUNDLES,\n  NAME_DESCRIPTION,\n  NAME_DURATION,\n  NAME_KIND,\n  NAME_PANEL_INTRODUCTION,\n  NAME_PREREQUISITES,\n  NAME_TASKS_ARRAY,\n  NAME_TASK_TITLES,\n  NAME_TITLE,\n  NAME_URL,\n} from './steps/common';\nimport StringArrayInput from '../StringArrayInput';\nimport { CreatorWizardContext } from './context';\nimport { CreatorFiles } from './types';\n\nexport type CreatorWizardProps = {\n  onChangeKind: (newKind: ItemKind | null) => void;\n  onChangeQuickStartSpec: (newValue: QuickStartSpec) => void;\n  onChangeBundles: (newValue: string[]) => void;\n  onChangeCurrentStage: (stage: CreatorWizardStage) => void;\n  resetCreator: () => void;\n  files: CreatorFiles;\n};\n\ntype FormValue = AnyObject;\n\ntype UpdaterProps = {\n  values: FormValue;\n  onChangeKind: (newKind: ItemKind | null) => void;\n  onChangeBundles: (bundles: string[]) => void;\n  onChangeQuickStartSpec: (newValue: QuickStartSpec) => void;\n};\n\nconst DEFAULT_TASK_TITLES: string[] = [''];\n\nexport const EMPTY_TASK: QuickStartTask = {};\n\ntype FormTaskValue = {\n  description?: string;\n  enable_work_check?: boolean;\n  work_check_instructions?: string;\n  work_check_help?: string;\n};\n\nconst PropUpdater = ({\n  values,\n  onChangeKind,\n  onChangeBundles,\n  onChangeQuickStartSpec,\n}: UpdaterProps) => {\n  const bundles = values[NAME_BUNDLES];\n\n  useEffect(() => {\n    onChangeBundles(bundles ?? []);\n  }, [bundles]);\n\n  const rawKind: string | undefined = values[NAME_KIND];\n  const title: string | undefined = values[NAME_TITLE];\n  const description: string | undefined = values[NAME_DESCRIPTION];\n  const url: string | undefined = values[NAME_URL];\n  const duration: number | string | undefined = values[NAME_DURATION];\n  const prerequisites: string[] | undefined = values[NAME_PREREQUISITES];\n  const introduction: string | undefined = values[NAME_PANEL_INTRODUCTION];\n\n  const taskTitles: string[] = values[NAME_TASK_TITLES] ?? DEFAULT_TASK_TITLES;\n  const taskValues: FormTaskValue[] | undefined = values[NAME_TASKS_ARRAY];\n\n  const kind =\n    typeof rawKind === 'string' && isItemKind(rawKind) ? rawKind : null;\n\n  const meta = kind !== null ? metaForKind(kind) : null;\n\n  useEffect(() => {\n    onChangeKind(kind);\n  }, [kind]);\n\n  const effectiveTasks = useMemo(() => {\n    if (meta?.hasTasks !== true) return undefined;\n\n    const out: QuickStartTask[] = [];\n\n    // The task titles array determines how many tasks there should be.\n    for (let i = 0; i < taskTitles.length; ++i) {\n      const taskValue = taskValues?.[i];\n\n      out.push({\n        title: taskTitles[i],\n        description: taskValue?.description ?? '',\n        review: taskValue?.enable_work_check\n          ? {\n              instructions: taskValue?.work_check_instructions,\n              failedTaskHelp: taskValue?.work_check_help,\n            } ?? ''\n          : undefined,\n      });\n    }\n\n    return out;\n  }, [meta, taskTitles, taskValues]);\n\n  useEffect(() => {\n    onChangeQuickStartSpec({\n      type:\n        meta !== null\n          ? {\n              text: meta.displayName,\n              color: meta.tagColor,\n            }\n          : undefined,\n      displayName: title ?? '',\n      description: description ?? '',\n      icon: null,\n      link:\n        meta?.fields?.url && url !== undefined\n          ? {\n              text: 'View documentation',\n              href: url,\n            }\n          : undefined,\n      durationMinutes:\n        meta?.fields?.duration && typeof duration === 'number'\n          ? duration\n          : undefined,\n      prerequisites: meta?.hasTasks === true ? prerequisites : undefined,\n      introduction: meta?.hasTasks === true ? introduction : undefined,\n      tasks: effectiveTasks,\n    });\n\n    onChangeKind(kind);\n  }, [\n    meta,\n    rawKind,\n    title,\n    description,\n    url,\n    duration,\n    prerequisites,\n    introduction,\n    effectiveTasks,\n  ]);\n\n  // Allow use as JSX component\n  return undefined;\n};\n\nconst FileDownload = () => {\n  const { files } = useContext(CreatorWizardContext);\n\n  function doDownload(file: { content: string; name: string }) {\n    const dotIndex = file.name.lastIndexOf('.');\n    const baseName =\n      dotIndex !== -1 ? file.name.substring(0, dotIndex) : file.name;\n    const extension =\n      dotIndex !== -1 ? file.name.substring(dotIndex + 1) : 'txt';\n\n    downloadFile(file.content, baseName, extension);\n  }\n\n  return (\n    <div>\n      <Banner screenReaderText=\"Files successfully generated!\" variant=\"green\">\n        <Flex spaceItems={{ default: 'spaceItemsSm' }}>\n          <FlexItem>\n            <CheckCircleIcon />\n          </FlexItem>\n          <FlexItem>Files successfully generated!</FlexItem>\n        </Flex>\n      </Banner>\n\n      <Stack hasGutter className=\"pf-v5-u-m-lg\">\n        <StackItem>\n          <Text>\n            Download these files and use them to create the learning resource PR\n            in the{' '}\n            <a\n              href=\"https://github.com/RedHatInsights/quickstarts/tree/main/docs/quickstarts\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              {' '}\n              correct repo\n            </a>\n            .\n          </Text>\n        </StackItem>\n\n        <StackItem>\n          <Button\n            variant=\"primary\"\n            icon={<DownloadIcon />}\n            onClick={() => files.forEach((file) => doDownload(file))}\n          >\n            Download all ({files.length}) files\n          </Button>\n        </StackItem>\n\n        {files.map((file) => (\n          <StackItem key={file.name}>\n            <SimpleButton\n              icon={<DownloadIcon />}\n              className=\"pf-v5-u-mb-sm\"\n              onClick={() => doDownload(file)}\n            >\n              {file.name}\n            </SimpleButton>\n\n            <ClipboardCopy\n              isCode\n              isReadOnly\n              variant={ClipboardCopyVariant.expansion}\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n            >\n              {file.content}\n            </ClipboardCopy>\n          </StackItem>\n        ))}\n      </Stack>\n    </div>\n  );\n};\n\n// Watches for changes in the current step, then calls onChangeCurrentTask so\n// that Creator can update the live preview.\nconst WizardSpy = () => {\n  const wizardContext = useContext(DdfWizardContext);\n  const creatorContext = useContext(CreatorWizardContext);\n\n  useEffect(() => {\n    creatorContext.onChangeCurrentStage(\n      stageFromStepName(wizardContext.currentStep.name)\n    );\n  }, [wizardContext.currentStep.name]);\n\n  return undefined;\n};\n\nconst TaskTitlePreview = ({ index }: { index: number }) => {\n  return (\n    <FormSpy subscription={{ values: true }}>\n      {(state) => (\n        <Title headingLevel=\"h3\">\n          {state.values?.[NAME_TASK_TITLES]?.[index] ?? ''}\n        </Title>\n      )}\n    </FormSpy>\n  );\n};\n\nconst CreatorWizard = ({\n  onChangeKind,\n  onChangeQuickStartSpec,\n  onChangeBundles,\n  onChangeCurrentStage,\n  resetCreator,\n  files,\n}: CreatorWizardProps) => {\n  const chrome = useChrome();\n  const schema = useMemo(() => makeSchema(chrome), []);\n\n  const context = useMemo(\n    () => ({\n      files,\n      onChangeCurrentStage,\n      resetCreator,\n    }),\n    [files, onChangeCurrentStage]\n  );\n\n  const componentMapper = {\n    ...pf4ComponentMapper,\n    'lr-number-input': DdfNumberInput,\n    'lr-download-files': FileDownload,\n    'lr-wizard-spy': WizardSpy,\n    'lr-task-title-preview': TaskTitlePreview,\n    'lr-string-array': StringArrayInput,\n  };\n\n  return (\n    <CreatorWizardContext.Provider value={context}>\n      <FormRenderer\n        onSubmit={() => {}}\n        schema={schema}\n        componentMapper={componentMapper}\n      >\n        {({ formFields }) => (\n          <form onSubmit={(e) => e.preventDefault()} className=\"pf-v5-c-form\">\n            <FormSpy subscription={{ values: true }}>\n              {/*\n            In order to display the live preview, we need to update the parent\n            whenever the form state changes. Unfortunately, as best as I can\n            tell, there is no way to pass FormRenderer a callback that's called\n            whenever a value changes.\n\n            The example at [0] shows using a custom component in the schema to\n            watch the values, but it seems clearer to just add it once here\n            (and it avoids introducing another custom component name).\n\n            [0]: https://github.com/data-driven-forms/react-forms/blob/master/packages/react-renderer-demo/src/examples/components/examples/value-listener.js\n             */}\n              {(props) => (\n                <PropUpdater\n                  values={props.values}\n                  onChangeKind={onChangeKind}\n                  onChangeBundles={onChangeBundles}\n                  onChangeQuickStartSpec={onChangeQuickStartSpec}\n                />\n              )}\n            </FormSpy>\n            <>{formFields}</>\n          </form>\n        )}\n      </FormRenderer>\n    </CreatorWizardContext.Provider>\n  );\n};\n\nexport default CreatorWizard;\n","import {\n  AllQuickStartStates,\n  QuickStart,\n  QuickStartContext,\n  QuickStartDrawer,\n  QuickStartStatus,\n  useValuesForQuickStartContext,\n} from '@patternfly/quickstarts';\nimport { Flex, FlexItem, Title } from '@patternfly/react-core';\nimport WrappedQuickStartTile from '../WrappedQuickStartTile';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { ItemMeta } from './meta';\nimport './CreatorPreview.scss';\nimport { CreatorWizardStage } from './schema';\n\nconst CreatorPreview = ({\n  kindMeta,\n  quickStart,\n  currentStage,\n}: {\n  kindMeta: ItemMeta | null;\n  quickStart: QuickStart;\n  currentStage: CreatorWizardStage;\n}) => {\n  const allQuickStarts = useMemo(() => [quickStart], [quickStart]);\n  const [quickStartStates, setQuickStartStates] = useState<AllQuickStartStates>(\n    {}\n  );\n\n  const [prevStage, setPrevStage] = useState<typeof currentStage | null>(\n    currentStage\n  );\n\n  const parentContext = useContext(QuickStartContext);\n\n  const showPanel =\n    kindMeta?.hasTasks &&\n    (currentStage.type === 'panel-overview' || currentStage.type === 'task');\n\n  const quickstartValues = useValuesForQuickStartContext({\n    allQuickStarts: [quickStart],\n    activeQuickStartID: showPanel ? quickStart.metadata.name : '',\n    setActiveQuickStartID: () => {},\n    allQuickStartStates: quickStartStates,\n    setAllQuickStartStates: (states) => setQuickStartStates(states),\n    useQueryParams: false,\n    footer: parentContext.footer,\n    focusOnQuickStart: false,\n  });\n\n  if (quickstartValues.allQuickStarts?.[0] !== quickStart) {\n    quickstartValues.setAllQuickStarts?.([quickStart]);\n  }\n\n  if (prevStage !== currentStage) {\n    setPrevStage(currentStage);\n\n    if (currentStage.type === 'panel-overview') {\n      quickstartValues.restartQuickStart?.(\n        quickStart.metadata.name,\n        quickStart.spec.tasks?.length ?? 0\n      );\n    } else if (currentStage.type === 'task') {\n      quickstartValues.setQuickStartTaskNumber?.(\n        quickStart.metadata.name,\n        currentStage.index\n      );\n    }\n  }\n\n  return (\n    <Flex\n      direction={{ default: 'column' }}\n      gap={{ default: 'gapNone' }}\n      className=\"pf-v5-u-h-100\"\n    >\n      <FlexItem>\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mb-md\">\n          Live {showPanel ? kindMeta.displayName : 'card'} preview\n        </Title>\n      </FlexItem>\n\n      <FlexItem grow={{ default: 'grow' }}>\n        <QuickStartContext.Provider value={quickstartValues}>\n          <QuickStartDrawer quickStarts={allQuickStarts}>\n            <section>\n              {!showPanel ? (\n                <div className=\"rc-tile-preview-wrapper\">\n                  <WrappedQuickStartTile\n                    quickStart={quickStart}\n                    bookmarks={null}\n                    isActive={false}\n                    status={QuickStartStatus.NOT_STARTED}\n                  />\n                </div>\n              ) : null}\n            </section>\n          </QuickStartDrawer>\n        </QuickStartContext.Provider>\n      </FlexItem>\n    </Flex>\n  );\n};\n\nexport default CreatorPreview;\n","import React, { useMemo, useState } from 'react';\nimport YAML from 'yaml';\nimport {\n  Grid,\n  GridItem,\n  PageGroup,\n  PageSection,\n  Title,\n} from '@patternfly/react-core';\nimport { QuickStart, QuickStartSpec } from '@patternfly/quickstarts';\nimport CreatorWizard, { EMPTY_TASK } from './components/creator/CreatorWizard';\nimport { ItemKind, metaForKind } from './components/creator/meta';\nimport CreatorPreview from './components/creator/CreatorPreview';\nimport './Creator.scss';\nimport { CreatorWizardStage } from './components/creator/schema';\n\nconst BASE_METADATA = {\n  name: 'test-quickstart',\n};\n\nfunction makeDemoQuickStart(\n  kind: ItemKind | null,\n  baseQuickStart: QuickStart\n): QuickStart {\n  const kindMeta = kind !== null ? metaForKind(kind) : null;\n\n  return {\n    ...baseQuickStart,\n    metadata: {\n      ...baseQuickStart.metadata,\n      name: 'test-quickstart',\n      ...(kindMeta?.extraMetadata ?? {}),\n    },\n  };\n}\n\nconst CreatorInternal = ({ resetCreator }: { resetCreator: () => void }) => {\n  const [rawKind, setRawKind] = useState<ItemKind | null>(null);\n\n  const [rawQuickStart, setRawQuickStart] = useState<QuickStart>({\n    metadata: {\n      name: 'test-quickstart',\n    },\n    spec: {\n      displayName: '',\n      icon: null,\n      description: '',\n    },\n  });\n\n  const selectedKind =\n    rawKind !== null ? { id: rawKind, meta: metaForKind(rawKind) } : null;\n\n  const [bundles, setBundles] = useState<string[]>([]);\n  const [currentStage, setCurrentStage] = useState<CreatorWizardStage>({\n    type: 'card',\n  });\n\n  const isDownloadStage = currentStage.type !== 'download';\n\n  const updateSpec = (\n    updater: (old: QuickStartSpec) => Partial<QuickStartSpec>\n  ) => {\n    setRawQuickStart((old) => ({\n      ...old,\n      spec: {\n        ...old.spec,\n        ...updater(old.spec),\n      },\n    }));\n  };\n\n  const setKind = (newKind: ItemKind | null) => {\n    if (newKind !== null) {\n      const meta = metaForKind(newKind);\n\n      setRawQuickStart((old) => {\n        const updates: Partial<QuickStart> = {};\n\n        updates.spec = { ...old.spec };\n\n        updates.spec.type = {\n          text: meta.displayName,\n          color: meta.tagColor,\n        };\n\n        if (\n          meta.hasTasks &&\n          (old.spec.tasks === undefined || old.spec.tasks.length === 0)\n        ) {\n          updates.spec.tasks = [EMPTY_TASK];\n        }\n\n        if (!meta.hasTasks) {\n          updates.spec.tasks = undefined;\n          updates.spec.introduction = undefined;\n          updates.spec.prerequisites = [];\n        }\n\n        if (!meta.fields.url) updates.spec.link = undefined;\n        if (!meta.fields.duration) updates.spec.durationMinutes = undefined;\n\n        updates.metadata = { ...BASE_METADATA, ...meta.extraMetadata };\n\n        return { ...old, ...updates };\n      });\n    }\n\n    setRawKind(newKind);\n  };\n\n  const quickStart = useMemo(\n    () => makeDemoQuickStart(rawKind, rawQuickStart),\n    [rawKind, rawQuickStart]\n  );\n\n  const files = useMemo(() => {\n    const effectiveName = quickStart.spec.displayName\n      .toLowerCase()\n      .replaceAll(/\\s/g, '-')\n      .replaceAll(/(^-+)|(-+$)/g, '');\n\n    const adjustedQuickstart = {\n      ...quickStart,\n      spec: {\n        ...quickStart.spec,\n        icon: undefined,\n      },\n      metadata: {\n        ...quickStart.metadata,\n        name: effectiveName,\n      },\n    };\n\n    return [\n      {\n        name: 'metadata.yaml',\n        content: YAML.stringify({\n          kind: 'QuickStarts',\n          name: effectiveName,\n          tags: bundles\n            .toSorted()\n            .map((bundle) => ({ kind: 'bundle', value: bundle })),\n        }),\n      },\n      {\n        name: `${effectiveName}.yaml`,\n        content: YAML.stringify(adjustedQuickstart),\n      },\n    ];\n  }, [quickStart, bundles]);\n\n  return (\n    <PageGroup>\n      <PageSection className=\"rc-header\">\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          Add new learning resource\n        </Title>\n\n        <p>\n          Add cards to the learning resources spaces within console.redhat.com.{' '}\n          <a\n            href=\"https://docs.google.com/presentation/d/1FiwBc_VuCxvobv80suXww0eKEs381MgR1WK6q7_DynY/edit#slide=id.g1b95fa54a9f_0_801\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Learn more about Hybrid Cloud Console Learning Resources.\n          </a>\n        </p>\n      </PageSection>\n\n      <PageSection isFilled padding={{ default: 'noPadding' }}>\n        <Grid hasGutter className=\"pf-v5-u-h-100 pf-v5-u-w-100\">\n          <GridItem span={12} lg={isDownloadStage ? 6 : 12}>\n            <CreatorWizard\n              onChangeKind={setKind}\n              onChangeQuickStartSpec={(spec) => {\n                updateSpec(() => spec);\n              }}\n              onChangeBundles={setBundles}\n              onChangeCurrentStage={setCurrentStage}\n              resetCreator={resetCreator}\n              files={files}\n            />\n          </GridItem>\n\n          {isDownloadStage ? (\n            <GridItem span={12} lg={6} className=\"pf-v5-u-pt-md-on-lg\">\n              <CreatorPreview\n                kindMeta={selectedKind?.meta ?? null}\n                quickStart={quickStart}\n                currentStage={currentStage}\n              />\n            </GridItem>\n          ) : null}\n        </Grid>\n      </PageSection>\n    </PageGroup>\n  );\n};\n\nconst Creator = () => {\n  const [resetCount, setResetCount] = useState(0n);\n\n  return (\n    <CreatorInternal\n      key={resetCount}\n      resetCreator={() => setResetCount((old) => old + 1n)}\n    />\n  );\n};\n\nexport default Creator;\n","import React, { SyntheticEvent } from 'react';\nimport {\n  QuickStart,\n  QuickStartStatus,\n  QuickStartTile,\n} from '@patternfly/quickstarts';\n\nimport { BookmarkIcon, OutlinedBookmarkIcon } from '@patternfly/react-icons';\nimport { Icon } from '@patternfly/react-core';\nimport './WrappedQuickStartTile.scss';\n\nconst OutlinedBookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <OutlinedBookmarkIcon />\n  </Icon>\n);\n\nconst BookmarkedIcon = () => (\n  <Icon className=\"lr-c-bookmark__icon\">\n    <BookmarkIcon />\n  </Icon>\n);\n\ntype BookmarksConfig = {\n  isFavorite: boolean;\n  setFavorite: (newState: boolean) => Promise<void>;\n} | null;\n\nconst WrappedQuickStartTile = ({\n  quickStart,\n  bookmarks,\n  isActive,\n  status,\n}: {\n  quickStart: QuickStart;\n  bookmarks: BookmarksConfig;\n  isActive: boolean;\n  status: QuickStartStatus;\n}) => {\n  return (\n    <div className=\"lr-c-quickstart_tile\">\n      <QuickStartTile\n        action={\n          bookmarks !== null\n            ? {\n                'aria-label': bookmarks.isFavorite\n                  ? `Remove quickstart ${quickStart.spec.displayName} from bookmarks.`\n                  : `Bookmark quickstart ${quickStart.spec.displayName}.`,\n                icon: bookmarks.isFavorite\n                  ? BookmarkedIcon\n                  : OutlinedBookmarkedIcon,\n                onClick: (e: SyntheticEvent<Element, Event>): void => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  bookmarks.setFavorite(!bookmarks.isFavorite);\n                },\n              }\n            : undefined\n        }\n        quickStart={{\n          ...quickStart,\n          spec: {\n            ...quickStart.spec,\n            // remove any lingering icons\n            icon: null,\n          },\n        }}\n        isActive={isActive}\n        status={status}\n      />\n    </div>\n  );\n};\n\nexport default WrappedQuickStartTile;\n"],"names":["itemKindMeta","Object","freeze","documentation","displayName","tagColor","fields","url","extraMetadata","externalDocumentation","quickstart","hasDuration","duration","hasTasks","learningPath","other","otherResource","isItemKind","kind","hasOwn","metaForKind","ALL_ITEM_KINDS","keys","ALL_KIND_ENTRIES","entries","map","k","v","Error","REQUIRED","type","NAME_KIND","NAME_TITLE","NAME_BUNDLES","NAME_DESCRIPTION","NAME_DURATION","NAME_PANEL_INTRODUCTION","NAME_PREREQUISITES","NAME_TASKS_ARRAY","NAME_TASK_TITLES","NAME_TASK_DESCRIPTION","NAME_TASK_ENABLE_WORK_CHECK","NAME_TASK_WORK_CHECK_INSTRUCTIONS","NAME_TASK_WORK_CHECK_HELP","TASK_STEP_PREFIX","taskStepName","index","makeTaskStep","panelStepTitle","downloadStep","taskName","workCheckEnabledCondition","when","is","name","title","substepOf","component","PLAIN_TEXT","label","TEXTAREA","resizeOrientation","SWITCH","condition","TEXT_FIELD","placeholder","nextStep","values","length","buttonLabels","next","subscription","state","PANEL_OVERVIEW_STEP_PREFIX","panelOverviewStepName","DETAILS_STEP_PREFIX","detailsStepName","STEP_KIND","CreatorWizardContext","files","onChangeCurrentStage","resetCreator","STEP_DOWNLOAD","DownloadStepButtons","props","useContext","Button","variant","isDisabled","disableBack","onClick","handlePrev","icon","CustomButtons","pristine","valid","validating","computedNext","selectNext","undefined","renderNextButton","submitLabel","STEP_TITLE_PANEL_PARENT","children","rest","className","style","border","input","meta","reactId","useId","effectiveId","id","showInvalid","touched","invalid","focusProps","onFocus","onBlur","FormGroup","isRequired","fieldId","NumberInput","inputName","value","validated","min","minValue","max","maxValue","unit","onPlus","onChange","onMinus","e","currentTarget","valueAsNumber","plusBtnProps","minusBtnProps","FormHelperText","HelperText","HelperTextItem","error","DEFAULT_VALUE","DEFAULT_LABEL","defaultItem","itemLabel","minItems","maxItems","newValue","i","push","canRemove","canAdd","addLabel","addLabelIcon","fullMessage","FormSection","element","elementId","key","Flex","gap","default","FlexItem","grow","TextInput","_","newItem","toSpliced","concat","isInline","DEFAULT_TASK_TITLES","EMPTY_TASK","PropUpdater","onChangeKind","onChangeBundles","onChangeQuickStartSpec","bundles","useEffect","rawKind","description","prerequisites","introduction","taskTitles","taskValues","effectiveTasks","useMemo","out","taskValue","review","enable_work_check","instructions","work_check_instructions","failedTaskHelp","work_check_help","text","color","link","href","durationMinutes","tasks","FileDownload","doDownload","file","dotIndex","lastIndexOf","baseName","substring","extension","content","Banner","screenReaderText","spaceItems","Stack","hasGutter","StackItem","Text","target","rel","forEach","ClipboardCopy","isCode","isReadOnly","expansion","hoverTip","clickTip","WizardSpy","wizardContext","creatorContext","isKindStep","startsWith","isDetailsStep","isPanelOverviewStep","isTaskStep","parseInt","taskFromStepName","isDownloadStep","stageFromStepName","currentStep","TaskTitlePreview","Title","headingLevel","chrome","useChrome","schema","getAvailableBundles","taskSteps","rawWizardProps","WIZARD","isDynamic","crossroads","RADIO","simpleValue","options","validate","stepMapper","fromEntries","test","SELECT","isMulti","b","dataType","NUMBER","initialValue","URL","makeDetailsStep","filter","FIELD_ARRAY","noItemsMessage","makePanelOverviewStep","hasNoBodyPadding","buttons","rawPage","page","cancel","back","submit","makeSchema","context","componentMapper","Provider","onSubmit","formFields","preventDefault","kindMeta","quickStart","currentStage","allQuickStarts","quickStartStates","setQuickStartStates","useState","prevStage","setPrevStage","parentContext","QuickStartContext","showPanel","quickstartValues","useValuesForQuickStartContext","activeQuickStartID","metadata","setActiveQuickStartID","allQuickStartStates","setAllQuickStartStates","states","useQueryParams","footer","focusOnQuickStart","setAllQuickStarts","restartQuickStart","spec","setQuickStartTaskNumber","direction","size","QuickStartDrawer","quickStarts","WrappedQuickStartTile","bookmarks","isActive","status","QuickStartStatus","NOT_STARTED","BASE_METADATA","CreatorInternal","setRawKind","rawQuickStart","setRawQuickStart","selectedKind","setBundles","setCurrentStage","isDownloadStage","baseQuickStart","makeDemoQuickStart","effectiveName","toLowerCase","replaceAll","adjustedQuickstart","tags","toSorted","bundle","PageGroup","PageSection","isFilled","padding","Grid","GridItem","span","lg","newKind","old","updates","updater","resetCount","setResetCount","OutlinedBookmarkedIcon","BookmarkedIcon","QuickStartTile","action","isFavorite","stopPropagation","setFavorite"],"sourceRoot":""}